/*
 Navicat Premium Dump SQL

 Source Server         : mysql-dev
 Source Server Type    : MySQL
 Source Server Version : 90200 (9.2.0)
 Source Host           : localhost:3306
 Source Schema         : astro_code

 Target Server Type    : MySQL
 Target Server Version : 90200 (9.2.0)
 File Encoding         : 65001

 Date: 25/09/2025 15:21:04
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for data_library
-- ----------------------------
DROP TABLE IF EXISTS `data_library`;
CREATE TABLE `data_library`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `user_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '用户ID',
  `set_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '题集ID',
  `is_set` tinyint(1) NULL DEFAULT 0 COMMENT '是否是题集提交',
  `problem_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '题目ID',
  `submit_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '提交ID',
  `submit_time` datetime NULL DEFAULT NULL COMMENT '提交时间',
  `language` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '编程语言',
  `code` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '源代码',
  `code_length` int NOT NULL DEFAULT 0 COMMENT '源代码长度',
  `access_count` int NULL DEFAULT 0 COMMENT '访问次数',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `problem_id`(`problem_id` ASC, `user_id` ASC) USING BTREE,
  INDEX `user_id`(`user_id` ASC, `problem_id` ASC) USING BTREE,
  INDEX `submit_id`(`submit_id` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '提交样本库' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of data_library
-- ----------------------------
INSERT INTO `data_library` VALUES ('1971077735423541250', '1', '', 0, '1958869993346752514', '1971098574760124417', '2025-09-25 14:24:56', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 0, '2025-09-25 13:02:08', '0', '2025-09-25 14:24:57', '0');
INSERT INTO `data_library` VALUES ('1971077735423541251', '2', '', 0, '1958869993346752514', '1971079514089463809', '2025-09-25 13:09:12', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 24, 0, '2025-09-25 13:02:08', '0', '2025-09-25 14:24:57', '0');
INSERT INTO `data_library` VALUES ('1971078132393443330', '1', '1950817439404732418', 1, '1958869993346752514', '1971079523446956034', '2025-09-25 13:09:14', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 0, '2025-09-25 13:03:42', '0', '2025-09-25 13:09:14', '0');

-- ----------------------------
-- Table structure for data_problem
-- ----------------------------
DROP TABLE IF EXISTS `data_problem`;
CREATE TABLE `data_problem`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `display_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '展示ID',
  `category_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT '0' COMMENT '分类',
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '标题',
  `source` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '来源',
  `url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '链接',
  `max_time` int NULL DEFAULT 0 COMMENT '时间限制',
  `max_memory` int NULL DEFAULT 0 COMMENT '内存限制',
  `description` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL COMMENT '描述',
  `test_case` json NULL COMMENT '用例',
  `allowed_languages` json NULL COMMENT '开放语言',
  `difficulty` int NULL DEFAULT 1 COMMENT '难度',
  `threshold` decimal(10, 2) UNSIGNED NULL DEFAULT 0.50 COMMENT '阈值',
  `use_template` tinyint(1) NULL DEFAULT 0 COMMENT '使用模板',
  `code_template` json NULL COMMENT '模板代码',
  `is_public` tinyint(1) NULL DEFAULT 0 COMMENT '是否公开',
  `is_visible` tinyint(1) NULL DEFAULT 1 COMMENT '是否可见',
  `use_ai` tinyint(1) NULL DEFAULT 0 COMMENT '是否使用AI',
  `solved` bigint NULL DEFAULT 0 COMMENT '解决',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '题目表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of data_problem
-- ----------------------------
INSERT INTO `data_problem` VALUES ('1958869993346752514', '1', '1961378253524553729', '最基础的A+B', '原创', '', 5, 500, '**题目描述**\n\n输入两个整数A和B，输出它们的和A+B。\n\n**输入格式**\n\n输入包含两个整数A和B，数据范围在同一行，用空格分隔。\n\n**输出格式**\n\n输出一个整数，表示A+B的值。\n\n**样例输入**\n\n```\n1 2\n```\n\n**样例输出**\n\n```\n3\n```\n\n**代码示例 (C++)**\n\n（1）例一\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int a, b;\n    cin >> a >> b;\n    cout << a + b;\n    return 0;\n}\n```\n\n（2）例二\n\n```cpp\n// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}\n```\n', '[{\"input\": \"1 2\", \"output\": \"3\"}, {\"input\": \"2 4\", \"output\": \"6\"}, {\"input\": \"4 5\", \"output\": \"9\"}, {\"input\": \"11 11\", \"output\": \"22\"}, {\"input\": \"7 7\", \"output\": \"14\"}, {\"input\": \"8 8\", \"output\": \"16\"}]', '[\"java\", \"cpp\"]', 1, 0.80, 0, '[{\"prefix\": \"\", \"suffix\": \"\", \"language\": \"cpp\", \"template\": \"// 前置代码\\n#include <iostream>\\nusing namespace std;\\n\\n// 模板代码\\nclass Solution {\\npublic:\\n    int add(int a, int b) {\\n        return a + b;\\n    }\\n};\\n\\n// 后置代码\\nint main() {\\n    int a, b;\\n    cin >> a >> b;\\n    \\n    Solution sol;\\n    cout << sol.add(a, b) << endl;\\n    \\n    return 0;\\n}\"}]', 1, 1, 1, 3, 0, '2025-08-22 20:32:55', '1', '2025-09-25 14:34:36', '1');
INSERT INTO `data_problem` VALUES ('1970761938222354434', '1036', '0', 'C语言1.1', 'FATE_YO', NULL, 1000, 500, '## 题目描述\n<p>\n	输出一行信息。\n</p>\n\n## 输入描述\n<p>\n	&nbsp;无。\n</p>\n\n## 输出描述\n<p>\n	只有一行，“This is a C program.”。\n</p>\n<p>\n	请注意不需要输出引号，行尾输出换行。&nbsp;\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"This is a C program.\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:34:54', '1');
INSERT INTO `data_problem` VALUES ('1970761938222354435', '1045', '0', '【C语言训练】数字母', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span>输入一个字符串,数出其中的字母的个数.</span>\n</p>\n\n## 输入描述\n<p>\n	<span>一个字符串，不包含空格（长度小于100）</span>\n</p>\n\n## 输出描述\n<p>\n	<span>字符串中的字母的个数</span>\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"124lfdk54AIEJ92854&%$GJ\", \"output\": \"10\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 1, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:35:01', '1');
INSERT INTO `data_problem` VALUES ('1970761938222354436', '1135', '0', '习题5-10 分数序列求和', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	有如下分数序列\n</p>\n<img alt=\"\" src=\"http://tk.hustoj.com:80/attached/image/20141023/20141023210955_16216.jpg\" /> \n<p>\n	求出次数列的前20项之和。\n</p>\n<p>\n	请将结果的数据类型定义为double类型。\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n小数点后保留6位小数，末尾输出换行。\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"��\", \"output\": \"32.660261\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:35:08', '1');
INSERT INTO `data_problem` VALUES ('1970761938222354437', '1136', '0', 'C语言程序设计教程（第三版）课后习题8.1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n写两个函数hcf和lcd，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。\n\n## 输入描述\n两个数\n\n## 输出描述\n最大公约数 最小公倍数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"6 15\", \"output\": \"3 30\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 1, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:35:16', '1');
INSERT INTO `data_problem` VALUES ('1970761938264297473', '1137', '0', '习题5-12 猴子吃桃问题', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n猴子第1填摘下若干桃子，当即吃了一半，还觉着不过瘾，又多吃了一个。第2天早晨，又将剩下的桃子吃掉一半，又多吃了一个。以后每天早晨都吃了前一天剩下的一半零一个。到第10天早上想再吃时，发现就只剩一个桃子了。求第1天共摘了多少个桃子。\n\n## 输入描述\n无\n\n## 输出描述\n一个整数，末尾换行。\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"��\", \"output\": \"1534\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:35:58', '1');
INSERT INTO `data_problem` VALUES ('1970761938264297474', '1138', '0', '习题5-13 迭代法求平方根', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	输入一个非负实数a，用迭代法求平方根\n</p>\n<img alt=\"\" src=\"http://tk.hustoj.com:80/attached/image/20141023/20141023214334_83003.jpg\" /> \n<p>\n	求平方根的迭代公式为\n</p>\n<img alt=\"\" src=\"http://tk.hustoj.com:80/attached/image/20141023/20141023214520_29089.jpg\" /> \n<p>\n	要求前后两次求出的x的差的绝对值小于10<sup>-5</sup>\n</p>\n<p>\n	从键盘输入非负实数a和迭代初值x0，输出满足条件的x<sub>n+1</sub>\n</p>\n<p>\n	C数学库中有求绝对值的函数fabs.\n</p>\n\n## 输入描述\n<p>\n	非负实数a和迭代初值x0（要求double类型)\n</p>\n\n## 输出描述\n输入非负实数的平方根，保留6位小数，末尾换行。\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"10 3\", \"output\": \"3.162278\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:35:32', '1');
INSERT INTO `data_problem` VALUES ('1970761938264297475', '1139', '0', '送分题素数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p><span style=\"color: rgb(0, 0, 0); font-family: \'Times New Roman\'; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; \" class=\"Apple-style-span\">输出100-&gt;200之间的素数的个数，以及所有的素数。</span></p>\n\n## 输入描述\n无\n\n## 输出描述\n<p><span style=\"color: rgb(0, 0, 0); font-family: \'Times New Roman\'; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; \" class=\"Apple-style-span\">100-&gt;200之间的素数的个数，以及所有的素数。</span></p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"21\\r\\n101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:35:37', '1');
INSERT INTO `data_problem` VALUES ('1970761938264297476', '1140', '0', '同时被3、5、7整除的数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n&nbsp;\n<div style=\"vertical-align:baseline;text-align:left;margin-left:0.38in;\">\n	<span style=\"font-size:18px;font-family:宋体;color:black;\">求</span><span style=\"font-size:18px;font-family:Arial;color:black;\">100000000</span><span style=\"font-size:18px;font-family:宋体;color:black;\">以内</span><span style=\"font-size:18px;font-family:宋体;color:black;\">的整数中，</span><span style=\"font-size:18px;font-family:宋体;color:black;\">能同时被</span><span style=\"font-size:18px;font-family:Arial;color:black;\">3</span><span style=\"font-size:18px;font-family:宋体;color:black;\">、</span><span style=\"font-size:18px;font-family:Arial;color:black;\">5</span><span style=\"font-size:18px;font-family:宋体;color:black;\">、</span><span style=\"font-size:18px;font-family:Arial;color:black;\">7</span><span style=\"font-size:18px;font-family:宋体;color:black;\">整除的数中最大的那一个。</span> \n</div>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"99999900\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:35:43', '1');
INSERT INTO `data_problem` VALUES ('1970761938264297477', '1141', '0', '26004：求第100002个素数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n如题，求第100002个素数。素数的判定我们见过多次，常规方法可以在1秒内求出此题吗？\n\n## 输入描述\n无\n\n## 输出描述\n<span style=\"font-size:10.5pt;font-family:仿宋_GB2312;\">1299743</span>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"1299743\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:36:17', '1');
INSERT INTO `data_problem` VALUES ('1970761938264297478', '1142', '0', '112系列之学长', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoNormal\">\n	听说<span>112</span>有个一点都不屌丝的学长，这个学长呢除了看学妹什么都不会，于是乎<span>…</span>在<span>112</span>被学弟学妹各种花式碾压。\n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>这不，上次学院举办中学生数学竞赛，这个一点都不渣渣的学长因为无所事事被学院派去监考学弟学妹，但是这对于学长（<span>guang gun</span>）却是一个机会，有机会向广大的学妹展现自己啦，光棍学长一想起来就难以抑制内心的欢腾微笑了起来了呢。\n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>考试时间整整两个半小时，一点都不禽兽的学长也满足的看了学妹两个半小时，口水哈喇子留了一地，却苦于没有办法向学妹介绍一下自己。最后，眼瞅着最后一位学！妹！离！开！学长真是一点都不失落的默默退场了。\n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>但！做大事的人毕竟是要不甘趋于命运的！学院举办低程比赛，这个学长不知羞耻的托笔者帮他宣传一下他的<span>QQ</span>，寄希望于会有亲爱的学妹（或者学弟）主动联系他。\n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>但是，笔者作为一个新时代的大学生，本着高尚的情操，不能让迷途的学妹羊入虎口，但是又屈于他的淫威，不得不帮他，于是乎，笔者选择了一个折中的办法，只给提示，不直接说出他的<span>QQ</span>号。\n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>犹记得，中数竞赛中后面的一个全排列的大题坑了好多学弟学妹（答案不是<span>10</span>哦），现在，笔者给的提示与该题惊人的相似。\n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; QQ</span>是一个<span>9</span>位数，由<span>1,2,3,4,5,9</span>组成，且第<span>1</span>、<span>6</span>位数字相同，第<span>2</span>、<span>4</span>位数字相同，第<span>5</span>、<span>7</span>位数字相同。\n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>学长的<span>QQ</span>就在符合上诉条件中的所有<span>9</span>位数从小到大排第<span>50</span>个。\n</p>\n<p class=\"MsoNormal\" style=\"text-indent:21.0pt;\">\n	笔者就帮你到这呢！！<span> ^v^ </span>不谢。\n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp;</span>\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n<p class=\"MsoNormal\">\n	<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>输出为一行，为该<span>QQ</span>。\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"142431395\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:36:22', '1');
INSERT INTO `data_problem` VALUES ('1970761938264297479', '1143', '0', '签到题', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:19.6000003814697px;\">挖掘机技术哪家强？中国山东找XX。</span><br />\n<span style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:19.6000003814697px;\">那么问题来了，软件技术哪里学？</span>\n\n## 输入描述\n<span style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:19.6000003814697px;\">没有输入。</span>\n\n## 输出描述\n<span style=\"font-family:Verdana, Arial, Helvetica, sans-serif;font-size:14px;line-height:19.6000003814697px;\">歌颂一下学校就好，答案肯定是\"JXUST\"(没有引号)，不用猜了。(注意换行)</span>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"JXUST\"}]', '[\"cpp\", \"c\"]', 2, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:36:27', '1');
INSERT INTO `data_problem` VALUES ('1970761938264297480', '1144', '0', '最优乘车', 'FATE_YO', NULL, 1000, 256, '## 题目描述\nH城是一个旅游胜地，每年都有成千上万的人前来观光。为方便游客，巴士公司在各个旅游景点及宾馆，饭店等地都设置了巴士站并开通了一些单程巴上线路。每条单程巴士线路从某个巴士站出发，依次途经若干个巴士站，最终到达终点巴士站。<br />\n&nbsp; &nbsp; 一名旅客最近到H城旅游，他很想去S公园游玩，但如果从他所在的饭店没有一路巴士可以直接到达S公园，则他可能要先乘某一路巴士坐几站，再下来换乘同一站台的另一路巴士, 这样换乘几次后到达S公园。<br />\n&nbsp; &nbsp; 现在用整数1,2,…N 给H城的所有的巴士站编号，约定这名旅客所在饭店的巴士站编号为1，S公园巴士站的编号为N。<br />\n&nbsp; &nbsp; 写一个程序，帮助这名旅客寻找一个最优乘车方案,使他在从饭店乘车到S公园的过程<br />\n中换车的次数最少。<br />\n<div>\n	<br />\n</div>\n\n## 输入描述\n输入文件是Travel.in。文件的第一行有两个数字M和N(1&lt;=M&lt;=100 1&lt;N&lt;=500），表示开通了M条单程巴士线路，总共有N个车站。从第二行到第M刊行依次给出了第1条到第M条巴士线路的信息。其中第i+1行给出的是第i条巴士线路的信息，从左至右按运行顺序依次给出了该线路上的所有站号相邻两个站号之间用一个空格隔开。<br />\n<div>\n	<br />\n</div>\n\n## 输出描述\n&nbsp;输出文件是Travel.out，文件只有一行。如果无法乘巴士从饭店到达S公园，则输出\"N0\"，否则输出你的程序所找到的最少换车次数，换车次数为0表示不需换车即可到达。<br />\n<div>\n	<br />\n</div>\n\n## 提示\n<span>上传者：吕红波</span>\n\n## 规则\nACM', '[{\"input\": \"3 7\\r\\n6 7\\r\\n4 7 3 6\\r\\n2 1 3 5\", \"output\": \"2\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:36:34', '1');
INSERT INTO `data_problem` VALUES ('1970761938264297481', '1046', '0', '【C语言训练】求具有abcd=(ab+cd)2性质的四位数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span>3025这个数具有一种独特的性质：将它平分为二段，即30和25，使之相加后求平方，即(30+25)2，恰好等于3025本身。请求出具有这样性质的全部四位数</span>\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n<p>\n	<span>满足题意的数全部四位数(从小到大输出,且数之间用两个空格分开) </span>\n</p>\n\n## 提示\n<p>\n	<span>根据题意可以采用穷举法，对所有四位数进行判断，从而筛选出符合这种性质的四位数。具体算法实现，可任取一个四位数，将其截为两部分，前两位为a，后两位为b，然后套用公式计算并判断。</span>\n</p>\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"2025  3025  9801\"}]', '[\"cpp\", \"c\"]', 2, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:36:39', '1');
INSERT INTO `data_problem` VALUES ('1970761938264297482', '1145', '0', '明明的步行', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span style=\"font-size:14px;background-color:#F5F5F5;font-family:宋体;line-height:21px;\">小明是一个很会利用时间的学生，他经常晚上吃过饭后一边思考问题一边散步，由于要思考问题，并且思考问题的内容越来越多，所以他在散步时也是越来越慢的，他自己总结出一个规律，他散步时第一步走</span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;line-height:21px;\">N</span><span style=\"font-size:14px;background-color:#F5F5F5;font-family:宋体;line-height:21px;\">厘米，第二步走</span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;line-height:21px;\">N-1</span><span style=\"font-size:14px;background-color:#F5F5F5;font-family:宋体;line-height:21px;\">厘米，以后每步比前一步少</span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;line-height:21px;\">1</span><span style=\"font-size:14px;background-color:#F5F5F5;font-family:宋体;line-height:21px;\">厘米，最后一步是</span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;line-height:21px;\">0</span><span style=\"font-size:14px;background-color:#F5F5F5;font-family:宋体;line-height:21px;\">时就停下来了。现在给出你小明第一步走的长度</span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;line-height:21px;\">N</span><span style=\"font-size:14px;background-color:#F5F5F5;font-family:宋体;line-height:21px;\">厘米，请你算出小明这次散步一共起了多少厘米。如小明第一步走</span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;line-height:21px;\">3</span><span style=\"font-size:14px;background-color:#F5F5F5;font-family:宋体;line-height:21px;\">厘米，则第二步走</span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;line-height:21px;\">2</span><span style=\"font-size:14px;background-color:#F5F5F5;font-family:宋体;line-height:21px;\">厘米，第三步走</span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;line-height:21px;\">1</span><span style=\"font-size:14px;background-color:#F5F5F5;font-family:宋体;line-height:21px;\">厘米，然后就停下来了，则小明这次散步共走了</span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;line-height:21px;\">3+2+1=6</span><span style=\"font-size:14px;background-color:#F5F5F5;font-family:宋体;line-height:21px;\">（厘米）。</span>\n\n## 输入描述\n<span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\">3</span>\n\n## 输出描述\n<span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\">6</span>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"5\", \"output\": \"15\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938264297483', '1146', '0', '第二次练习1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	请使用c语言输出以下文字\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n<p>\n	hello\n</p>\n<p>\n	my name is C.\n</p>\n\n## 提示\n只需要printf\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"hello\\r\\nmy name is C.\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406337', '1147', '0', 'C语言3.10', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	给定变量a的初始值，计算进行如下赋值表达式计算之后a的值：<br />\na+=a-=a*=a\n</p>\n\n## 输入描述\n<p>\n	只有一行，包含一个整数a。\n</p>\n\n## 输出描述\n<p>\n	输出题目描述中表达式运算后a的值。注意行尾输出换行。\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1\", \"output\": \"0\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406338', '1148', '0', 'C语言程序设计教程（第三版）课后习题8.2', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n求方程ax^2+bx+c=0的根，用三个函数gz，ez和sz分别求当b^2-4ac大于0、等于0和小于0时的根，并输出结果。从主函数输入a、b、c的值。（输出保留3位小数）\n\n## 输入描述\na b c\n\n## 输出描述\nx1=? x2=?\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"4 1 1\", \"output\": \"x1=-0.125+0.484i x2=-0.125-0.484i\"}]', '[\"cpp\", \"c\"]', 3, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:25:59', '1');
INSERT INTO `data_problem` VALUES ('1970761938331406339', '1149', '0', '求1!+2!+3!+...+10!的和', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	求1!+2!+3!+...+10!的和\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406340', '1150', '0', '求200以内的素数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	【问题描述】\n</p>\n<p>\n	求出200以内所有的素数以及个数。\n</p>\n<p>\n	【输出格式】\n</p>\n<p>\n	两行，第一行是200以内的所有素数，第二行是素数的个数\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 2, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:26:03', '1');
INSERT INTO `data_problem` VALUES ('1970761938331406341', '1151', '0', '钱币兑换1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	【问题描述】\n</p>\n<p>\n	把一张一元钞票换成1分、2分和5分的硬币，每种至少1枚，问有几种换法？\n</p>\n<p>\n	【输出格式】\n</p>\n<p>\n	一行，表示有多少种\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406342', '1152', '0', '纸币兑换', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	【问题描述】\n</p>\n<p>\n	小明想将手中的1张面值100元的人民币换成10元、5元和1元面值的人民币，要求换成正好是40张，且每种人民币至少一张，问有几种换法？，分别是那几种？\n</p>\n<p>\n	【输出格式】\n</p>\n<p>\n	多行，先输出那几种，每一种一行（按10，5元，1元的顺序输出）\n</p>\n<p>\n	最后一行是几种换法\n</p>\n<p>\n	<br />\n</p>\n<p>\n	【提示】适当考虑减少重复次数。\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406343', '1153', '0', '角谷猜想', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	【问题描述】\n</p>\n<p>\n	请编写一个程序，验证角谷猜想。所谓角谷猜想是：“对于任意大于1的自然数n，若n为奇数，则将n变为3*n+1，否则将n变为n的一半。”经过若干次这样的变化，一定会使n变为1。\n</p>\n<p>\n	【输入格式】\n</p>\n<p>\n	一行，一个任意大于1的的自然数n\n</p>\n<p>\n	【输出格式】\n</p>\n<p>\n	多行输出，每次变化的结果\n</p>\n<p>\n	【样列输入】\n</p>\n<p>\n	3\n</p>\n<p>\n	【样列输出】\n</p>\n<p>\n	n=10\n</p>\n<p>\n	n=5\n</p>\n<p>\n	n=16\n</p>\n<p>\n	n=8\n</p>\n<p>\n	n=4\n</p>\n<p>\n	n=2\n</p>\n<p>\n	n=1\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"100\", \"output\": \"n=50\\r\\nn=25\\r\\nn=76\\r\\nn=38\\r\\nn=19\\r\\nn=58\\r\\nn=29\\r\\nn=88\\r\\nn=44\\r\\nn=22\\r\\nn=11\\r\\nn=34\\r\\nn=17\\r\\nn=52\\r\\nn=26\\r\\nn=13\\r\\nn=40\\r\\nn=20\\r\\nn=10\\r\\nn=5\\r\\nn=16\\r\\nn=8\\r\\nn=4\\r\\nn=2\\r\\nn=1\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406344', '1154', '0', 'C语言程序设计教程（第三版）课后习题8.3', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n写一个判断素数的函数prim，在主函数输入一个整数，输出是否是素数的消息。\n\n## 输入描述\n一个数\n\n## 输出描述\n如果是素数输出prime 如果不是输出not prime\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"97\", \"output\": \"prime\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406345', '1047', '0', '【C语言训练】求车速', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span>一辆以固定速度行驶的汽车，司机在上午10点看到里程表上的读数是一个对称数(即这个数从左向右读和从右向左读是完全一样的)，为95859。两小时后里程表上出现了一个新的对称数。问该车的速度是多少？新的对称数是多少？</span>\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n<p>\n	<span>根据题意，设所求对称数为i，其初值为95589，对其依次递增取值，将i值的每一位分解后与其对称位置上的数进行比较，若每个对称位置上的数皆相等，则可判定i即为所求的对称数。</span>\n</p>\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"95959\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406346', '1155', '0', 'C语言程序设计教程（第三版）课后习题8.4', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>写一个函数convert，使给定的一个二维数组（３&times;３）转置，即行列互换。</p>\n\n## 输入描述\n一个3x3的矩阵\n\n## 输出描述\n转置后的矩阵\n\n## 提示\n输出每一行末尾有空格\n\n## 规则\nACM', '[{\"input\": \"1 2 3\\r\\n4 5 6\\r\\n7 8 9\", \"output\": \"1 4 7 \\r\\n2 5 8 \\r\\n3 6 9\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406347', '1156', '0', 'C语言程序设计教程（第三版）课后习题8.5', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n写一函数inverse，使输入的一个字符串按反序存放，在主函数中输入输出反序后的字符串。\n\n## 输入描述\n一行字符\n\n## 输出描述\n逆序后的字符串\n\n## 提示\n样例输入字符串结尾有空格，而输出没有空格。另外，测试数据的字符串中间不会有空格。\n\n## 规则\nACM', '[{\"input\": \"123456abcdef\", \"output\": \"fedcba654321\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406348', '1157', '0', 'C语言程序设计教程（第三版）课后习题8.6', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n写一函数concat，将两个字符串连接\n\n## 输入描述\n两行字符串\n\n## 输出描述\n连接后的字符串\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"123\\r\\nabc\", \"output\": \"123abc\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406349', '1158', '0', 'C语言程序设计教程（第三版）课后习题8.7', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n写一函数cpy，将一个字符串中的元音字母复制到另一个字符串，然后输出。\n\n## 输入描述\n一行字符串\n\n## 输出描述\n顺序输出其中的元音字母（aeiou）\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"abcde\", \"output\": \"ae\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406350', '1159', '0', 'C语言程序设计教程（第三版）课后习题8.8', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>写一函数insert，输入一个四位数字，要求输出这四个数字字符，但每两个数字间空格。如输入1990，应输出&quot;1 9 9 0&quot;。</p>\n\n## 输入描述\n一个四位数\n\n## 输出描述\n增加空格输出\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1990\", \"output\": \"1 9 9 0\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406351', '1160', '0', 'C语言程序设计教程（第三版）课后习题8.9', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n编写一函数count，由实参传来一个字符串，统计此字符串中字母、数字、空格和其它字符的个数，在主函数中输入字符串以及输出上述结果。 只要结果，别输出什么提示信息。\n\n## 输入描述\n一行字符串\n\n## 输出描述\n统计数据，4个数字，空格分开。\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"!@#$%^QWERT    1234567\", \"output\": \"5 7 4 6\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406352', '1161', '0', 'C语言程序设计教程（第三版）课后习题9.1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n定义一个带参的宏，使两个参数的值互换，并写出程序，输入两个数作为使用宏时的实参。输出已交换后的两个值。\n\n## 输入描述\n两个数，空格隔开\n\n## 输出描述\n交换后的两个数，空格隔开\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1 2\", \"output\": \"2 1\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406353', '1162', '0', 'C语言程序设计教程（第三版）课后习题9.2', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n输入两个整数，求他们相除的余数。用带参的宏来实现，编程序。\n\n## 输入描述\na b两个数\n\n## 输出描述\na/b的余数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"3 2\", \"output\": \"1\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406354', '1163', '0', 'C语言4.6', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	设x和y是单精度浮点类型（float），其中x=111111.111，y=222222.222，输出x和y的和。\n</p>\n\n## 输入描述\n<p>\n	无\n</p>\n\n## 输出描述\n<p>\n	只有一行，x和y的和的%f格式。<br />\n请注意行尾输出换行。\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"��\", \"output\": \"333333.328125\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406355', '1164', '0', 'C语言程序设计教程（第三版）课后习题9.3', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n三角形面积=SQRT(S*(S-a)*(S-b)*(S-c)) 其中S=(a+b+c)/2，a、b、c为三角形的三边。定义两个带参的宏，一个用来求area，另一个宏用来求S。 写程序，在程序中用带实参的宏名来求面积area。\n\n## 输入描述\na b c三角形的三条边,可以是小数。\n\n## 输出描述\n三角形面积，保留3位小数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"3 4 5\", \"output\": \"6.000\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406356', '1048', '0', 'C语言程序设计教程（第三版）课后习题6.9', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n一球从M米高度自由下落，每次落地后返回原高度的一半，再落下。它在第N次落地时反弹多高？共经过多少米？保留两位小数\n\n## 输入描述\nM N\n\n## 输出描述\n它在第N次落地时反弹多高？共经过多少米？保留两位小数，空格隔开，放在一行\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1000 5\", \"output\": \"31.25 2875.00\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938331406357', '1165', '0', 'C语言程序设计教程（第三版）课后习题9.4', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n给年份year，定义一个宏，以判别该年份是否闰年。提示：宏名可以定义为LEAP_YEAR，形参为y，即定义宏的形式为 #define LEAP_YEAR(y) （读者设计的字符串）\n\n## 输入描述\n一个年份\n\n## 输出描述\n<p>根据是否闰年输出，是输出&quot;L&quot;,否输出&quot;N&quot;</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2000\", \"output\": \"L\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320898', '1166', '0', 'C语言程序设计教程（第三版）课后习题9.6', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>请设计输出实数的格式，包括：⑴一行输出一个实数；⑵一行内输出两个实数；⑶一行内输出三个实数。实数用&quot;6.2f&quot;格式输出。使用宏定义</p>\n\n## 输入描述\n一个实数，float范围\n\n## 输出描述\n<p>输出3行，第一行打印一遍输入的数，第二行打印两遍，第三行打印三遍。第二行和第三行，用空格分隔同一行的数字。实数用&quot;6.2f&quot;格式输出。</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0.618\", \"output\": \"0.62\\r\\n  0.62   0.62\\r\\n  0.62   0.62   0.62\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320899', '1167', '0', 'C语言程序设计教程（第三版）课后习题9.8', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n分别用函数和带参的宏，从三个数中找出最大的数。\n\n## 输入描述\n3个实数\n\n## 输出描述\n最大的数,输出两遍，先用函数，再用宏。保留3位小数。\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1 2 3\", \"output\": \"3.000\\r\\n3.000\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320900', '1168', '0', 'C语言程序设计教程（第三版）课后习题9.10', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>输入一行电报文字，将字母变成其下一字母（如&rsquo;a&rsquo;变成&rsquo;b&rsquo;&hellip;&hellip;&rsquo;z&rsquo;变成&rsquo;ａ&rsquo;其它字符不变）。</p>\n\n## 输入描述\n一行字符\n\n## 输出描述\n加密处理后的字符\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"a b\", \"output\": \"b c\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320901', '1169', '0', 'C语言程序设计教程（第三版）课后习题10.1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n输入三个整数，按由小到大的顺序输出。使用指针\n\n## 输入描述\n三个整数\n\n## 输出描述\n由小到大输出成一行，每个数字后面跟一个空格\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2 3 1\", \"output\": \"1 2 3\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320902', '1170', '0', 'C语言程序设计教程（第三版）课后习题10.2', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n输入三个字符串，按由小到大的顺序输出\n\n## 输入描述\n3行字符串\n\n## 输出描述\n按照从小到大输出成3行\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"cde\\r\\nafg\\r\\nabc\", \"output\": \"abc\\r\\nafg\\r\\ncde\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320903', '1171', '0', 'C语言程序设计教程（第三版）课后习题10.3', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n输入10个整数，将其中最小的数与第一个数对换，把最大的数与最后一个数对换。写三个函数； ①输入10个数；②进行处理；③输出10个数。使用指针\n\n## 输入描述\n10个整数\n\n## 输出描述\n整理后的十个数，每个数后跟一个空格（注意最后一个数后也有空格）\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2 1 3 4 5 6 7 8 10 9\", \"output\": \"1 2 3 4 5 6 7 8 9 10\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320904', '1172', '0', 'C语言程序设计教程（第三版）课后习题10.4', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n有n个整数，使前面各数顺序向后移m个位置，最后m个数变成前面m个数。写一函数move：实现以上功能，在主函数中输入n个数和输出调整后的n个数。\n\n## 输入描述\n输入数据的个数n n个整数移动的位置m\n\n## 输出描述\n移动后的n个数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"10\\r\\n1 2 3 4 5 6 7 8 9 10\\r\\n2\", \"output\": \"9 10 1 2 3 4 5 6 7 8\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320905', '1173', '0', 'C语言程序设计教程（第三版）课后习题10.5', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n有n人围成一圈，顺序排号。从第1个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来的第几号的那位。使用指针\n\n## 输入描述\n初始人数n\n\n## 输出描述\n最后一人的初始编号\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"3\", \"output\": \"2\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320906', '1174', '0', 'C语言程序设计教程（第三版）课后习题1.5', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>请参照本章例题，编写一个C程序，输出以下信息：</p>\n<p>**************************<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!<br />\n**************************</p>\n<p>数＊号可看出，Very前面9空格，Good前面&hellip;&hellip;</p>\n<p>*也是输出的一部分，别光打印Very Good!</p>\n\n## 输入描述\n无需输入\n\n## 输出描述\n<p>**************************<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!<br />\n**************************</p>\n\n## 提示\nGood!后面没有空格\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"**************************\\r\\n         Very    Good!\\r\\n**************************\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320907', '1049', '0', '【C语言训练】舍罕王的失算', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span>相传国际象棋是古印度舍罕王的宰相达依尔发明的.舍罕王十分喜爱象棋,决定让宰相自己选择何种赏赐.这位聪明的宰相指着8*8共64格的象棋说:陛下,请您赏给我一些麦子吧.就在棋盘的第1格放1粒,第2格放2粒,第三格放4粒,以后每一格都比前一格增加一位,依此放完棋盘一64格,我就感激不尽了.舍罕王让人扛了一袋麦子,他要兑现他的许诺. <br />\n请问,国王要兑现他的许诺共要多少粒麦子赏赐他的宰相?</span>\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n<p>\n	<span>以整数形式输出,不要其它符号</span>\n</p>\n\n## 提示\n<p>\n	<span>应该是个很大的数,要考虑数的精度问题! 用double类型，输出尽可能精确的结果。</span>\n</p>\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"18446744073709552000\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320908', '1175', '0', 'C语言程序设计教程（第三版）课后习题10.7', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n有一字符串，包含n个字符。写一函数cpystr，将此字符串中从第m个字符开始的全部字符复制成为另一个字符串。\n\n## 输入描述\n数字n 一行字符串数字m\n\n## 输出描述\n从m开始的子串\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"6\\r\\nabcdef\\r\\n3\", \"output\": \"cdef\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320909', '1176', '0', 'C语言程序设计教程（第三版）课后习题11.1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n定义一个结构体变量（包括年、月、日）。计算该日在本年中是第几天，注意闰年问题。\n\n## 输入描述\n年月日\n\n## 输出描述\n当年第几天\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2000 12 31\", \"output\": \"366\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320910', '1177', '0', 'C语言程序设计教程（第三版）课后习题11.3', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>现有N个学生的数据记录，每个记录包括学号、姓名、三科成绩。编写一个函数input,用来输入一个学生的数据记录。编写一个函数print,打印一个学生的数据记录。在主函数调用这两个函数，读取N条记录输入，再按要求输出。 N&lt;100</p>\n\n## 输入描述\n学生数量N占一行每个学生的学号、姓名、三科成绩占一行，空格分开。\n\n## 输出描述\n每个学生的学号、姓名、三科成绩占一行，逗号分开。\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2\\r\\na100 zhblue 70 80 90\\r\\nb200 newsclan 90 85 75\", \"output\": \"a100,zhblue,70,80,90\\r\\nb200,newsclan,90,85,75\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320911', '1178', '0', 'C语言程序设计教程（第三版）课后习题11.5', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n有N个学生，每个学生的数据包括学号、姓名、3门课的成绩，从键盘输入N个学生的数据，要求打印出3门课的总平均成绩，以及最高分的学生的数据（包括学号、姓名、3门课成绩）。使用结构体\n\n## 输入描述\n<p>学生数量N占一行<br />\n每个学生的学号、姓名、三科成绩占一行，空格分开。</p>\n\n## 输出描述\n<p>各门课的平均成绩<br />\n最高分的学生的数据（包括学号、姓名、3门课成绩）</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2\\r\\n1 blue 90 80 70\\r\\nb clan 80 70 60\", \"output\": \"85 75 65\\r\\n1 blue 90 80 70\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320912', '1179', '0', 'C语言程序设计教程（第三版）课后习题11.8', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n已有a、b两个链表，每个链表中的结点包括学号、成绩。要求把两个链表合并，按学号升序排列。 使用结构体\n\n## 输入描述\n第一行，a、b两个链表元素的数量N、M,用空格隔开。接下来N行是a的数据然后M行是b的数据每行数据由学号和成绩两部分组成\n\n## 输出描述\n按照学号升序排列的数据\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2 3\\r\\n5 100\\r\\n6 89\\r\\n3 82\\r\\n4 95\\r\\n2 10\", \"output\": \"2 10\\r\\n3 82\\r\\n4 95\\r\\n5 100\\r\\n6 89\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320913', '1180', '0', '对称平方数1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	打印所有不超过256，其平方具有对称性质的数。如2，11就是这样的数，因为2*2=4，11*11=121。\n</p>\n\n## 输入描述\n<p>\n	无任何输入数据\n</p>\n\n## 输出描述\n<p>\n	输出具有题目要求的性质的数。如果输出数据不止一组，各组数据之间以回车隔开。\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"0\\r\\n1\\r\\n2\\r\\n3\\r\\n11\\r\\n22\\r\\n26\\r\\n101\\r\\n111\\r\\n121\\r\\n202\\r\\n212\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320914', '1181', '0', 'C语言-密码', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>要将&quot;China&quot;译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母&quot;A&quot;后面第4个字母是&quot;E&quot;．&quot;E&quot;代替&quot;A&quot;。因此，&quot;China&quot;应译为&quot;Glmre&quot;。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，&rsquo;C&rsquo;、&rsquo;h&rsquo;、&rsquo;i&rsquo;、&rsquo;n&rsquo;、&rsquo;a&rsquo;，经过运算，使c1、c2、c3、c4、c5分别变为&rsquo;G&rsquo;、&rsquo;l&rsquo;、&rsquo;m&rsquo;、&rsquo;r&rsquo;、&rsquo;e&rsquo;，并输出。</p>\n\n## 输入描述\n<p>China</p>\n\n## 输出描述\n<p>加密后的China</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"China\", \"output\": \"Glmre\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320915', '1182', '0', 'C语言-水仙花数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>打印出所有&quot;水仙花数&quot;，所谓&quot;水仙花数&quot;是指一个三位数，其各位数字立方和等于该本身。 例如：153是一个水仙花数，因为153=1^3+5^3+3^3。 Output:</p>\n<pre>\n153\n???\n???\n??? </pre>\n\n## 输入描述\n<p>无</p>\n\n## 输出描述\n<p>所有的水仙花数，从小的开始。 每行一个</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1\", \"output\": \"153\\r\\n370\\r\\n371\\r\\n407\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320916', '1183', '0', 'C语言-公约公倍2', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。</p>\n\n## 输入描述\n<p>两个数</p>\n\n## 输出描述\n<p>最大公约数 最小公倍数</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"6 15\", \"output\": \"3 30\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938394320917', '1184', '0', '《C语言程序设计》江宝钏主编-习题1-3-新年好', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>编写程序在屏幕上显示：</p>\n<p>*****************************</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Happy New Year!</p>\n<p>*****************************</p>\n<p>注意：</p>\n<p>29个星号，Happy New Year!首字母大写，中间1个空格隔开，末尾有英文叹号。</p>\n<p>H之前7个空格，叹号之后没有空格。</p>\n<p>一共3行，中间没有空行。</p>\n\n## 输入描述\n<p>没有输入</p>\n\n## 输出描述\n<p>*****************************</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Happy New Year!</p>\n<p>*****************************</p>\n\n## 提示\n<p>复制样例输出，改成程序代码。</p>\n\n## 规则\nACM', '[{\"input\": \"û������\", \"output\": \"*****************************\\r\\n       Happy New Year!\\r\\n*****************************\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235458', '1050', '0', '算法实现题3-7 数字三角形问题', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n给定一个由n行数字组成的数字三角形如下图所示。试设计一个算法，计算出从三角形的顶至底的一条路径，使该路径经过的数字总和最大。<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 7<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;3 &nbsp;8<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;8 &nbsp;1 &nbsp;0<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2 &nbsp;7 &nbsp;4 &nbsp;4<br />\n<p>\n	&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;4 &nbsp;5 &nbsp;2 &nbsp;6 &nbsp;5\n</p>\n<p>\n	编程任务：<br />\n对于给定的由n 行数字组成的数字三角形，编程计算从三角形的顶至底的路径经过的数<br />\n字和的最大值。\n</p>\n\n## 输入描述\n由文件input.txt 提供输入数据。文件的第1 行是数字三角形的行数n，1£n£100。接下来n行是数字三角形各行中的数字。所有数字在0..99之间。<br />\n\n## 输出描述\n程序运行结束时，将计算结果输出到文件output.txt 中。文件的第1 行中的数是计算出的最大值。<br />\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"5\\r\\n7\\r\\n3 8\\r\\n8 1 0\\r\\n2 7 4 4\\r\\n4 5 2 6 5\", \"output\": \"30\"}]', '[\"cpp\", \"c\"]', 2, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:26:10', '1');
INSERT INTO `data_problem` VALUES ('1970761938457235459', '1185', '0', 'C语言程序设计教程（第三版）课后习题3.7', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>要将&quot;China&quot;译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母&quot;A&quot;后面第4个字母是&quot;E&quot;．&quot;E&quot;代替&quot;A&quot;。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，\'C&rsquo;、\'h&rsquo;、\'i&rsquo;、\'n&rsquo;、\'a&rsquo;，经过运算，输出变换后的密码。</p>\n\n## 输入描述\n无\n\n## 输出描述\n加密后的China\n\n## 提示\nso easy\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"Glmre\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235460', '1186', '0', '《C语言程序设计》江宝钏主编-习题5-4-素数表', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>从键盘输入m,n</p>\n<p>在屏幕上按每行10个的格式输出m~n之间的全部素数</p>\n\n## 输入描述\n<p>两个整数m n</p>\n\n## 输出描述\n<p>m~n间的素数，每行10个，每个数后用空格隔开。如果m和n为素数则包含。</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"100 200\", \"output\": \"101 103 107 109 113 127 131 137 139 149 \\r\\n151 157 163 167 173 179 181 191 193 197 \\r\\n199\"}]', '[\"cpp\", \"c\"]', 2, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:26:17', '1');
INSERT INTO `data_problem` VALUES ('1970761938457235461', '1187', '0', '反序数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span style=\"color:#333333;font-family:\'MicroSoft Yahei\', Helvetica, Arial, Georgia, Simsun;font-size:14px;line-height:25px;\">设N是一个四位数，它的9倍恰好是其反序数（例如：1234的反序数是4321）</span><br />\n<span style=\"color:#333333;font-family:\'MicroSoft Yahei\', Helvetica, Arial, Georgia, Simsun;font-size:14px;line-height:25px;\">求N的值</span>\n</p>\n\n## 输入描述\n<p>\n	<span style=\"color:#333333;font-family:\'MicroSoft Yahei\', Helvetica, Arial, Georgia, Simsun;font-size:14px;line-height:25px;\">程序无任何输入数据。</span>\n</p>\n\n## 输出描述\n<p>\n	<span style=\"color:#333333;font-family:\'MicroSoft Yahei\', Helvetica, Arial, Georgia, Simsun;font-size:14px;line-height:25px;\">输出题目要求的四位数，如果结果有多组，则每组结果之间以回车隔开。</span>\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"1089\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235462', '1188', '0', 'abc', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span style=\"color:#333333;font-family:\'MicroSoft Yahei\', Helvetica, Arial, Georgia, Simsun;font-size:14px;line-height:25px;\">设a、b、c均是0到9之间的数字，abc、bcc是两个三位数，且有：abc+bcc=532。求满足条件的所有a、b、c的值。</span>\n</p>\n\n## 输入描述\n<p>\n	<span style=\"color:#333333;font-family:\'MicroSoft Yahei\', Helvetica, Arial, Georgia, Simsun;font-size:14px;line-height:25px;\">题目没有任何输入。</span>\n</p>\n\n## 输出描述\n<p>\n	<span style=\"color:#333333;font-family:\'MicroSoft Yahei\', Helvetica, Arial, Georgia, Simsun;font-size:14px;line-height:25px;\">请输出所有满足题目条件的a、b、c的值。</span><br />\n<span style=\"color:#333333;font-family:\'MicroSoft Yahei\', Helvetica, Arial, Georgia, Simsun;font-size:14px;line-height:25px;\">a、b、c之间用空格隔开。</span><br />\n<span style=\"color:#333333;font-family:\'MicroSoft Yahei\', Helvetica, Arial, Georgia, Simsun;font-size:14px;line-height:25px;\">每个输出占一行。</span>\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"3 2 1\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235463', '1189', '0', '百万富翁问题', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	一个百万富翁遇到一个陌生人，陌生人找他谈了一个换钱的计划。该计划如下：我每天给你10万元，你第一天给我1分钱，第二天2分钱，第三天4分钱……这样交换30天后，百万富翁交出了多少钱？陌生人交出了多少钱？（注意一个是万元，一个是分）\n</p>\n\n## 输入描述\n<p>\n	无输入。\n</p>\n\n## 输出描述\n<p>\n	用%ld输出，输出百万富翁和陌生人各自交出的钱数，单位是元。\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"10737418 3000000\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235464', '1190', '0', '任务调度', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span>读入任务调度序列，输出n个任务适合的一种调度方式。</span>\n</p>\n\n## 输入描述\n<p>\n	输入包含多组测试数据。\n</p>\n<p>\n	每组第一行输入一个整数n（n&lt;100000），表示有n个任务。\n</p>\n<p>\n	接下来n行，<span>每行第一个表示前序任务，括号中的任务为若干个后序任务，表示只有在前序任务完成的情况下，后序任务才能开始。若后序为NULL则表示无后继任务。</span>\n</p>\n\n## 输出描述\n<span>输出调度方式，输出如果有多种适合的调度方式，请输出字典序最小的一种。</span>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"4\\r\\nTask0(Task1,Task2)\\r\\nTask1(Task3)\\r\\nTask2(NULL)\\r\\nTask3(NULL)\", \"output\": \"Task0 Task1 Task2 Task3\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235465', '1191', '0', '加法等式', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<div>\n	设a、b、c 均是0 到9 之间的数字，abc、bcc 是两个三位数，且有：abc+bcc=532。求\n</div>\n<div>\n	满足条件的所有a、b、c 的值。\n</div>\n\n## 输入描述\n<p>\n	&nbsp;无。\n</p>\n\n## 输出描述\n<p>\n	&nbsp;每行输出3个数，分别表示abc的值，用一个空格隔开。\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"3 2 1\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235466', '1192', '0', '反序相等', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<div>\n	设N是一个四位数，它的9倍恰好是其反序数（例如：1234 的反序数是4321），求N<span style=\"line-height:1.5;\">的值。</span>\n</div>\n\n## 输入描述\n<p>\n	无\n</p>\n\n## 输出描述\n<p>\n	每行一个数，表示满足题目要求的数。\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235467', '1193', '0', '农夫、羊、菜和狼的故事', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<br />\n</p>\n<p>\n	有一个农夫带一只羊、一筐菜和一只狼过河。<br />\n如果没有农夫看管，则狼要吃羊，羊要吃菜。<br />\n但是船很小，只够农夫带一样东西过河。<br />\n问农夫该如何解此难题？\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	<br />\n</p>\n<p>\n	题目没有任何输入。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	<br />\n</p>\n<p>\n	题目可能有种解决方法，求出步骤最少的解决方法，<br />\n按顺序输出农夫想把羊、菜、狼全部运过河需要哪几个步骤。<br />\n如果需要将羊带过河去则输出“sheep_go”。<br />\n如果需要将羊带回来则输出“sheep_come”。<br />\n如果需要将菜带过河去则输出“vegetable_go”。<br />\n如果需要将菜带回来则输出“vegetable_come”。<br />\n如果需要将狼带过河去则输出“wolf_go”。<br />\n如果需要将狼带回来则输出“wolf_come”。<br />\n如果需要空手返回则输出“nothing_come”。<br />\n如果需要空手过河则输出“nothing_go”。<br />\n每输出一种方案，输出一行“succeed”。\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"no input\", \"output\": \"sheep_go\\r\\nnothing_come\\r\\nwolf_go\\r\\nsheep_come\\r\\nvegetable_go\\r\\nnothing_come\\r\\nsheep_go\\r\\nsucceed\\r\\nsheep_go\\r\\nnothing_come\\r\\nvegetable_go\\r\\nsheep_come\\r\\nwolf_go\\r\\nnothing_come\\r\\nsheep_go\\r\\nsucceed\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235468', '1194', '0', '邮票', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<div>\n	某人有8 角的邮票5 张，1 元的邮票4 张，1 元8 角的邮票6 张，用这些邮票中的一张或若干张可以得到多少中不同的邮资？\n</div>\n\n## 输入描述\n<p>\n	无\n</p>\n\n## 输出描述\n<p>\n	&nbsp;输出一行，表示题目所求。\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235469', '1051', '0', '算法实现题3-7 数字三角形问题', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span>给定一个由n行数字组成的数字三角形如下图所示。试设计一个算法，计算出从三角形的顶至底的一条路径，使该路径经过的数字总和最大。</span><br />\n<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 7</span><br />\n<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;3 &nbsp;8</span><br />\n<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;8 &nbsp;1 &nbsp;0</span><br />\n<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2 &nbsp;7 &nbsp;4 &nbsp;4</span><br />\n<p>\n	&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;4 &nbsp;5 &nbsp;2 &nbsp;6 &nbsp;5\n</p>\n<p>\n	编程任务：<br />\n对于给定的由n 行数字组成的数字三角形，编程计算从三角形的顶至底的路径经过的数<br />\n字和的最大值。\n</p>\n\n## 输入描述\n<span>由文件input.txt 提供输入数据。文件的第1 行是数字三角形的行数n，1£n£100。接下来n行是数字三角形各行中的数字。所有数字在0..99之间。</span>\n\n## 输出描述\n<span>程序运行结束时，将计算结果输出到文件output.txt 中。文件的第1 行中的数是计算出的最大值。</span>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"5\\r\\n7\\r\\n3 8\\r\\n8 1 0\\r\\n2 7 4 4\\r\\n4 5 2 6 5\", \"output\": \"30\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235470', '1195', '0', '排名', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"p0\">\n	<span style=\"color:#333333;font-size:10.5pt;font-family:微软雅黑;\">今天的上机考试虽然有实时的Ranklist，但上面的排名只是根据完成的题数排序，没有考虑每题的分值，所以并不是最后的排名。给定录取分数线，请你写程序找出最后通过分数线的考生，并将他们的成绩按降序打印。</span> \n</p>\n\n## 输入描述\n<p class=\"p0\">\n	<span style=\"color:#333333;font-size:10.5pt;font-family:微软雅黑;\">测试输入包含若干场考试的信息。每场考试信息的第1行给出考生人数N&nbsp;(&nbsp;0&nbsp;&lt;&nbsp;N&nbsp;&lt;&nbsp;1000&nbsp;)、考题数M&nbsp;(&nbsp;0&nbsp;&lt;&nbsp;M&nbsp;&lt;&nbsp;=&nbsp;10&nbsp;)、分数线（正整数）G；第2行排序给出第1题至第M题的正整数分值；以下N行，每行给出一名考生的准考证号（长度不超过20的字符串）、该生解决的题目总数m、以及这m道题的题号（题目号由1到M）。&nbsp;</span><span style=\"color:#333333;font-size:10.5pt;font-family:微软雅黑;\"><br />\n</span><span style=\"color:#333333;font-size:10.5pt;font-family:微软雅黑;\">当读入的考生人数为0时，输入结束，该场考试不予处理。</span> \n</p>\n\n## 输出描述\n<p class=\"p0\">\n	<span style=\"color:#333333;font-size:10.5pt;font-family:微软雅黑;\">对每场考试，首先在第1行输出不低于分数线的考生人数n，随后n行按分数从高到低输出上线考生的考号与分数，其间用1空格分隔。若有多名考生分数相同，则按他们考号的升序输出。</span> \n</p>\n\n## 提示\n<div class=\"Section0\">\n	<p class=\"p0\">\n		<span style=\"font-size:10.5000pt;font-family:\'宋体\';\">这题比较简单，计算好每个人的分数后按题目要求排序即可。</span>\n	</p>\n</div>\n\n## 规则\nACM', '[{\"input\": \"3 5 32\\r\\n17 10 12 9 15\\r\\nCS22003 5 1 2 3 4 5\\r\\nCS22004 3 5 1 3\\r\\nCS22002 2 1 5\\r\\n0\", \"output\": \"3\\r\\nCS22003 63\\r\\nCS22004 44\\r\\nCS22002 32\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235471', '1196', '0', 'C语言程序设计教程（第三版）课后习题6.4', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>求Sn=1!+2!+3!+4!+5!+&hellip;+n!之值，其中n是一个数字。</p>\n\n## 输入描述\nn\n\n## 输出描述\n和\n\n## 提示\n<p>n的取值比较大，Sn需要定义成long long型，输出使用%lld<br />\n如果使用VC6调试，Sn定义成__int64，输出使用%I64d，提交时记得改回来。</p>\n\n## 规则\nACM', '[{\"input\": \"5\", \"output\": \"153\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235472', '1197', '0', 'C语言程序设计教程（第三版）课后习题3.7', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	要将\"China\"译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母\"A\"后面第4个字母是\"E\"．\"E\"代替\"A\"。因此，\"China\"应译为\"Glmre\"。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，’C’、’h’、’i’、’n’、’a’，经过运算，使c1、c2、c3、c4、c5分别变为’G’、’l’、’m’、’r’、’e’，并输出。\n</p>\n\n## 输入描述\n<p>\n	China\n</p>\n\n## 输出描述\n<p>\n	加密后的China\n</p>\n\n## 提示\nso easy\n\n## 规则\nACM', '[{\"input\": \"China\", \"output\": \"Glmre\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235473', '1198', '0', 'C语言程序设计教程（第三版）课后习题6.6', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n打印出所有\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该本身。\n例如：153是一个水仙花数，因为153=1^3+5^3+3^3。\nOutput:\n<pre>153\n???\n???\n??? </pre>\n\n## 输入描述\n无\n\n## 输出描述\n所有的水仙花数，从小的开始。\n每行一个\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1\", \"output\": \"153\\r\\n370\\r\\n371\\r\\n407\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235474', '1199', '0', 'C语言程序设计教程（第三版）课后习题8.1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。\n\n## 输入描述\n两个数\n\n## 输出描述\n最大公约数 最小公倍数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"6 15\", \"output\": \"3 30\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235475', '1200', '0', '2005年春浙江省计算机等级考试二级C 编程题(2)', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p><!--[if gte mso 9]><xml>\n<w:WordDocument>\n<w:View>Normal</w:View>\n<w:Zoom>0</w:Zoom>\n<w:PunctuationKerning />\n<w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>\n<w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>\n<w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>\n<w:ValidateAgainstSchemas />\n<w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>\n<w:IgnoreMixedContent>false</w:IgnoreMixedContent>\n<w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>\n<w:Compatibility>\n<w:SpaceForUL />\n<w:BalanceSingleByteDoubleByteWidth />\n<w:DoNotLeaveBackslashAlone />\n<w:ULTrailSpace />\n<w:DoNotExpandShiftReturn />\n<w:AdjustLineHeightInTable />\n<w:BreakWrappedTables />\n<w:SnapToGridInCell />\n<w:WrapTextWithPunct />\n<w:UseAsianBreakRules />\n<w:DontGrowAutofit />\n<w:UseFELayout />\n</w:Compatibility>\n<w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>\n</w:WordDocument>\n</xml><![endif]--><!--[if gte mso 9]><xml>\n<w:LatentStyles DefLockedState=\"false\" LatentStyleCount=\"156\">\n</w:LatentStyles>\n</xml><![endif]--><!--[if !mso]><object\nclassid=\"clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D\" id=ieooui></object>\n<style>\nst1\\:*{behavior:url(#ieooui) }\n</style>\n<![endif]--><!--[if gte mso 10]>\n<style>\n/* Style Definitions */\ntable.MsoNormalTable\n{mso-style-name:普通表格;\nmso-tstyle-rowband-size:0;\nmso-tstyle-colband-size:0;\nmso-style-noshow:yes;\nmso-style-parent:\"\";\nmso-padding-alt:0cm 5.4pt 0cm 5.4pt;\nmso-para-margin:0cm;\nmso-para-margin-bottom:.0001pt;\nmso-pagination:widow-orphan;\nfont-size:10.0pt;\nfont-family:\"Times New Roman\";\nmso-fareast-font-family:\"Times New Roman\";\nmso-ansi-language:#0400;\nmso-fareast-language:#0400;\nmso-bidi-language:#0400;}\n</style>\n<![endif]--></p>\n<p style=\"margin-top: 2pt; text-indent: 21pt; line-height: 16pt;\" class=\"MsoNormal\"><span style=\"font-family: 宋体;\">输出一张摄氏一华氏温度转换表，摄氏温度的取值区间是<span lang=\"EN-US\">[-100<sup>0</sup> C</span>，<span lang=\"EN-US\">150<sup>0</sup>C</span><span lang=\"EN-US\"> ]</span>，温度间隔<span lang=\"EN-US\">5<sup>0</sup>C</span>。要求定义和调用函数<span lang=\"EN-US\"> ctof(c),</span>将摄氏温度<span lang=\"EN-US\">C</span>转换成华氏温度<span lang=\"EN-US\">F</span>，计算公式：<span lang=\"EN-US\"> </span></span></p>\n<p><span lang=\"EN-US\" style=\"font-size: 10.5pt; font-family: 宋体;\">F = 32 + C* 9/5</span><span style=\"font-size: 10.5pt; font-family: 宋体;\">。</span></p>\n<p>例如</p>\n<p>c=0-&gt;f=32<br />\nc=5-&gt;f=41<br />\nc=10-&gt;f=50<br />\nc=15-&gt;f=59<br />\nc=20-&gt;f=68<br />\nc=25-&gt;f=77<br />\nc=30-&gt;f=86<br />\nc=35-&gt;f=95<br />\nc=40-&gt;f=104<br />\nc=45-&gt;f=113<br />\nc=50-&gt;f=122<br />\nc=55-&gt;f=131<br />\nc=60-&gt;f=140<br />\nc=65-&gt;f=149</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"?\", \"output\": \"c=-100->f=-148\\r\\nc=-95->f=-139\\r\\nc=-90->f=-130\\r\\nc=-85->f=-121\\r\\nc=-80->f=-112\\r\\nc=-75->f=-103\\r\\nc=-70->f=-94\\r\\nc=-65->f=-85\\r\\nc=-60->f=-76\\r\\nc=-55->f=-67\\r\\nc=-50->f=-58\\r\\nc=-45->f=-49\\r\\nc=-40->f=-40\\r\\nc=-35->f=-31\\r\\nc=-30->f=-22\\r\\nc=-25->f=-13\\r\\nc=-20->f=-4\\r\\nc=-15->f=5\\r\\nc=-10->f=14\\r\\nc=-5->f=23\\r\\nc=0->f=32\\r\\nc=5->f=41\\r\\nc=10->f=50\\r\\nc=15->f=59\\r\\nc=20->f=68\\r\\nc=25->f=77\\r\\nc=30->f=86\\r\\nc=35->f=95\\r\\nc=40->f=104\\r\\nc=45->f=113\\r\\nc=50->f=122\\r\\nc=55->f=131\\r\\nc=60->f=140\\r\\nc=65->f=149\\r\\nc=70->f=158\\r\\nc=75->f=167\\r\\nc=80->f=176\\r\\nc=85->f=185\\r\\nc=90->f=194\\r\\nc=95->f=203\\r\\nc=100->f=212\\r\\nc=105->f=221\\r\\nc=110->f=230\\r\\nc=115->f=239\\r\\nc=120->f=248\\r\\nc=125->f=257\\r\\nc=130->f=266\\r\\nc=135->f=275\\r\\nc=140->f=284\\r\\nc=145->f=293\\r\\nc=150->f=302\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235476', '1201', '0', 'C语言程序设计教程（第三版）课后习题3.7', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>要将&quot;China&quot;译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母&quot;A&quot;后面第4个字母是&quot;E&quot;．&quot;E&quot;代替&quot;A&quot;。因此，&quot;China&quot;应译为&quot;Glmre&quot;。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，&rsquo;C&rsquo;、&rsquo;h&rsquo;、&rsquo;i&rsquo;、&rsquo;n&rsquo;、&rsquo;a&rsquo;，经过运算，使c1、c2、c3、c4、c5分别变为&rsquo;G&rsquo;、&rsquo;l&rsquo;、&rsquo;m&rsquo;、&rsquo;r&rsquo;、&rsquo;e&rsquo;，并输出。</p>\n\n## 输入描述\n<p>China</p>\n\n## 输出描述\n<p>加密后的China</p>\n\n## 提示\nso easy\n\n## 规则\nACM', '[{\"input\": \"China\", \"output\": \"Glmre\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235477', '1202', '0', 'C语言程序设计教程（第三版）课后习题6.6', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n打印出所有\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该本身。\n例如：153是一个水仙花数，因为153=1^3+5^3+3^3。\nOutput:<pre>\n153\n???\n???\n??? </pre>\n\n## 输入描述\n无\n\n## 输出描述\n所有的水仙花数，从小的开始。\n每行一个\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1\", \"output\": \"153\\r\\n370\\r\\n371\\r\\n407\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938457235478', '1203', '0', 'C语言程序设计教程（第三版）课后习题8.1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。\n\n## 输入描述\n两个数\n\n## 输出描述\n最大公约数 最小公倍数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"6 15\", \"output\": \"3 30\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150017', '1204', '0', '在同一行输出“Hello World! I\'m a C++ program.”', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span style=\"font-family:Courier New;\">编程输出以下内容</span> \n</p>\n<p>\n	<span style=\"font-family:Courier New;\">Hello World! I\'m a C++ program.</span> \n</p>\n<p>\n	<span style=\"font-family:Courier New;\">这是入门练习题，要求必须用两条输出命令进行输出。</span> \n</p>\n<p>\n	<span style=\"font-family:Courier New;\"><br />\n</span> \n</p>\n<p>\n	<span style=\"font-family:Courier New;\">样例输出</span> \n</p>\n<p>\n	<span style=\"font-family:Courier New;\">Hello World! I\'m a C++ program.</span>\n</p>\n<p>\n	<span style=\"font-family:Courier New;\"><br />\n</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">注意大小写、空格、感叹号，句号，单引号都必须使用英文输入法里的符号。 <br />\n注意：<span style=\"font-family:Courier New;\">Hello World! I\'m a C++ program.</span><span style=\"font-family:SimSun;\"></span>前后不能添加空格，</span>\n</p>\n<p>\n	<span style=\"font-family:SimSun;\">严格按照题目要求输出<br />\n</span>\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"Hello World! I\'m a C++ program.\"}]', '[\"cpp\", \"c\"]', 3, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-25 14:26:22', '1');
INSERT INTO `data_problem` VALUES ('1970761938520150018', '1052', '0', 'C语言程序设计教程（第三版）课后习题3.7', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	要将\"China\"译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母\"A\"后面第4个字母是\"E\"．\"E\"代替\"A\"。因此，\"China\"应译为\"Glmre\"。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，’C’、’h’、’i’、’n’、’a’，经过运算，使c1、c2、c3、c4、c5分别变为’G’、’l’、’m’、’r’、’e’，并输出。\n</p>\n\n## 输入描述\n<p>\n	China\n</p>\n\n## 输出描述\n<p>\n	加密后的China\n</p>\n\n## 提示\nso easy\n\n## 规则\nACM', '[{\"input\": \"China\", \"output\": \"Glmre\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150019', '1205', '0', '分行输出“Hello World!”和“ I\'m a C++ program.”', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span style=\"font-family:SimSun;\">请输出以下内容</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">Hello World!</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">I\'m a C++ program.</span>\n</p>\n<p>\n	<span style=\"font-family:SimSun;\"><br />\n</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">提示:所有的符号是英文符号</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">输出回车的方法举例</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">cout&lt;&lt;\"First Line\"&lt;&lt;endl&lt;&lt;\"Second Line\";&nbsp; // 说明：endl能输出换行</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">也可以这样 cout&lt;&lt;\"First Line\"&lt;&lt;endl; cout&lt;&lt;\"Second Line\";&nbsp;</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">还可写成</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">cout&lt;&lt;\"First Line\"; cout&lt;&lt;endl; cout&lt;&lt;\"Second Line\"; <br />\n</span>\n</p>\n<p>\n	<span style=\"font-family:SimSun;\"><br />\n</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">今后就不再重复提醒必须注意输出的大小写及英文字符，输出内容中该有的空格以及输出每行首尾不该有空格。</span>\n</p>\n<p>\n	<span style=\"font-family:SimSun;\"><br />\n</span>\n</p>\n<p>\n	<span style=\"font-family:SimSun;\"><br />\n</span> \n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"Hello World!\\r\\nI\'m a C++ program.\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150020', '1206', '0', '整型变量数值范围练习', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span style=\"font-family:SimSun;\">请按以下要求编程，体会整型变量能存放数据的大小范围</span> \n</p>\n<table style=\"width:300px;\" border=\"1\" cellspacing=\"0\" bordercolor=\"#000000\" cellpadding=\"2\">\n	<tbody>\n		<tr>\n			<td>\n				<p>\n					<span style=\"font-family:SimSun;\">&nbsp;定义a b c d e f g 七个整形变量。（int类型）</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">将常数1234567890保存到变量a</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">将常数2147483646保存到变量b</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">计算b+1并将结果保存到变量c</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">计算c+1并将结果保存到变量d</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">将常数-2147483647保存到变量e</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">计算e-1并将结果保存到变量f</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">计算f-1并将结果保存到变量g</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出\"a=\"以及变量a的值</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出\"b=\"以及变量b的值</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出\"c=\"以及变量c的值</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出\"d=\"以及变量d的值</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出\"e=\"以及变量e的值</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出\"f=\"以及变量f的值</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出\"g=\"以及变量g的值</span> \n				</p>\n			</td>\n		</tr>\n	</tbody>\n</table>\n<p>\n	<span style=\"font-family:SimSun;\">&nbsp;</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">提示：</span><span style=\"font-family:SimSun;\">部分样例输出</span><br />\n<span style=\"font-family:SimSun;\">a=1234567890</span><br />\n<span style=\"font-family:SimSun;\">b=2147483646</span> \n</p>\n<p>\n	&nbsp;\n</p>\n<p>\n	<span style=\"font-family:SimSun;\">命令 </span><span style=\"background-color:#cccccc;font-family:SimSun;\"><strong>k=5+j</strong></span><span style=\"background-color:#cccccc;font-family:SimSun;\"><strong>;&nbsp;</strong></span><span style=\"font-family:SimSun;\"> 表示计算5+变量j的值，并将计算结果保存到变量k</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">命令 </span><span style=\"background-color:#cccccc;font-family:SimSun;\"><strong>cout&lt;&lt;\"k=\"&lt;&lt;k&lt;&lt;endl;</strong></span><span style=\"font-family:SimSun;\"> 将输出 k=以及变量k的值</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">int类型的变量只能存放-2147483648到2147483647之间的整数，</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">大于2147483647的数存入int类型变量将出现溢出</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">小于--2147483648的数存入int类型变量将出现溢出</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">请观察数据溢出后的数值大小（变量d，变量g的值）</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">&nbsp;</span> \n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"a=1234567890\\r\\nb=2147483646\\r\\nc=2147483647\\r\\nd=-2147483648\\r\\ne=-2147483647\\r\\nf=-2147483648\\r\\ng=2147483647\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150021', '1207', '0', 'C语言程序设计教程（第三版）课后习题6.5', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n求以下三数的和,保留2位小数 1~a之和 1~b的平方和 1~c的倒数和\n\n## 输入描述\na b c\n\n## 输出描述\n<p>1+2+...+a + 1^2+2^2+...+b^2 + 1/1+1/2+...+1/c</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"100 50 10\", \"output\": \"47977.93\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150022', '1208', '0', '双精度实数的有效数位和精度误差实验', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	体验双精度型变量能存放含小数的实数、存放实数时会出现误差、虽然能表示很大的数但有真正准确的有效数位是有限的\n</p>\n<p>\n	按以下要求编程\n</p>\n<p>\n	<table style=\"width:300px;\" border=\"1\" cellspacing=\"0\" bordercolor=\"#000000\" cellpadding=\"2\">\n		<tbody>\n			<tr>\n				<td>\n					<p>\n						&nbsp;定义d1 d2 d3 d4&nbsp;四个双精度型变量。\n					</p>\n					<p>\n						&nbsp;\n					</p>\n					<p>\n						将常数43211234保存到变量d1\n					</p>\n					<p>\n						计算d1*d1*d1并将结果保存到变量d2\n					</p>\n					<p>\n						计算1.0/11并将结果保存到变量d3\n					</p>\n					<p>\n						将常数1.9保存到变量d4\n					</p>\n					<p>\n						&nbsp;\n					</p>\n					<p>\n						输出\"d1=\"以及变量d1的值\n					</p>\n					<p>\n						输出\"d1*d1*d1=\"以及变量d2的值\n					</p>\n					<p>\n						输出\"1.0/11=\"以及变量d3的值\n					</p>\n					<p>\n						输出\"1.9=\"以及变量d4的值\n					</p>\n					<p>\n						&nbsp;\n					</p>\n					<p>\n						设置输出位数为25位（cout.precision(25);）\n					</p>\n					<p>\n						输出\"d1=\"以及变量d1的值\n					</p>\n					<p>\n						输出\"d1*d1*d1=\"以及变量d2的值\n					</p>\n					<p>\n						输出\"1.0/11=\"以及变量d3的值\n					</p>\n					<p>\n						输出\"1.9=\"以及变量d4的值\n					</p>\n				</td>\n			</tr>\n		</tbody>\n	</table>\n</p>\n<p>\n	<span style=\"font-family:SimSun;\">&nbsp;</span><span style=\"font-family:SimSun;\">部分样例输出</span><br />\n<span style=\"font-family:SimSun;\">d1=4.32112e+07</span><br />\n<span style=\"font-family:SimSun;\">d1*d1*d1=8.06845e+22</span> \n</p>\n<p>\n	&nbsp;\n</p>\n<p>\n	提示：\n</p>\n<p>\n	结果出现类似 1.23e+05 表示 1.23*10<sup>5 </sup>即等于 123000\n</p>\n<p>\n	注意：43211234的立方应该是80684480377774939360904，观察双精度数在第几位开始出现误差。（误差是正常的）\n</p>\n<p>\n	对比 1 / 11 与 1.0 / 11结果的不同。1 / 11是整除结果为整数部分，1.0 / 11是实数除结果为实数\n</p>\n<p>\n	观察1.9保存到双精度变量的精度误差。\n</p>\n<p>\n	数一数，双精度类型的有效数位是几位？和讲义不太一样\n</p>\n<p>\n	&nbsp;\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"d1=4.32112e+07\\r\\nd1*d1*d1=8.06845e+22\\r\\n1.0/11=0.0909091\\r\\n1.9=1.9\\r\\nd1=43211234\\r\\nd1*d1*d1=80684480377774931968000\\r\\n1.0/11=0.09090909090909091161414324\\r\\n1.9=1.899999999999999911182158\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150023', '1209', '0', '字符型数据与ASCII码实验', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span style=\"font-family:SimSun;\">体验字符型数据以及ASCII码</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">请根据以下要求编程</span> \n</p>\n<p>\n	<table style=\"width:300px;\" border=\"1\" cellspacing=\"0\" bordercolor=\"#000000\" cellpadding=\"2\">\n		<tbody>\n			<tr>\n				<td>\n					<p>\n						<span style=\"font-family:SimSun;\">定义 c1 c2 c3 c4 c5 五个字符型变量</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">将大写符“Z”保存到变量c1</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">将数值65保存到变量c2</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">计算c2+1的值并保存到变量c3</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">将数值97保存到变量c4</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">将数值48保存到变量c5</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">不换行连续输出c1，c2，c3，c4，c5变量的值</span> \n					</p>\n				</td>\n			</tr>\n		</tbody>\n	</table>\n</p>\n<p>\n	<span style=\"font-family:SimSun;\">部分样例输出</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">ZAB</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">提示：</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">字符常量必须用一对英文单引号括起来。例如 a=\'i\'; b=\'J\';等</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">思考：大写字符A的编码是多少？小写字符a的编码是多少？大写编号在前还是小写编号在前？数字1的编码是多少？</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">字符型变量能存放多个字符吗？例如&nbsp;c1=\'abc\';</span><span style=\"font-family:SimSun;\">&nbsp;</span> \n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n<p>\n	&nbsp;\n</p>\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"ZABa0\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150024', '1210', '0', '查找元素(线性表)', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>（线性表）试编写一个算法，在带表头结点的单链表中寻找一个数。</p>\n<p>若找到，则函数返回该数在列表中的地址(i [1~n])；</p>\n<p>若找不到，则函数返回0。</p>\n\n## 输入描述\n<p>第一行 原始数列：</p>\n<p>2 3 4 5 6 7 8 9</p>\n<p>第二行 需要找的数：</p>\n<p>1</p>\n\n## 输出描述\n<p>找到则输出数在数列中的位置，第一个位置输出1依次类推</p>\n<p>若没有找到输出0</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2 3 4 5 6 7 8 9\\r\\n5\", \"output\": \"4\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150025', '1211', '0', '节点插入(线性表)', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p><span style=\"color: #323e32; font-size: 10.5pt\">有一个有序单链表（从小到大排序），表头指针为</span><span style=\"color: #323e32; font-size: 10.5pt\">head</span><span style=\"color: #323e32; font-size: 10.5pt\">，编写一个函数向该单链表中插入一个元素为</span><span style=\"color: #323e32; font-size: 10.5pt\">x</span><span style=\"color: #323e32; font-size: 10.5pt\">的结点，使插入后该链表仍然有序。</span><span style=\"color: #323e32; font-size: 10.5pt\"><br />\n<br />\n</span></p>\n\n## 输入描述\n<p>输入长度n：5</p>\n<p>输入数据：1 6 8 9 10</p>\n<p>输入插入数据：7</p>\n\n## 输出描述\n<p>输出：1 6 7 8 9 10</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"4\\r\\n1 2 3 4\\r\\n6\", \"output\": \"1 2 3 4 6\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150026', '1212', '0', '常数与常量实验', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span style=\"font-family:SimSun;\">\n</p>\n<p>\n	<span style=\"font-family:SimSun;\"></span>\n</p>\n<p>\n	体验常量的定义方法以及特殊字符的使用\n</p>\n<p>\n	请根据以下要求编程</span>&nbsp;&nbsp;\n	<table style=\"width:500px;\" border=\"1\" cellspacing=\"1\" bordercolor=\"#000000\" cellpadding=\"1\">\n		<tbody>\n			<tr>\n				<td>\n					<p>\n						<span style=\"font-family:SimSun;\">用define命令定义常量oct1，并设置为八进制数77</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">用const命令定义整型常量hex1，并设置为十六进制数FF</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">用const命令定义字符串常量str1，并设置为“Welcome”</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">用const命令定义字符常量dq1，并设置为一个双引号。（参考特殊字符）</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">用</span><span style=\"font-family:SimSun;\">define</span><span style=\"font-family:SimSun;\">命令定义字符常量nl</span><span style=\"font-family:SimSun;\">1，并设置为一个<strong>换行</strong>符</span><span style=\"font-family:SimSun;\">。（参考特殊字符）</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">用</span><span style=\"font-family:SimSun;\">define</span><span style=\"font-family:SimSun;\">命令定义字符串</span><span style=\"font-family:SimSun;\">常量str2</span><span style=\"font-family:SimSun;\">，并设置为“Gre</span><span style=\"font-family:SimSun;\">at!</span><span style=\"font-family:SimSun;\">”</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">用const命令定义常量pi，并设置为3.14159</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">输出常量oct1的值并换行</span> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">输出常量hex1的值并换行\n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">输出常量str1的值并换行</span><span style=\"font-family:SimSun;\"> \n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">输出常量dq1的值并换行\n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">输出常量nl1的值并换行\n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">输出常量str2的值并换行\n					</p>\n					<p>\n						<span style=\"font-family:SimSun;\">输出常量pi*100的值并换行</span></span></span></span></span></span> \n					</p>\n				</td>\n			</tr>\n		</tbody>\n	</table>\n</p>\n<p>\n	<span style=\"font-family:SimSun;\">部分样例输出</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">63</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\"></span>&nbsp;\n</p>\n<p>\n	<span style=\"font-family:SimSun;\">提示：</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">#define 不用加类型说明，不用加等号，最后面不用加分号</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\"></span><span style=\"font-family:SimSun;\">const 要加类型说明，要用等号，后面要加英文分号</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">特殊字符r \'\\t\'等，是用英文单引号括起来&nbsp;</span> \n</p>\n<p>\n	<strong><span style=\"font-family:SimSun;\">字符串</span></strong><span style=\"font-family:SimSun;\">用英文</span><strong><span style=\"font-family:SimSun;\">双引号</span></strong><span style=\"font-family:SimSun;\">括起来，</span> 字符串的类型说明为 string\n</p>\n<p>\n	<strong><span style=\"font-family:SimSun;\">字符</span></strong><span style=\"font-family:SimSun;\">用英文</span><strong><span style=\"font-family:SimSun;\">单引号</span></strong><span style=\"font-family:SimSun;\">括起来。</span> \n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"63\\r\\n255\\r\\nWelcome\\r\\n\\\"\\r\\n\\r\\n\\r\\nGreat!\\r\\n314.159\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150027', '1213', '0', '链表查找(线性表)', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<div style=\"line-height: 22pt\"><span style=\"font-size: 14pt\">\n<div style=\"line-height: 22pt\"><span style=\"font-size: 14pt\">&nbsp;线性表(a1,a2,a3,&hellip;,an)中元素递增有序且按顺序存储于计算机内。要求设计一算法完成：</span></div>\n<div style=\"line-height: 22pt\"><span style=\"font-size: 14pt\">（1） 用最少时间在表中查找数值为x的元素。</span></div>\n<div style=\"line-height: 22pt\"><span style=\"font-size: 14pt\">（2） 若找到将其与后继元素位置相交换。</span></div>\n<span style=\"font-size: 14pt\">（3） 若找不到将其插入表中并使表中元素仍递增有序。</span></span></div>\n\n## 输入描述\n<p>输入：x=3</p>\n<p>输入长度：9</p>\n<p>输入数据：2 3 5 7 12 15 17 23 45</p>\n\n## 输出描述\n<p>相同元素为：3</p>\n<p>交换后的链表为：2 5 3 7 12 15 17 23 45</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"4\\r\\n9\\r\\n2 3 5 7 12 15 17 23 45\", \"output\": \"no\\r\\n2 3 4 5 7 12 15 17 23 45\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150028', '1214', '0', '查找元素(线性表)', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>（线性表）试编写一个算法，在带表头结点的单链表中寻找一个数。</p>\n<p>若找到，则函数返回该数在列表中的地址(i [1~n])；</p>\n<p>若找不到，则函数返回0。</p>\n\n## 输入描述\n<p>第一行 原始数列：</p>\n<p>2 3 4 5 6 7 8 9</p>\n<p>第二行 需要找的数：</p>\n<p>1</p>\n\n## 输出描述\n<p>找到则输出数在数列中的位置，第一个位置输出1依次类推</p>\n<p>若没有找到输出0</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2 3 4 5 6 7 8 9\\r\\n5\", \"output\": \"4\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150029', '1053', '0', 'C语言程序设计教程（第三版）课后习题8.1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。\n\n## 输入描述\n两个数\n\n## 输出描述\n最大公约数 最小公倍数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"6 15\", \"output\": \"3 30\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150030', '1215', '0', '数学运算实验', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	按要求完成以下操作，请根据实际确定变量的类型。实数使用double类型\n</p>\n<table style=\"width:450px;\" border=\"1\" cellspacing=\"2\" bordercolor=\"#000000\" cellpadding=\"2\">\n	<tbody>\n		<tr>\n			<td>\n				<p>\n					&nbsp;将整数17保存到变量a，将整数6保存到变量b\n				</p>\n				<p>\n					计算a<strong>乘于</strong>b的值并保存到变量mul\n				</p>\n				<p>\n					计算a<strong>整除</strong>b的值并保存到变量div\n				</p>\n				<p>\n					计算a除以b的<strong>余数</strong>并保存到变量mod\n				</p>\n				<p>\n					计算a<strong>实数</strong><strong>除以</strong>b的实数结果并保存到变量rdiv （提示：1.0*a/b）\n				</p>\n				<p>\n					将变量b<strong>递增</strong>10\n				</p>\n				<p>\n					继续将变量b<strong>递增</strong>20\n				</p>\n				<p>\n					将变量a<strong>递减</strong>3\n				</p>\n				<p>\n					继续将变量a<strong>递减</strong>5\n				</p>\n				<p>\n					输出“a*b=”以及变量mul的值并换行\n				</p>\n				<p>\n					输出“a/b=”以及变量div的值并换行\n				</p>\n				<p>\n					输出“a%b=”以及变量mod的值并换行\n				</p>\n				<p>\n					输出“1.0*a/b=”以及变量rdiv的值并换行\n				</p>\n				<p>\n					输出“b=”以及变量b的值并换行\n				</p>\n输出“a=”以及变量a的值并换行\n			</td>\n		</tr>\n	</tbody>\n</table>\n<p>\n	&nbsp;提示：\n</p>\n<p>\n	整数和整数的算数运算，结果为整数\n</p>\n<p>\n	如果a，b是整数，则 a/b 执行整除，即保留商的整数部分\n</p>\n<p>\n	实数与整数的混合运算，结果为实数\n</p>\n<p>\n	如果a，b是整数，则1.0 * a / b就是实数结果\n</p>\n<p>\n	注意体会求 余数、整除、实数除、递增、递减。\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"a*b=102\\r\\na/b=2\\r\\na%b=5\\r\\n1.0*a/b=2.83333\\r\\nb=36\\r\\na=9\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150031', '1216', '0', '组合运算符（复合运算符）实验', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span style=\"font-family:SimSun;\">按以下要求编程。请使用合适的变量类型</span> \n</p>\n<table style=\"width:500px;\" border=\"1\" cellspacing=\"2\" bordercolor=\"#000000\">\n	<tbody>\n		<tr>\n			<td>\n				<p>\n					<span style=\"font-family:SimSun;\">把10赋值给整型变量a</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出“a: </span><span style=\"font-family:SimSun;\">”以及变量a的值并换行</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">把变量a增加5</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出“a+5: ”以及变量a的值并换行</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">用++命令把变量a递增1</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出“a++: ”以及变量a的值并换行</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">用+=命令把变量a递增5</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出“a+=5: ”以及变量a的值并换行</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">&nbsp;</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">把50赋值给整型变量b</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出“b: ”以及变量b的值并换行</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">将变量b的值减少10</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\"><span style=\"font-family:SimSun;\">输出“b-10: ”以及变量b的值并换行</span> \n				</p>\n</span> \n				<p>\n					<span style=\"font-family:SimSun;\">用--命令把变量b递减1</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出“b--: ”以及变量b的值并换行</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">用-=命令把变量b递减10</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">输出“b-=10: ”以及变量b的值并换行</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\"></span>\n				</p>\n			</td>\n		</tr>\n	</tbody>\n</table>\n<p>\n	<span style=\"font-family:SimSun;\">&nbsp;</span><span style=\"font-family:SimSun;\"> 提示：</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">注意体会 ++ -- += -=的作用</span> \n</p>\n<p>\n	<span style=\"font-family:SimSun;\">注意输出时“a: </span><span style=\"font-family:SimSun;\">” 冒号后面有一个空格</span> \n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"a: 10\\r\\na+5: 15\\r\\na++: 16\\r\\na+=5: 21\\r\\nb: 50\\r\\nb-10: 40\\r\\nb--: 39\\r\\nb-=10: 29\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150032', '1217', '0', '关系运算实验', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	按以下要求编程\n</p>\n<table style=\"width:500px;\" border=\"1\" cellspacing=\"2\" bordercolor=\"#000000\" cellpadding=\"0\">\n	<tbody>\n		<tr>\n			<td>\n				<p>\n					<span style=\"font-family:SimSun;\">&nbsp;直接输出“7==5: ”以及关系运算(7==5)的值并回车换行</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">&nbsp;直接输出“5&gt;4: ”以及关系运算(5&gt;4)的值并回车换行</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">&nbsp;直接输出“3!=2: ”以及关系运算(3!=2)的值并回车换行</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">&nbsp;直接输出“6&gt;=6: ”以及关系运算(6&gt;=6)的值并回车换行</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">&nbsp;直接输出“5&lt;5: ”以及关系运算(5&lt;5)的值并回车换行</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">&nbsp;令a=2, b=3和c=6, （可以直接 int a=2;）</span> \n				</p>\n				<p>\n					<span style=\"font-family:SimSun;\">&nbsp;输出“a==5: ” 以及关系运算(a==5)的值并回车换行</span> \n					<p>\n						<span style=\"font-family:SimSun;\">&nbsp;输出“a*b&gt;=c: ” 以及关系运算(a*b &gt;= c)的值并回车换行</span><br />\n<span style=\"font-family:SimSun;\">&nbsp;输出“b+4&gt;a*c: ” 以及关系运算(b+4&gt;a*c)的值并回车换行</span><br />\n<span style=\"font-family:SimSun;\">&nbsp;输出“(b=2)==a: ” 以及关系运算((b=2) == a)的值并回车换行</span> \n					</p>\n						</td>\n							</tr>\n								</tbody>\n									</table>\n									<p>\n										提示：\n									</p>\n									<p>\n										关系运算的操作是在进行判断，判断该关系式是否成立，\n									</p>\n									<p>\n										如果关系成立，结果为逻辑值true；如果关系不成立，结果为逻辑值false\n									</p>\n									<p>\n										true用1或非0的数表示， false用0表示。\n									</p>\n									<p>\n										注意 ：\n									</p>\n									<p>\n										判断是否相等，关系运算符是 == 两个等号。一个等号是赋值命令，连续两个等号是判断是否相等。\n									</p>\n									<p>\n										判断不等于，关系运算符是 !=\n									</p>\n									<p>\n										所有符号都是在英文输入法下输入的。\n									</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"7==5: 0\\r\\n5>4: 1\\r\\n3!=2: 1\\r\\n6>=6: 1\\r\\n5<5: 0\\r\\na==5: 0\\r\\na*b>=c: 1\\r\\nb+4>a*c: 0\\r\\n(b=2)==a: 1\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150033', '1218', '0', 'C语言程序设计教程（第三版）课后习题6.6', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>打印出所有&quot;水仙花数&quot;，所谓&quot;水仙花数&quot;是指一个三位数，其各位数字立方和等于该本身。例如：153是一个水仙花数，因为153=1^3+5^3+3^3。 </p>\n\n## 输入描述\n无\n\n## 输出描述\n所有的水仙花数，从小的开始。每行一个\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"153\\r\\n370\\r\\n371\\r\\n407\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150034', '1219', '0', '文件排版 format', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<!--[if gte mso 9]>Normal07.8 磅02falsefalsefalseMicrosoftInternetExplorer4<![endif]-->写电子邮件是有趣的，但不幸的是经常写不好看，主要是因为所有的行不一样长，你的上司想要发排版精美的电子邮件，你的任务是为他编写一个电子邮件排版程序。\n</p>\n<p>\n	<!--[if gte mso 9]><![endif]--><!--[if gte mso 10]>\n<![endif]-->\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">完成这个任务最简单的办法是在太短的行中的单词之间插入空格，但这并不是最好的方法，考虑如下例子：</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">This is the example you<span>&nbsp; </span>are</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">actually considering.</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">假设我们想将第二行变得和第一行一样长，靠简单地插入空格则我们将得到如下结果：</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">This is the example you<span>&nbsp; </span>are</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">actually<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>considering.</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">但这太难看了，因为在第二行中有一个非常大的空白，如果将第一行的单词“<span>are</span>”移到下一行我们将得到较好的结果：</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">This<span>&nbsp; </span>is<span>&nbsp; </span>the<span>&nbsp; </span>example<span>&nbsp;&nbsp; </span>you</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">are<span>&nbsp; </span>actually<span>&nbsp;&nbsp; </span>considering.</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">&nbsp;</span><span style=\"font-family:宋体;\">当然，这必须对难看程度进行量化。因此我们必须给出单词之间的空格的难看程度，一个包含<span>N</span>个空格符的空白段，其难看程度值为<span>(n-1)<sup>2</sup></span>，程序的目的是使难看程度的总和最小化。例如，第一个例子的难看程度是<span>1+7*7=50</span>，而第二个例子的难看程度仅为<span>1+1+1+4+1+4=12</span>。</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输出时，每一行的开头和结尾处都必须是一个单词，即每行开头和结尾处不能有空白。唯一例外的是该行仅有一个单词组成的情况，此时如果该单词比该行应有的长度短则我们指定它的难看程度为<span>500</span>。</span>\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	<!--[if gte mso 9]>Normal07.8 磅02falsefalsefalseMicrosoftInternetExplorer4<![endif]--><span style=\"font-family:宋体;\">输入文件第一行是一个整数<span>N</span>，表示排版后文章每行要求达到的宽度，<span>1&lt;=N&lt;=80</span>。</span>\n</p>\n<p>\n	<span style=\"font-family:宋体;\">后面是给出的一段文章，该段文章由一个或多个单词组成，单词由<span>ASCII</span>码值为<span>33</span>到<span>126</span>（包含<span>33</span>和<span>126</span>）的字符组成，单词与单词之间用空格隔开（可能超过一个）。单词长度不会超过段落要求达到的宽度。一段文字所有单词的总长度不会超过<span>10000</span>个字符，任何一行都不会超过<span>100</span>个字符，任何一个单词都在同一行内。</span>\n</p>\n<p>\n	<!--[if gte mso 9]><![endif]--><!--[if gte mso 10]>\n<![endif]-->\n</p>\n\n## 输出描述\n<p>\n	<!--[if gte mso 9]>Normal07.8 磅02falsefalsefalseMicrosoftInternetExplorer4<![endif]--><span style=\"font-family:宋体;\">对于每个段落，找出使其难看程度最小的排版形式并输出句子：“<span>Minimal badness is B.</span>”<span>,B</span>是指按可能的最好排版形式会发生的难看程度值。注意排版后文本行数任意，多余的空格也可删除。</span>\n</p>\n<p>\n	<!--[if gte mso 9]><![endif]--><!--[if gte mso 10]>\n<![endif]-->\n</p>\n\n## 提示\n<p>\n	<!--[if gte mso 9]>Normal07.8 磅02falsefalsefalseMicrosoftInternetExplorer4<![endif]-->\n</p>\n<p>\n	<!--[if gte mso 9]><![endif]--><!--[if gte mso 10]>\n<![endif]-->\n</p>\n<p class=\"MsoNormal\">\n	<span><span>&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-family:宋体;\">见输入输出。</span>\n</p>\n<p>\n	<br />\n</p>\n\n## 规则\nACM', '[{\"input\": \"28\\r\\nThis is the example you  are\\r\\nactually considering.\", \"output\": \"Minimal badness is 12.\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150035', '1220', '0', '中级第五课——找回文数1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n找出10000以内的回文数。<br />\n&nbsp;从左向右读与从右向左读是同一个数的数为回文数，如19391是回文数。<br />\n<div>\n	<br />\n</div>\n\n## 输入描述\n无<br />\n\n## 输出描述\n输出所有符合条件的回文数，\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"2 3 4 5 6 7 8 9 11 22 33 44 55 66 77 88 99 101 111 121 131 141 151 161 171 181 191 202 212 222 232 242 252 262 272 282 292 303 313 323 333 343 353 363 373 383 393 404 414 424 434 444 454 464 474 484 494 505 515 525 535 545 555 565 575 585 595 606 616 626 636 646 656 666 676 686 696 707 717 727 737 747 757 767 777 787 797 808 818 828 838 848 858 868 878 888 898 909 919 929 939 949 959 969 979 989 999 1001 1111 1221 1331 1441 1551 1661 1771 1881 1991 2002 2112 2222 2332 2442 2552 2662 2772 2882 2992 3003 3113 3223 3333 3443 3553 3663 3773 3883 3993 4004 4114 4224 4334 4444 4554 4664 4774 4884 4994 5005 5115 5225 5335 5445 5555 5665 5775 5885 5995 6006 6116 6226 6336 6446 6556 6666 6776 6886 6996 7007 7117 7227 7337 7447 7557 7667 7777 7887 7997 8008 8118 8228 8338 8448 8558 8668 8778 8888 8998 9009 9119 9229 9339 9449 9559 9669 9779 9889 9999\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150036', '1221', '0', '字符数组的定义赋值与输出实验', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	按以下操作完成指定的字符数组实验\n	<table style=\"width:550px;\" cellpadding=\"1\" cellspacing=\"1\" border=\"1\" bordercolor=\"#000000\">\n		<tbody>\n			<tr>\n				<td>\n					<p>\n						<span>定义字符数组ch1[100]并直接赋初始值“Hello&nbsp;Hi” （要求用{ }赋值并加上结束符\'\\0\'）</span> \n					</p>\n					<p>\n						定义<span>字符数组ch2[50]并直接赋初始值“Nice to Meet You” （要求用\"\"赋值）</span> \n					</p>\n					<p>\n						输出字符数组ch1的字符串并换行\n					</p>\n					<p>\n						输出<span>字符数组ch2的字符串并换行</span> \n					</p>\n					<p>\n						<span>在同一行连续输出<span>字符ch1[1]，ch1[3]，ch1[5]，ch1[7]并换行</span></span> \n					</p>\n					<p>\n						<span><span>在同一行连续输出</span><span>字符ch2[0]，ch2[2]，ch2[4]，ch2[6]，ch2[8]并换行</span></span> \n					</p>\n				</td>\n			</tr>\n		</tbody>\n	</table>\n</p>\n<p>\n	<br />\n</p>\n<p>\n	见一本通P84-86页\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"ok\", \"output\": \"Hello Hi\\r\\nNice to Meet You\\r\\nel i\\r\\nNc oM\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150037', '1222', '0', '字符串定义与赋值实验', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n请用字符串方式处理方式实现以下功能。必须#include &lt;string&gt;才能使用字符串的处理函数。<br />\n<p>\n	字符数组是c语言时代的方法，字符串string是c++后来发展的新方法。\n</p>\n<p>\n	string类型的字符串保留了字符数组的一些使用方法。\n</p>\n<p>\n	<table style=\"width:600px;\" cellpadding=\"1\" cellspacing=\"1\" border=\"1\" bordercolor=\"#000000\">\n		<tbody>\n			<tr>\n				<td>\n					<p>\n						用string类型定义空字符串s0\n					</p>\n					<p>\n						用双引号法定义字符串s1并直接赋值“You Can Make It”\n					</p>\n					<p>\n						定义字符串s2并直接赋值为s1+\'2\'的值\n					</p>\n					<p>\n						用string strNew(str)的方法定义字符串s3并直接赋值为s1+\"new3\"的值\n					</p>\n					<p>\n						用string strNew(n,char)的方法定义字符串s4并直接赋值为100个字符\'k\'\n					</p>\n					<p>\n						输出字符串s1,s2,s3,s4的值，每个字符串一行\n					</p>\n					<p>\n						连续输出s1的第1个字符，s2<span>的第2个字符，</span>s3<span>的第3个字符，</span>s4<span>的第4个字符并回车。</span> \n					</p>\n					<p>\n						<br />\n					</p>\n				</td>\n			</tr>\n		</tbody>\n	</table>\n</p>\n<p>\n	可以参考一本通 P133-135\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"q\", \"output\": \"You Can Make It\\r\\nYou Can Make It2\\r\\nYou Can Make Itnew3\\r\\nkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk\\r\\nYouk\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150038', '1223', '0', '字符串输入输出处理实验', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	用字符串完成以下要求\n</p>\n<p>\n	【输入】第一行：不带空格的字符串。第二行开始：包含空格的字符串。\n</p>\n<p>\n	【输出】将输入的第一行文字接到输入的第二行文字后面，做为输出的第一行\n</p>\n<p>\n	第二行输出：依次将第三行输入开始的每行的最后一个字符取出进行输出\n</p>\n<p>\n	第三行输出：总共输入的行数。\n</p>\n<p>\n	【说明】总共不超过100行\n</p>\n<p>\n	【样例输入1】\n</p>\n<p>\n	abc\n</p>\n<p>\n	123 456&nbsp;789\n</p>\n<p>\n	b b c\n</p>\n<p>\n	a p p\n</p>\n<p>\n	f p\n</p>\n<p>\n	【样例输出1】\n</p>\n<p>\n	123 456 789abc\n</p>\n<p>\n	cpp\n</p>\n<p>\n	5\n</p>\n<p>\n	<br />\n</p>\n<p>\n	【提示】\n</p>\n<p>\n	参考一本通P133-135 页\n</p>\n<p>\n	<br />\n</p>\n<p>\n	cin读入数据（包括字符串）时会将空格、制表付、回车等当做数据分割符。一行中有空格视为多个输入数据。\n</p>\n<p>\n	如果要将包含空格的整行数据整行数据读入字符串，可以用getline(cin,str)。\n</p>\n<p>\n	例如输入两行数据\n</p>\n<p>\n	abc\n</p>\n<p>\n	xmlz fj xm\n</p>\n<p>\n	方法一：\n</p>\n<p>\n	string str1,str2;\n</p>\n<p>\n	cin&lt;&lt;str1; //第一行数据没有空格，直接用cin读入，读入后&nbsp;<span>str1的值为\"abc\"&nbsp;</span>\n</p>\n<p>\n	getline(cin,<span style=\"background-color:#E53333;\">str2</span>); //前面的cin没有将第一行的回车处理，这时<span>getline将继续处理，去掉第一行的回车，str2没有被赋值</span>\n</p>\n<p>\n	<span>getline(cin,<span style=\"background-color:#E53333;\">str2</span>);</span> // 这时getline将得到第二行<span>整</span>行的信息，并将第二行的回车去掉。<span>读入后&nbsp;</span><span>str2的值为\"<span>xmlz fj xm</span>\"</span>\n</p>\n<p>\n	方法二：\n</p>\n<p>\n	<p>\n		string str1,str2;\n	</p>\n	<p>\n		getline(cin,<span style=\"color:#E53333;\"><strong>str1</strong></span>); //读入第一行，<span>读入后&nbsp;str1的值为\"abc</span>\"。且第一行的回车被去掉\n	</p>\n	<p>\n		getline(cin,<span style=\"color:#E53333;\"><strong>str2</strong></span>); // 这时getline将得到第二行整行的信息，并将第二行的回车去掉。读入后&nbsp;str2的值为\"xmlz fj xm\"\n	</p>\n</p>\n<p>\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"ak\\r\\n12 67 90\\r\\na b c fg\\r\\nad fh hjk sg\\r\\nsfg fg\\r\\nfgfsdg\", \"output\": \"12 67 90ak\\r\\ngggg\\r\\n6\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150039', '1224', '0', '换零钱 [1*]', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span>某人想将手中的一张面值 100 元的人民币换成 5 元、 1 元和 0.5 元面值的票子，但要求换正好 100 张，且每种票子至少一张。问：有几种换法？ <br />\n　 <br />\n提示： 用三重循环。想一想如何减少循环的次数。 <br />\n5 元、 1 元和 0.5 元最多各需要几张。记得要求正好换 100 张，总价值100元。 <br />\n循环变量代表某个币种的张数。 </span>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"11\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150040', '1054', '0', '[数值问题]高精度比较', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<br />\n</p>\n<p>\n	<br />\n</p>\n<div style=\"padding:0px;margin:0px;font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;text-align:center;\">\n	<span>高精度比较（bigpas/c/cpp）&nbsp;</span> \n</div>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【问题描述】&nbsp;</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入两个高精度正整数a和b（a，b的位数&lt;=200），比较这两个数的的大小</span> \n</p>\n<span><span style=\"font-size:14px;line-height:28px;background-color:#F5F5F5;\">【输入格式】</span></span> \n<p>\n	<br />\n</p>\n<p>\n	<span><span style=\"font-size:14px;line-height:28px;\">输入共两行，分别为a和b</span></span> \n</p>\n<p>\n	<span><span style=\"font-size:14px;line-height:28px;\">【输出格式】</span></span> \n</p>\n<p>\n	<span><span style=\"font-size:14px;line-height:28px;\">输出共一行，一个数</span></span> \n</p>\n<p>\n	<span><span style=\"font-size:14px;line-height:28px;\">若a&gt;=b 则输出结果1</span></span> \n</p>\n<p>\n	<span><span style=\"font-size:14px;line-height:28px;\">若a&lt;b &nbsp;则输出结果2</span></span> \n</p>\n<p>\n	<span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\">【输入样例1】&nbsp;</span><br />\n<span><span style=\"font-size:14px;line-height:28px;background-color:#F5F5F5;\">1234567890000</span></span> \n</p>\n<p>\n	<span><span style=\"font-size:14px;line-height:28px;\"><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\">1234567890001</span><br />\n</span></span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出样例1】</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	2\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\nConst<br />\n&nbsp; &nbsp; SIZE = 200;<br />\n<br />\nType<br />\n&nbsp; &nbsp; hugeint = Record<br />\n&nbsp; &nbsp; &nbsp; &nbsp; len : Integer;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; num : Array[1..SIZE] Of Integer;<br />\n&nbsp; &nbsp; End;<br />\nvar a,b:hugeint;<br />\n&nbsp; &nbsp; s1,s2:string;<br />\n&nbsp; &nbsp; i:integer;<br />\nFunction over(a, b : hugeint) : integer;<br />\n&nbsp; &nbsp; Var<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i : Integer;<br />\n&nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; If (a.len&gt;b.len) Then<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; over :=1 ;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Exit;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; If a.len &lt; b.len Then<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; over := 2;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Exit;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; For i := a.len DownTo 1 Do<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; If a.num[i] &gt; b.num[i] Then<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; over := 1;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Exit;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; If a.num[i] &lt; b.num[i] Then<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; over := 2;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Exit;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; over := 1;<br />\n&nbsp; &nbsp; End;<br />\n&nbsp; &nbsp;procedure datain;<br />\n&nbsp; &nbsp;begin<br />\n&nbsp; &nbsp; assign(input,\'big.in\'); &nbsp;assign(output,\'big.out\');<br />\n&nbsp; &nbsp; reset(input); rewrite(output);<br />\n&nbsp; &nbsp; readln(s1);<br />\n&nbsp; &nbsp; readln(s2);<br />\n&nbsp; &nbsp; a.len:=length(s1);<br />\n&nbsp; &nbsp; b.len:=length(s2);<br />\n&nbsp; &nbsp; for i:=1 to a.len do &nbsp;a.num[i]:=ord(s1[a.len-i+1])-ord(\'0\');<br />\n&nbsp; &nbsp; for i:=1 to b.len do &nbsp;b.num[i]:=ord(s2[b.len-i+1])-ord(\'0\');<br />\n&nbsp; &nbsp;end;<br />\n&nbsp; &nbsp;begin<br />\n&nbsp; &nbsp; datain;<br />\n&nbsp; &nbsp; writeln(over(a,b));<br />\n&nbsp; &nbsp;close(input);close(output);<br />\n&nbsp; &nbsp;end.<br />\n<div>\n	<br />\n</div>\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150041', '1225', '0', '输出N以内的素数 nprime [1*+]', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span> 输入一个整数n <br />\n输出N以内的所有素数 <br />\n</span>\n</p>\n<p align=\"left\">\n	<b><span>Input</span> </b> \n</p>\n<p>\n	<span> 一个整数n <br />\n</span>\n</p>\n<p align=\"left\">\n	<b><span>Output</span> </b> \n</p>\n<p>\n	<span> 由小到大输出N以内的所有素数 <br />\n每行一个数 <br />\n</span>\n</p>\n<p align=\"left\">\n	<b><span>Sample Input</span> </b> \n</p>\n<pre><span>样例输入1\n10\n\n样例输出1\n2\n3\n5\n7</span></pre>\n<p align=\"left\">\n	<b><span>Sample Output</span> </b> \n</p>\n<pre><span>　</span></pre>\n<p align=\"left\">\n	<b><span>Hint</span> </b> \n</p>\n<span> 2&lt;=N&lt;=5000 </span>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"4999\", \"output\": \"2\\r\\n3\\r\\n5\\r\\n7\\r\\n11\\r\\n13\\r\\n17\\r\\n19\\r\\n23\\r\\n29\\r\\n31\\r\\n37\\r\\n41\\r\\n43\\r\\n47\\r\\n53\\r\\n59\\r\\n61\\r\\n67\\r\\n71\\r\\n73\\r\\n79\\r\\n83\\r\\n89\\r\\n97\\r\\n101\\r\\n103\\r\\n107\\r\\n109\\r\\n113\\r\\n127\\r\\n131\\r\\n137\\r\\n139\\r\\n149\\r\\n151\\r\\n157\\r\\n163\\r\\n167\\r\\n173\\r\\n179\\r\\n181\\r\\n191\\r\\n193\\r\\n197\\r\\n199\\r\\n211\\r\\n223\\r\\n227\\r\\n229\\r\\n233\\r\\n239\\r\\n241\\r\\n251\\r\\n257\\r\\n263\\r\\n269\\r\\n271\\r\\n277\\r\\n281\\r\\n283\\r\\n293\\r\\n307\\r\\n311\\r\\n313\\r\\n317\\r\\n331\\r\\n337\\r\\n347\\r\\n349\\r\\n353\\r\\n359\\r\\n367\\r\\n373\\r\\n379\\r\\n383\\r\\n389\\r\\n397\\r\\n401\\r\\n409\\r\\n419\\r\\n421\\r\\n431\\r\\n433\\r\\n439\\r\\n443\\r\\n449\\r\\n457\\r\\n461\\r\\n463\\r\\n467\\r\\n479\\r\\n487\\r\\n491\\r\\n499\\r\\n503\\r\\n509\\r\\n521\\r\\n523\\r\\n541\\r\\n547\\r\\n557\\r\\n563\\r\\n569\\r\\n571\\r\\n577\\r\\n587\\r\\n593\\r\\n599\\r\\n601\\r\\n607\\r\\n613\\r\\n617\\r\\n619\\r\\n631\\r\\n641\\r\\n643\\r\\n647\\r\\n653\\r\\n659\\r\\n661\\r\\n673\\r\\n677\\r\\n683\\r\\n691\\r\\n701\\r\\n709\\r\\n719\\r\\n727\\r\\n733\\r\\n739\\r\\n743\\r\\n751\\r\\n757\\r\\n761\\r\\n769\\r\\n773\\r\\n787\\r\\n797\\r\\n809\\r\\n811\\r\\n821\\r\\n823\\r\\n827\\r\\n829\\r\\n839\\r\\n853\\r\\n857\\r\\n859\\r\\n863\\r\\n877\\r\\n881\\r\\n883\\r\\n887\\r\\n907\\r\\n911\\r\\n919\\r\\n929\\r\\n937\\r\\n941\\r\\n947\\r\\n953\\r\\n967\\r\\n971\\r\\n977\\r\\n983\\r\\n991\\r\\n997\\r\\n1009\\r\\n1013\\r\\n1019\\r\\n1021\\r\\n1031\\r\\n1033\\r\\n1039\\r\\n1049\\r\\n1051\\r\\n1061\\r\\n1063\\r\\n1069\\r\\n1087\\r\\n1091\\r\\n1093\\r\\n1097\\r\\n1103\\r\\n1109\\r\\n1117\\r\\n1123\\r\\n1129\\r\\n1151\\r\\n1153\\r\\n1163\\r\\n1171\\r\\n1181\\r\\n1187\\r\\n1193\\r\\n1201\\r\\n1213\\r\\n1217\\r\\n1223\\r\\n1229\\r\\n1231\\r\\n1237\\r\\n1249\\r\\n1259\\r\\n1277\\r\\n1279\\r\\n1283\\r\\n1289\\r\\n1291\\r\\n1297\\r\\n1301\\r\\n1303\\r\\n1307\\r\\n1319\\r\\n1321\\r\\n1327\\r\\n1361\\r\\n1367\\r\\n1373\\r\\n1381\\r\\n1399\\r\\n1409\\r\\n1423\\r\\n1427\\r\\n1429\\r\\n1433\\r\\n1439\\r\\n1447\\r\\n1451\\r\\n1453\\r\\n1459\\r\\n1471\\r\\n1481\\r\\n1483\\r\\n1487\\r\\n1489\\r\\n1493\\r\\n1499\\r\\n1511\\r\\n1523\\r\\n1531\\r\\n1543\\r\\n1549\\r\\n1553\\r\\n1559\\r\\n1567\\r\\n1571\\r\\n1579\\r\\n1583\\r\\n1597\\r\\n1601\\r\\n1607\\r\\n1609\\r\\n1613\\r\\n1619\\r\\n1621\\r\\n1627\\r\\n1637\\r\\n1657\\r\\n1663\\r\\n1667\\r\\n1669\\r\\n1693\\r\\n1697\\r\\n1699\\r\\n1709\\r\\n1721\\r\\n1723\\r\\n1733\\r\\n1741\\r\\n1747\\r\\n1753\\r\\n1759\\r\\n1777\\r\\n1783\\r\\n1787\\r\\n1789\\r\\n1801\\r\\n1811\\r\\n1823\\r\\n1831\\r\\n1847\\r\\n1861\\r\\n1867\\r\\n1871\\r\\n1873\\r\\n1877\\r\\n1879\\r\\n1889\\r\\n1901\\r\\n1907\\r\\n1913\\r\\n1931\\r\\n1933\\r\\n1949\\r\\n1951\\r\\n1973\\r\\n1979\\r\\n1987\\r\\n1993\\r\\n1997\\r\\n1999\\r\\n2003\\r\\n2011\\r\\n2017\\r\\n2027\\r\\n2029\\r\\n2039\\r\\n2053\\r\\n2063\\r\\n2069\\r\\n2081\\r\\n2083\\r\\n2087\\r\\n2089\\r\\n2099\\r\\n2111\\r\\n2113\\r\\n2129\\r\\n2131\\r\\n2137\\r\\n2141\\r\\n2143\\r\\n2153\\r\\n2161\\r\\n2179\\r\\n2203\\r\\n2207\\r\\n2213\\r\\n2221\\r\\n2237\\r\\n2239\\r\\n2243\\r\\n2251\\r\\n2267\\r\\n2269\\r\\n2273\\r\\n2281\\r\\n2287\\r\\n2293\\r\\n2297\\r\\n2309\\r\\n2311\\r\\n2333\\r\\n2339\\r\\n2341\\r\\n2347\\r\\n2351\\r\\n2357\\r\\n2371\\r\\n2377\\r\\n2381\\r\\n2383\\r\\n2389\\r\\n2393\\r\\n2399\\r\\n2411\\r\\n2417\\r\\n2423\\r\\n2437\\r\\n2441\\r\\n2447\\r\\n2459\\r\\n2467\\r\\n2473\\r\\n2477\\r\\n2503\\r\\n2521\\r\\n2531\\r\\n2539\\r\\n2543\\r\\n2549\\r\\n2551\\r\\n2557\\r\\n2579\\r\\n2591\\r\\n2593\\r\\n2609\\r\\n2617\\r\\n2621\\r\\n2633\\r\\n2647\\r\\n2657\\r\\n2659\\r\\n2663\\r\\n2671\\r\\n2677\\r\\n2683\\r\\n2687\\r\\n2689\\r\\n2693\\r\\n2699\\r\\n2707\\r\\n2711\\r\\n2713\\r\\n2719\\r\\n2729\\r\\n2731\\r\\n2741\\r\\n2749\\r\\n2753\\r\\n2767\\r\\n2777\\r\\n2789\\r\\n2791\\r\\n2797\\r\\n2801\\r\\n2803\\r\\n2819\\r\\n2833\\r\\n2837\\r\\n2843\\r\\n2851\\r\\n2857\\r\\n2861\\r\\n2879\\r\\n2887\\r\\n2897\\r\\n2903\\r\\n2909\\r\\n2917\\r\\n2927\\r\\n2939\\r\\n2953\\r\\n2957\\r\\n2963\\r\\n2969\\r\\n2971\\r\\n2999\\r\\n3001\\r\\n3011\\r\\n3019\\r\\n3023\\r\\n3037\\r\\n3041\\r\\n3049\\r\\n3061\\r\\n3067\\r\\n3079\\r\\n3083\\r\\n3089\\r\\n3109\\r\\n3119\\r\\n3121\\r\\n3137\\r\\n3163\\r\\n3167\\r\\n3169\\r\\n3181\\r\\n3187\\r\\n3191\\r\\n3203\\r\\n3209\\r\\n3217\\r\\n3221\\r\\n3229\\r\\n3251\\r\\n3253\\r\\n3257\\r\\n3259\\r\\n3271\\r\\n3299\\r\\n3301\\r\\n3307\\r\\n3313\\r\\n3319\\r\\n3323\\r\\n3329\\r\\n3331\\r\\n3343\\r\\n3347\\r\\n3359\\r\\n3361\\r\\n3371\\r\\n3373\\r\\n3389\\r\\n3391\\r\\n3407\\r\\n3413\\r\\n3433\\r\\n3449\\r\\n3457\\r\\n3461\\r\\n3463\\r\\n3467\\r\\n3469\\r\\n3491\\r\\n3499\\r\\n3511\\r\\n3517\\r\\n3527\\r\\n3529\\r\\n3533\\r\\n3539\\r\\n3541\\r\\n3547\\r\\n3557\\r\\n3559\\r\\n3571\\r\\n3581\\r\\n3583\\r\\n3593\\r\\n3607\\r\\n3613\\r\\n3617\\r\\n3623\\r\\n3631\\r\\n3637\\r\\n3643\\r\\n3659\\r\\n3671\\r\\n3673\\r\\n3677\\r\\n3691\\r\\n3697\\r\\n3701\\r\\n3709\\r\\n3719\\r\\n3727\\r\\n3733\\r\\n3739\\r\\n3761\\r\\n3767\\r\\n3769\\r\\n3779\\r\\n3793\\r\\n3797\\r\\n3803\\r\\n3821\\r\\n3823\\r\\n3833\\r\\n3847\\r\\n3851\\r\\n3853\\r\\n3863\\r\\n3877\\r\\n3881\\r\\n3889\\r\\n3907\\r\\n3911\\r\\n3917\\r\\n3919\\r\\n3923\\r\\n3929\\r\\n3931\\r\\n3943\\r\\n3947\\r\\n3967\\r\\n3989\\r\\n4001\\r\\n4003\\r\\n4007\\r\\n4013\\r\\n4019\\r\\n4021\\r\\n4027\\r\\n4049\\r\\n4051\\r\\n4057\\r\\n4073\\r\\n4079\\r\\n4091\\r\\n4093\\r\\n4099\\r\\n4111\\r\\n4127\\r\\n4129\\r\\n4133\\r\\n4139\\r\\n4153\\r\\n4157\\r\\n4159\\r\\n4177\\r\\n4201\\r\\n4211\\r\\n4217\\r\\n4219\\r\\n4229\\r\\n4231\\r\\n4241\\r\\n4243\\r\\n4253\\r\\n4259\\r\\n4261\\r\\n4271\\r\\n4273\\r\\n4283\\r\\n4289\\r\\n4297\\r\\n4327\\r\\n4337\\r\\n4339\\r\\n4349\\r\\n4357\\r\\n4363\\r\\n4373\\r\\n4391\\r\\n4397\\r\\n4409\\r\\n4421\\r\\n4423\\r\\n4441\\r\\n4447\\r\\n4451\\r\\n4457\\r\\n4463\\r\\n4481\\r\\n4483\\r\\n4493\\r\\n4507\\r\\n4513\\r\\n4517\\r\\n4519\\r\\n4523\\r\\n4547\\r\\n4549\\r\\n4561\\r\\n4567\\r\\n4583\\r\\n4591\\r\\n4597\\r\\n4603\\r\\n4621\\r\\n4637\\r\\n4639\\r\\n4643\\r\\n4649\\r\\n4651\\r\\n4657\\r\\n4663\\r\\n4673\\r\\n4679\\r\\n4691\\r\\n4703\\r\\n4721\\r\\n4723\\r\\n4729\\r\\n4733\\r\\n4751\\r\\n4759\\r\\n4783\\r\\n4787\\r\\n4789\\r\\n4793\\r\\n4799\\r\\n4801\\r\\n4813\\r\\n4817\\r\\n4831\\r\\n4861\\r\\n4871\\r\\n4877\\r\\n4889\\r\\n4903\\r\\n4909\\r\\n4919\\r\\n4931\\r\\n4933\\r\\n4937\\r\\n4943\\r\\n4951\\r\\n4957\\r\\n4967\\r\\n4969\\r\\n4973\\r\\n4987\\r\\n4993\\r\\n4999\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938520150042', '1226', '0', '邮局选址问题', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span>邮局选址问题 <br />\n【问题描述：】    \n在一个按照东西和南北方向划分成规整街区的城市里，n个居民点散乱地分布在不同的街区中。用x坐标表示东西向，用y坐标表示南北向。各居民点的位置可以由\n坐标(x,y)表示。街区中任意2点(x1,y1)和(x2,y2)之间的距离可以用数值|x1-x2|+|y1-y2|度量。 <br />\n居民们希望在城市中选择建立邮局的最佳位置，使n个居民点到邮局的距离总和最小。 <br />\n【数据输入：】    第1行是居民点数n，1≤n≤10000。接下来n行是居民点的位置，每行2个整数x和y，-10000≤x，y≤10000。 <br />\n【结果输出:】 1个数，是n个居民点到邮局的距离总和的最小值。 <br />\n【输入文件示例】 <br />\n5 <br />\n1 2 <br />\n2 2 <br />\n1 3 <br />\n3 -2 <br />\n3 3 <br />\n【输出文件示例】 <br />\n10 </span>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"3\\r\\n-4 -3\\r\\n-4 5\\r\\n5 2\", \"output\": \"17\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258881', '1227', '0', '跳马问题 [2*+]', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span>如下图是半个中国象棋棋盘。有一只马从左下角A点跳到右上角B点。规定只能往右跳，跳法按照象棋的日字型跳法。 <br />\n<img src=\"http://localhost/JudgeOnline/imgs/1951_1.gif\" /> <br />\n求跳法总数</span>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"37\", \"output\": \"37\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258882', '1228', '0', '试卷批分 grade [2*]', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span>【问题描述：】 某学校进行了一次英语考试，共有10道是非题，每题为10分，解答用1表示“是”，用0表示“非”的方式。但老师批完卷后，发现漏批了一张试卷，而且标准答案也丢失了，手头只剩下了3张标有分数的试卷。 <br />\n试卷一： <br />\n①    ②    ③    ④    ⑤    ⑥    ⑦    ⑧    ⑨    ⑩ <br />\n0     0     1     0     1     0     0     1     0     0       得分：70 <br />\n试卷二： <br />\n①    ②    ③    ④    ⑤    ⑥    ⑦    ⑧    ⑨    ⑩ <br />\n0     1     1     1     0     1     0     1     1     1       得分：50 <br />\n试卷三： <br />\n①    ②    ③    ④    ⑤    ⑥    ⑦    ⑧    ⑨    ⑩ <br />\n0     1     1     1     0     0     0     1     0     1       得分：30 <br />\n待批试卷： <br />\n①    ②    ③    ④    ⑤    ⑥    ⑦    ⑧    ⑨    ⑩ <br />\n0     0     1     1     1     0     0     1     1     1       得分：？ <br />\n【问题求解：】 请编一程序依据这三张试卷，算出漏批的那张试卷的分数。</span>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"60\", \"output\": \"60\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258883', '1229', '0', 'C语言程序设计教程（第三版）课后习题6.7', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>一个数如果恰好等于它的因子之和，这个数就称为&quot;完数&quot;。 例如，6的因子为1、2、3，而6=1+2+3，因此6是&quot;完数&quot;。 编程序找出N之内的所有完数，并按下面格式输出其因子：</p>\n\n## 输入描述\nN\n\n## 输出描述\n<p>? its factors are ? ? ?</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1000\", \"output\": \"6 its factors are 1 2 3 \\r\\n28 its factors are 1 2 4 7 14 \\r\\n496 its factors are 1 2 4 8 16 31 62 124 248\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258884', '1230', '0', '求指数方程的根(fxroot) [2*+] **', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span>求指数方程的根(fxroot) <br />\n求方程f(x)=2^x+3^x-4^x=0 在[1,2]内的根。提示a^x可表示成exp(x*ln(a))或用math库中的power（a,x）。 <br />\n输入：无输入 <br />\n输出：f(x)=0的根，x精确到小数点10位 <br />\n提示：记方程f(x)=0，若存在2个数x1和x2，且x1</span>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1.5071265916\", \"output\": \"1.5071265916\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258885', '1231', '0', '钓鱼', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\"><span style=\"font-size:14px;\">&nbsp;&nbsp;&nbsp; 约翰是个垂钓谜，星期天他决定外出钓鱼</span><span style=\"font-size:14px;\">h</span><span style=\"font-size:14px;\">小时（</span><span style=\"font-size:14px;\">1</span><span style=\"font-size:14px;\">≤</span><span style=\"font-size:14px;\">h</span><span style=\"font-size:14px;\">≤</span><span style=\"font-size:14px;\">16</span><span style=\"font-size:14px;\">），约翰家附近共有</span><span style=\"font-size:14px;\">n</span><span style=\"font-size:14px;\">个池塘（</span><span style=\"font-size:14px;\">2</span><span style=\"font-size:14px;\">≤</span><span style=\"font-size:14px;\">n</span><span style=\"font-size:14px;\">≤</span><span style=\"font-size:14px;\">25</span><span style=\"font-size:14px;\">），这些池塘分布在一条直线上，约翰将这些池塘按离家的距离编上号，依次为</span><span style=\"font-size:14px;\">L1,L2,</span><span style=\"font-size:14px;\">…</span><span style=\"font-size:14px;\">,Ln</span><span style=\"font-size:14px;\">，约翰家门外就是第一个池塘，所以他到第一个池塘是不用花时间的，约翰可以任选若干个池塘垂钓，并且在每个池塘他都可以呆上任意长的时间，但呆的时间必须为</span><span style=\"font-size:14px;\">5</span><span style=\"font-size:14px;\">分钟的倍数，（</span><span style=\"font-size:14px;\">5</span><span style=\"font-size:14px;\">分钟为一个单位时间），已知从池塘</span><span style=\"font-size:14px;\">Li</span><span style=\"font-size:14px;\">到池塘</span><span style=\"font-size:14px;\">Li+1</span><span style=\"font-size:14px;\">要化去约翰</span><span style=\"font-size:14px;\">ti</span><span style=\"font-size:14px;\">个单位时间，每个池塘的上鱼率预先也是已知的，池塘</span><span style=\"font-size:14px;\">Li</span><span style=\"font-size:14px;\">在第一个单位时间内能钓到的鱼为</span><span style=\"font-size:14px;\">Fi</span><span style=\"font-size:14px;\">（</span><span style=\"font-size:14px;\">0</span><span style=\"font-size:14px;\">≤</span><span style=\"font-size:14px;\">Fi</span><span style=\"font-size:14px;\">≤</span><span style=\"font-size:14px;\">100</span><span style=\"font-size:14px;\">），并且每过一个单位时间在单位时间内能钓到的鱼将减少一个常数</span><span style=\"font-size:14px;\">di</span><span style=\"font-size:14px;\">（</span><span style=\"font-size:14px;\">0</span><span style=\"font-size:14px;\">≤</span><span style=\"font-size:14px;\">di</span><span style=\"font-size:14px;\">≤</span><span style=\"font-size:14px;\">100</span><span style=\"font-size:14px;\">），现在请你编一个程序计算约翰最多能钓到多少鱼。</span><span></span></span> \n</p>\n\n## 输入描述\n<span style=\"font-size:10.5pt;font-family:宋体;\"><span style=\"font-size:14px;\">输入第一行为一个整数</span><span style=\"font-size:14px;\">n</span><span style=\"font-size:14px;\">，第二行为一个整数</span><span style=\"font-size:14px;\">h</span><span style=\"font-size:14px;\">，第三行为</span><span style=\"font-size:14px;\">n</span><span style=\"font-size:14px;\">个用空格隔开的整数，表示</span><span style=\"font-size:14px;\">Fi</span><span style=\"font-size:14px;\">（</span><span style=\"font-size:14px;\">i=1,2,</span><span style=\"font-size:14px;\">…</span><span style=\"font-size:14px;\">,n</span><span style=\"font-size:14px;\">），第四行为</span><span style=\"font-size:14px;\">n</span><span style=\"font-size:14px;\">个用空格隔开的整数，表示</span><span style=\"font-size:14px;\">di</span><span style=\"font-size:14px;\">（</span><span style=\"font-size:14px;\">i=1,2,</span><span style=\"font-size:14px;\">…</span><span style=\"font-size:14px;\">,n</span><span style=\"font-size:14px;\">），第五行为</span><span style=\"font-size:14px;\">n-1</span><span style=\"font-size:14px;\">个用空格隔开的整数，表示</span><span style=\"font-size:14px;\">ti</span><span style=\"font-size:14px;\">（</span><span style=\"font-size:14px;\">i=1,2,</span><span style=\"font-size:14px;\">…</span><span style=\"font-size:14px;\">,n-1</span><span style=\"font-size:14px;\">）</span></span>\n\n## 输出描述\n<span style=\"font-size:14px;font-family:宋体;\">输出一个整数，表示约翰最多能钓到的鱼的数量。</span>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2\\r\\n1\\r\\n10 1\\r\\n2 5 \\r\\n2\", \"output\": \"31\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258886', '1232', '0', '文字排版', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoBodyTextIndent\" style=\"text-indent:21.0pt;\">\n	写电子邮件是有趣的，但不幸的是经常写不好看，主要是因为所有的行不一样长，你的上司想要发排版精美的电子邮件，你的任务是为他编写一个电子邮件排版程序。\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">完成这个任务最简单的办法是在太短的行中的单词之间插入空格，但这并不是最好的方法，考虑如下例子：<span></span></span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">****************************</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">This is the example\nyou<span>&nbsp; </span>are</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">actually\nconsidering.</span> \n</p>\n<p class=\"MsoNormal\" style=\"text-indent:21.0pt;\">\n	<span style=\"font-family:宋体;\">假设我们想将第二行变得和第一行一样长，靠简单地插入空格则我们将得到如下结果：<span></span></span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">****************************</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">This is the example\nyou<span>&nbsp; </span>are</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">actually<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>considering.</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">&nbsp;</span> \n</p>\n<p class=\"MsoNormal\" style=\"text-indent:21.0pt;\">\n	<span style=\"font-family:宋体;\">但这太难看了，因为在第二行中有一个非常大的空白，如果将第一行的单词“<span>are</span>”移到下一行我们将得到较好的结果：<span></span></span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">****************************</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">This<span>&nbsp; </span>is<span>&nbsp; </span>the<span>&nbsp; </span>example<span>&nbsp;&nbsp; </span>you</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">are<span>&nbsp; </span>actually<span>&nbsp;&nbsp; </span>considering.</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">&nbsp;</span> \n</p>\n<p class=\"MsoNormal\" style=\"text-indent:21.0pt;\">\n	<span style=\"font-family:宋体;\">当然，这必须对难看程度进行量化。因此我们必须给出单词之间的空格的难看程度，一个包含<span>N</span>个空格符的空白段，其难看程度值为<span>(n-1)<sup>2</sup></span>，程序的目的是使难看程度的总和最小化。例如，第一个例子的难看程度是<span>1+7*7=50</span>，而第二个例子的难看程度仅为<span>1+1+1+4+1+4=12</span>。<span></span></span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输出时，每一行的开头和结尾处都必须是一个单词，即每行开头和结尾处不能有空白。唯一例外的是该行仅有一个单词组成的情况，对于这种情况你可将单词放在该行开头处输出，此时如果该单词比该行应有的长度短则我们指定它的最坏程度为<span>500</span>，当然在这种情况下，该行的实际长度即为该单词的长度。<span></span></span> \n</p>\n\n## 输入描述\n<span style=\"font-size:10.5pt;font-family:宋体;\">输入第一行是一个整数<span>N</span>，表示该段要求达到的宽度，<span>1&lt;=N&lt;=80</span>。该段文章由一个或多个单词组成，单词由<span>ASCII</span>码值为<span>33</span>到<span>126</span>（包含<span>33</span>和<span>126</span>）的字符组成，单词与单词之间用空格隔开（可能超过一个）。单词长度不会超过段落要求达到的宽度。一段文字所有单词的总长度不会超过<span>10000</span>个字符，任何一行都不会超过<span>100</span>个字符，任何一个单词都在同一行内。</span>\n\n## 输出描述\n<p class=\"MsoNormal\" style=\"text-indent:21.0pt;\">\n	<span style=\"font-family:宋体;\"><span style=\"font-size:14px;\">对于每个段落，找出使其难看程度最小的排版形式并输出句子：“</span><span style=\"font-size:14px;\">Minimal\nbadness is B.</span><span style=\"font-size:14px;\">”</span><span style=\"font-size:14px;\">,B</span><span style=\"font-size:14px;\">是指按可能的最好排版形式会发生的难看程度值。注意排版后文本行数任意，多余的空格也可删除。</span><span></span></span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"28\\r\\nThis is the example you  are\\r\\nactually considering.\", \"output\": \"Minimal badness is 12.\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258887', '1233', '0', '课后习题1.5', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	请参照本章例题，编写一个C程序，输出以下信息：\n</p>\n<p>\n	**************************<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!<br />\n**************************\n</p>\n<p>\n	数＊号可看出，Very前面9空格，Good前面……\n</p>\n<p>\n	*也是输出的一部分，别光打印Very Good!\n</p>\n<p>\n	另注意，星号的行和Very Good的行之间并没有额外的空行。\n</p>\n\n## 输入描述\n<p>\n	无需输入\n</p>\n\n## 输出描述\n<p>\n	**************************<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Very&nbsp;&nbsp;&nbsp; Good!<br />\n**************************\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"**************************\\r\\n         Very    Good!\\r\\n**************************\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258888', '1234', '0', '课后习题3.7', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	要将\"China\"译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母\"A\"后面第4个字母是\"E\"．\"E\"代替\"A\"。因此，\"China\"应译为\"Glmre\"。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，’C’、’h’、’i’、’n’、’a’，经过运算，使c1、c2、c3、c4、c5分别变为’G’、’l’、’m’、’r’、’e’，并输出。\n</p>\n\n## 输入描述\n<p>\n	China\n</p>\n\n## 输出描述\n<p>\n	加密后的China\n</p>\n\n## 提示\nso easy\n\n## 规则\nACM', '[{\"input\": \"China\", \"output\": \"Glmre\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258889', '1037', '0', 'C语言程序设计教程（第三版）课后习题6.8', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n有一分数序列： 2/1 3/2 5/3 8/5 13/8 21/13...... 求出这个数列的前N项之和，保留两位小数。\n\n## 输入描述\nN\n\n## 输出描述\n数列前N项和\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"10\", \"output\": \"16.48\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258890', '1055', '0', '[数值问题]高精度加法', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<div style=\"padding:0px;margin:0px;font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;text-align:center;\">\n	<span>高精度加法（highplus/c/cpp）&nbsp;</span> \n</div>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【问题描述】&nbsp;</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入两个高精度正整数a和b（a，b的位数&lt;=200），求这两个数的和</span> \n</p>\n<span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"><span>【输入格式】</span></span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"></span> \n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入共两行，分别为a和b</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出格式】</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输出共一行，表示两个数的和。</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输入样例1】&nbsp;</span><br />\n<span>1111111111111111111111111111111111<br />\n9999999999999999999999999999999999</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<br />\n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出样例1】</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	11111111111111111111111111111111110\n</p>\n<div>\n	<span style=\"line-height:1.5;\"></span> \n</div>\n<p>\n	<br />\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\nConst<br />\n&nbsp; &nbsp; SIZE = 200+1;<br />\n<br />\nType<br />\n&nbsp; &nbsp; hugeint = Record<br />\n&nbsp; &nbsp; &nbsp; &nbsp; len : Integer;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; num : Array[1..SIZE] Of Integer;<br />\n&nbsp; &nbsp; End;<br />\nvar a,b:hugeint;<br />\n&nbsp; &nbsp; s1,s2:string;<br />\n&nbsp; &nbsp; i:integer;<br />\nprocedure add(a, b : hugeint);<br />\n&nbsp; &nbsp; Var<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i : Integer;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; ans : hugeint;<br />\n&nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; FillChar(ans.num, SizeOf(ans.num), 0);<br />\n&nbsp; &nbsp; &nbsp; &nbsp; If a.len &gt; b.len<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Then ans.len := a.len<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Else ans.len := b.len;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; For i := 1 To ans.len Do<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ans.num[i] :=ans.num[i]+a.num[i]+b.num[i];<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ans.num[i + 1] := ans.num[i + 1] + ans.num[i] DIV 10;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ans.num[i] := ans.num[i] MOD 10;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; If ans.num[ans.len + 1] &gt; 0<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Then Inc(ans.len);<br />\n&nbsp; &nbsp; &nbsp; &nbsp; for i:=ans.len downto 1 do write(ans.num[i]);<br />\n&nbsp; &nbsp; &nbsp; &nbsp; writeln;<br />\n&nbsp; &nbsp; End;<br />\n<br />\n<br />\n&nbsp; &nbsp;procedure datain;<br />\n&nbsp; &nbsp;begin<br />\n&nbsp; &nbsp; assign(input,\'highplus.in\'); &nbsp;assign(output,\'highplus.out\');<br />\n&nbsp; &nbsp; reset(input); rewrite(output);<br />\n&nbsp; &nbsp; readln(s1);<br />\n&nbsp; &nbsp; readln(s2);<br />\n&nbsp; &nbsp; a.len:=length(s1);<br />\n&nbsp; &nbsp; b.len:=length(s2);<br />\n&nbsp; &nbsp; for i:=1 to a.len do &nbsp;a.num[i]:=ord(s1[a.len-i+1])-ord(\'0\');<br />\n&nbsp; &nbsp; for i:=1 to b.len do &nbsp;b.num[i]:=ord(s2[b.len-i+1])-ord(\'0\');<br />\n&nbsp; &nbsp;end;<br />\n&nbsp; &nbsp;begin<br />\n&nbsp; &nbsp; datain;<br />\n&nbsp; &nbsp; add(a,b);<br />\n&nbsp; &nbsp;close(input);close(output);<br />\n&nbsp; &nbsp;end.<br />\n<div>\n	<br />\n</div>\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258891', '1235', '0', '课后习题6.6', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n打印出所有\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该本身。\n例如：153是一个水仙花数，因为153=1^3+5^3+3^3。\nOutput:\n<pre>153\n???\n???\n??? </pre>\n\n## 输入描述\n无\n\n## 输出描述\n所有的水仙花数，从小的开始。\n每行一个\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1\", \"output\": \"153\\r\\n370\\r\\n371\\r\\n407\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258892', '1236', '0', '课后习题8.1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。\n\n## 输入描述\n两个数\n\n## 输出描述\n最大公约数 最小公倍数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"6 15\", \"output\": \"3 30\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258893', '1237', '0', 'C语言程序设计教程（第三版）课后习题3.7', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>要将&quot;China&quot;译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母&quot;A&quot;后面第4个字母是&quot;E&quot;．&quot;E&quot;代替&quot;A&quot;。因此，&quot;China&quot;应译为&quot;Glmre&quot;。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，&rsquo;C&rsquo;、&rsquo;h&rsquo;、&rsquo;i&rsquo;、&rsquo;n&rsquo;、&rsquo;a&rsquo;，经过运算，使c1、c2、c3、c4、c5分别变为&rsquo;G&rsquo;、&rsquo;l&rsquo;、&rsquo;m&rsquo;、&rsquo;r&rsquo;、&rsquo;e&rsquo;，并输出。</p>\n\n## 输入描述\n<p>China</p>\n\n## 输出描述\n<p>加密后的China</p>\n\n## 提示\nso easy\n\n## 规则\nACM', '[{\"input\": \"China\", \"output\": \"Glmre\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258894', '1238', '0', 'C语言程序设计教程（第三版）课后习题6.6', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n打印出所有\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该本身。\n例如：153是一个水仙花数，因为153=1^3+5^3+3^3。\nOutput:<pre>\n153\n???\n???\n??? </pre>\n\n## 输入描述\n无\n\n## 输出描述\n所有的水仙花数，从小的开始。\n每行一个\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1\", \"output\": \"153\\r\\n370\\r\\n371\\r\\n407\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258895', '1239', '0', 'C语言程序设计教程（第三版）课后习题8.1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。\n\n## 输入描述\n两个数\n\n## 输出描述\n最大公约数 最小公倍数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"6 15\", \"output\": \"3 30\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258896', '1056', '0', '[数值问题]高精度减法', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<div style=\"padding:0px;margin:0px;font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;text-align:center;\">\n	<span>高精度减法（highplus/c/cpp）&nbsp;</span> \n</div>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【问题描述】&nbsp;</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入两个高精度正整数a和b（a，b的位数&lt;=200），求a-b的差</span> \n</p>\n<span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"><span>【输入格式】</span></span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"></span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"></span> \n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入共两行，分别为a和b</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出格式】</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输出共一行，表示两个数的差,若a小于b，则先输出负号。</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输入样例1】&nbsp;</span><span><br />\n9999999999999999999999999999999999</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:21px;background-color:#F5F5F5;\">1111111111111111111111111111111111</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出样例1】</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	8888888888888888888888888888888888\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\nConst<br />\n&nbsp; &nbsp; SIZE = 200;<br />\n<br />\nType<br />\n&nbsp; &nbsp; hugeint = Record<br />\n&nbsp; &nbsp; &nbsp; &nbsp; len : Integer;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; num : Array[1..SIZE] Of Integer;<br />\n&nbsp; &nbsp; End;<br />\nvar a,b:hugeint;<br />\n&nbsp; &nbsp; s1,s2:string;<br />\n&nbsp; &nbsp; i:integer;<br />\nFunction over(a, b : hugeint) : integer;<br />\n&nbsp; &nbsp; Var<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i : Integer;<br />\n&nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; If (a.len&gt;b.len) Then<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; over :=1 ;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Exit;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; If a.len &lt; b.len Then<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; over := 2;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Exit;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; For i := a.len DownTo 1 Do<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; If a.num[i] &gt; b.num[i] Then<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; over := 1;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Exit;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; If a.num[i] &lt; b.num[i] Then<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; over := 2;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Exit;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; over := 3;<br />\n&nbsp; &nbsp; End;<br />\n<br />\nprocedure minus(a,b:hugeint);<br />\n&nbsp; var<br />\n&nbsp; &nbsp;i:longint;<br />\n&nbsp; &nbsp;t,ans:hugeint;<br />\n&nbsp; begin<br />\nfillchar(ans.num,sizeof(ans.num),0);<br />\n&nbsp;if over(a,b)=2 then<br />\n&nbsp; &nbsp;begin<br />\n&nbsp; &nbsp; write(\'-\');<br />\n&nbsp; &nbsp; t:=a;a:=b;b:=t;<br />\n&nbsp; &nbsp;end;<br />\n&nbsp;if over(a,b)=3 then begin writeln(0);exit;end;<br />\n&nbsp;ans.len:=a.len;<br />\n&nbsp;for i:=1 to ans.len do ans.num[i]:=a.num[i]-b.num[i];<br />\n&nbsp;for i:=1 to ans.len do<br />\n&nbsp; if ans.num[i]&lt;0 then<br />\n&nbsp; &nbsp;begin<br />\n&nbsp; &nbsp; &nbsp;dec(ans.num[i+1]);<br />\n&nbsp; &nbsp; &nbsp;inc(ans.num[i],10);<br />\n&nbsp; &nbsp;end;<br />\n&nbsp;while (ans.len&gt;1)and(ans.num<br />\n&nbsp;[ans.len]=0) do dec(ans.len);<br />\n&nbsp;for i:=ans.len downto 1 do write(ans.num[i]);<br />\n&nbsp;writeln;<br />\nend;<br />\n<br />\n&nbsp; &nbsp;procedure datain;<br />\n&nbsp; &nbsp;begin<br />\n&nbsp; &nbsp; assign(input,\'highminus.in\'); &nbsp;assign(output,\'highminus.out\');<br />\n&nbsp; &nbsp; reset(input); rewrite(output);<br />\n&nbsp; &nbsp; readln(s1);<br />\n&nbsp; &nbsp; readln(s2);<br />\n&nbsp; &nbsp; a.len:=length(s1);<br />\n&nbsp; &nbsp; b.len:=length(s2);<br />\n&nbsp; &nbsp; for i:=1 to a.len do &nbsp;a.num[i]:=ord(s1[a.len-i+1])-ord(\'0\');<br />\n&nbsp; &nbsp; for i:=1 to b.len do &nbsp;b.num[i]:=ord(s2[b.len-i+1])-ord(\'0\');<br />\n&nbsp; &nbsp;end;<br />\n&nbsp; &nbsp;begin<br />\n&nbsp; &nbsp; datain;<br />\n&nbsp; &nbsp; minus(a,b);<br />\n&nbsp; &nbsp;close(input);close(output);<br />\n&nbsp; &nbsp;end.<br />\n<div>\n	<br />\n</div>\n<div>\n	<br />\n</div>\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258897', '1057', '0', '[数值问题]高精度乘以低精度', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<div style=\"padding:0px;margin:0px;font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;text-align:center;\">\n	<span><strong><span style=\"font-size:16px;\">高精度乘以低精度</span></strong><strong><span style=\"font-size:16px;\">（lowmul/c/cpp）</span></strong>&nbsp;</span> \n</div>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【问题描述】&nbsp;</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入两个高精度正整数a和b（a位数&lt;=200，b的位数&lt;=9位），求两数的乘积。</span> \n</p>\n<span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"><span>【输入格式】lowmul.in</span></span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"></span> \n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入共两行，分别为a和b。</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出格式】lowmul.out</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输出共一行，表示两个数的积。</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输入样例1】&nbsp;</span><span><br />\n9999999999999999999999999999999999</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span style=\"line-height:21px;\">1111111</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出样例1】</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	99999999899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999000000001\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\nConst<br />\n&nbsp; &nbsp; SIZE = 200+10;<br />\nType<br />\n&nbsp; &nbsp; hugeint = Record<br />\n&nbsp; &nbsp; &nbsp; &nbsp; len : Integer;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; num : Array[1..SIZE] Of int64;<br />\n&nbsp; &nbsp; End;<br />\nvar a:hugeint;<br />\n&nbsp; &nbsp; s1:string;<br />\n&nbsp; &nbsp; i:integer;<br />\n&nbsp; &nbsp; x:longint;<br />\n&nbsp;procedure lowmul(a:hugeint;x:longint);<br />\n&nbsp; &nbsp;var<br />\n&nbsp; &nbsp; i:longint;<br />\n&nbsp; &nbsp; ans:hugeint;<br />\n&nbsp; begin<br />\n&nbsp; &nbsp;fillchar(ans.num,sizeof(ans.num),0);<br />\n&nbsp; &nbsp;ans.len:=a.len;<br />\n&nbsp; &nbsp;for i:=1 to ans.len do ans.num[i]:=a.num[i]*x;<br />\n&nbsp; &nbsp;for i:=1 to ans.len do<br />\n&nbsp; &nbsp; begin<br />\n&nbsp; &nbsp; &nbsp; inc(ans.num[i+1],ans.num[i] div 10);<br />\n&nbsp; &nbsp; &nbsp; ans.num[i]:=ans.num[i] mod 10;<br />\n&nbsp; &nbsp; end;<br />\n<br />\n&nbsp; &nbsp;while ans.num[ans.len+1]&gt;0 do<br />\n&nbsp; &nbsp; begin<br />\n&nbsp; &nbsp; &nbsp;inc(ans.len);<br />\n&nbsp; &nbsp; &nbsp;inc(ans.num[ans.len+1],ans.num[ans.len] div 10);<br />\n&nbsp; &nbsp; &nbsp;ans.num[ans.len]:=ans.num[ans.len] mod 10;<br />\n&nbsp; &nbsp; end;<br />\n&nbsp; &nbsp; for i:=ans.len downto 1 do write(ans.num[i]);<br />\n&nbsp; &nbsp; writeln;<br />\n&nbsp; end;<br />\n<br />\n<br />\n&nbsp;procedure datain;<br />\n&nbsp; &nbsp;begin<br />\n&nbsp; &nbsp; assign(input,\'lowmul.in\'); &nbsp;assign(output,\'lowmul.out\');<br />\n&nbsp; &nbsp; reset(input); rewrite(output);<br />\n&nbsp; &nbsp; readln(s1);<br />\n&nbsp; &nbsp; readln(x);<br />\n&nbsp; &nbsp; a.len:=length(s1);<br />\n&nbsp; &nbsp; for i:=1 to a.len do &nbsp;a.num[i]:=ord(s1[a.len-i+1])-ord(\'0\');<br />\n&nbsp;end;<br />\n&nbsp;begin<br />\n&nbsp; &nbsp;datain;<br />\n&nbsp; &nbsp;lowmul(a,x);<br />\n&nbsp; &nbsp;close(input);close(output);<br />\n&nbsp;end.<br />\n<div>\n	<br />\n</div>\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258898', '1058', '0', '[数值问题]高精度乘以高精度', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<div style=\"padding:0px;margin:0px;font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;text-align:center;\">\n	<span><strong><span style=\"font-size:16px;\">高精度乘以高精度</span></strong><strong><span style=\"font-size:16px;\">（highmul/c/cpp）</span></strong>&nbsp;</span> \n</div>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【问题描述】&nbsp;</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入两个高精度正整数a和b（a,b位数&lt;=200），求两数的乘积。</span> \n</p>\n<span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"><span>【输入格式】highmul.in</span></span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"></span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"></span> \n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入共两行，分别为a和b。</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出格式】highmul.out</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输出共一行，表示两个数的积。</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输入样例1】&nbsp;</span><span><br />\n1234567890<br />\n1234567890<br />\n</span> \n</p>\n<div>\n	<br />\n</div>\n<p>\n	<br />\n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span style=\"line-height:21px;\"></span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出样例1】</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	1524157875019052100\n</p>\n<div>\n	<br />\n</div>\n<p>\n	<br />\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\nConst<br />\n&nbsp; &nbsp; SIZE = 400;<br />\nType<br />\n&nbsp; &nbsp; hugeint = Record<br />\n&nbsp; &nbsp; &nbsp; &nbsp; len : Integer;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; num : Array[1..SIZE] Of integer;<br />\n&nbsp; &nbsp; End;<br />\nvar a,b:hugeint;<br />\n&nbsp; &nbsp; s1,s2:string;<br />\n&nbsp; &nbsp; i:integer;<br />\nprocedure times(a, b : hugeint);<br />\n&nbsp; &nbsp; Var<br />\n&nbsp; &nbsp; &nbsp; &nbsp; i, j : Integer;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; ans : hugeint;<br />\n&nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; FillChar(ans, SizeOf(ans), 0);<br />\n&nbsp; &nbsp; &nbsp; &nbsp; For i := 1 To a.len Do<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; For j := 1 To b.len Do<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ans.num[i + j - 1] := ans.num[i + j - 1] + a.num[i] * b.num[j];<br />\n&nbsp; &nbsp; &nbsp; &nbsp; For i := 1 To a.len + b.len Do<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ans.num[i + 1] := ans.num[i + 1] + ans.num[i] DIV 10;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ans.num[i] := ans.num[i] mod 10;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; If ans.num[a.len + b.len] &gt; 0<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Then ans.len := a.len + b.len<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Else ans.len := a.len + b.len - 1;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; End;<br />\n&nbsp; &nbsp; &nbsp; for i:=ans.len downto 1 do write(ans.num[i]);<br />\n&nbsp; &nbsp; &nbsp; writeln;<br />\n&nbsp; &nbsp; End;<br />\n&nbsp;procedure datain;<br />\n&nbsp; &nbsp;begin<br />\n&nbsp; &nbsp; assign(input,\'highmul.in\'); &nbsp;assign(output,\'highmul.out\');<br />\n&nbsp; &nbsp; reset(input); rewrite(output);<br />\n&nbsp; &nbsp; readln(s1);<br />\n&nbsp; &nbsp; readln(s2);<br />\n&nbsp; &nbsp; a.len:=length(s1);<br />\n&nbsp; &nbsp; b.len:=length(s2);<br />\n&nbsp; &nbsp; for i:=1 to a.len do &nbsp;a.num[i]:=ord(s1[a.len-i+1])-ord(\'0\');<br />\n&nbsp; &nbsp; for i:=1 to b.len do &nbsp;b.num[i]:=ord(s2[b.len-i+1])-ord(\'0\');<br />\n<br />\n&nbsp;end;<br />\n&nbsp;begin<br />\n&nbsp; &nbsp;datain;<br />\n&nbsp; &nbsp;times(a,b);<br />\n&nbsp; &nbsp;close(input);<br />\n&nbsp; &nbsp;close(output);<br />\n&nbsp;end.<br />\n<div>\n	<br />\n</div>\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258899', '1059', '0', 'C语言程序设计教程（第三版）课后习题6.10', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n猴子吃桃问题。猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个。第二天早上又将剩下的桃子吃掉一半，又多吃一个。以后每天早上都吃了前一天剩下的一半零一个。到第N天早上想再吃时，见只剩下一个桃子了。求第一天共摘多少桃子。\n\n## 输入描述\nN\n\n## 输出描述\n桃子总数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"10\", \"output\": \"1534\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258900', '1060', '0', '[数值问题]高精度除以低精度', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<div style=\"padding:0px;margin:0px;font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;text-align:center;\">\n	<span><strong><span style=\"font-size:16px;\">高精度除以低精度</span></strong><strong><span style=\"font-size:16px;\">（lowdiv/c/cpp）</span></strong>&nbsp;</span> \n</div>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【问题描述】&nbsp;</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入两个高精度正整数a和b（a位数&lt;=200，b的位数&lt;=9位），求a除以b的商的整数部分。</span> \n</p>\n<span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"><span>【输入格式】lowdiv.in</span></span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"></span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"></span> \n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入共两行，分别为a和b。（输入数据保证a大于b）</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出格式】lowdiv.out</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输出共一行，表示<span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:21px;background-color:#F5F5F5;\">a除以b的商的整数部分</span>。</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输入样例1】&nbsp;</span><span><br />\n9999999999999999999999999999999999123456789123456789<br />\n3333<br />\n</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span style=\"line-height:21px;\"></span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出样例1】</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	37040740811118\n</p>\n<div>\n	<br />\n</div>\n<p>\n	<br />\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\nConst<br />\n&nbsp; &nbsp; Size = 200;<br />\nType<br />\n&nbsp; &nbsp; hugeint = Record<br />\n&nbsp; &nbsp; &nbsp; &nbsp; len : Integer;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; num : Array[1..Size] Of longint;<br />\n&nbsp; &nbsp; End;<br />\nvar a:hugeint;<br />\n&nbsp; &nbsp; s1:string;<br />\n&nbsp; &nbsp; i:integer;<br />\n&nbsp; &nbsp; x:longint;<br />\n<br />\nprocedure lowdiv(a:hugeint;x:longint);<br />\n&nbsp; var<br />\n&nbsp; &nbsp; i:longint;<br />\n&nbsp; &nbsp; temp:int64;<br />\n&nbsp; &nbsp; ans:hugeint;<br />\n&nbsp; begin<br />\n&nbsp; &nbsp; fillchar(ans.num,sizeof(ans.num),0);<br />\n&nbsp; &nbsp; ans.len:=a.len;<br />\n&nbsp; &nbsp; temp:=0;<br />\n&nbsp; &nbsp; for i:=a.len downto 1 do<br />\n&nbsp; &nbsp; &nbsp; begin<br />\n&nbsp; &nbsp; &nbsp; &nbsp; temp:=temp*10+a.num[i];<br />\n&nbsp; &nbsp; &nbsp; &nbsp; ans.num[i]:=temp div x;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; temp:=temp mod x;<br />\n&nbsp; &nbsp; &nbsp; end;<br />\n&nbsp; &nbsp; while (ans.len&gt;1)and(ans.num[ans.len]=0) do dec(ans.len);<br />\n&nbsp; &nbsp; for i:=ans.len downto 1 do write(ans.num[i]);<br />\n&nbsp; &nbsp; writeln;<br />\n&nbsp; end;<br />\n<br />\n<br />\n&nbsp;procedure datain;<br />\n&nbsp; &nbsp;begin<br />\n&nbsp; &nbsp; assign(input,\'lowdiv.in\'); &nbsp;assign(output,\'lowdiv.out\');<br />\n&nbsp; &nbsp; reset(input); rewrite(output);<br />\n&nbsp; &nbsp; readln(s1);<br />\n&nbsp; &nbsp; readln(x);<br />\n&nbsp; &nbsp; a.len:=length(s1);<br />\n&nbsp; &nbsp; for i:=1 to a.len do &nbsp;a.num[i]:=ord(s1[a.len-i+1])-ord(\'0\');<br />\n&nbsp;end;<br />\n&nbsp;begin<br />\n&nbsp; &nbsp;datain;<br />\n&nbsp; &nbsp;lowdiv(a,x);<br />\n&nbsp; &nbsp;close(input);close(output);<br />\n&nbsp;end.<br />\n<div>\n	<br />\n</div>\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258901', '1061', '0', '[数值问题]高精度除以高精度', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<div style=\"padding:0px;margin:0px;font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;text-align:center;\">\n	<span><strong><span style=\"font-size:16px;\">高精度乘以高精度</span></strong><strong><span style=\"font-size:16px;\">（highdiv/c/cpp）</span></strong>&nbsp;</span> \n</div>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【问题描述】&nbsp;</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入两个高精度正整数a和b（a位数&lt;=200，b的位数&lt;=9位），求两数的乘积。</span> \n</p>\n<span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"><span>【输入格式】highdiv.in</span></span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"></span><span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\"></span> \n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输入共两行，分别为a和b。</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出格式】highdiv.out</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>输出共一行，表示两个数的积。</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输入样例1】&nbsp;</span><span><br />\n9999999999999999999999999999999999</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span style=\"line-height:21px;\">1111111</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span>【输出样例1】</span> \n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	9999999989999999999999999999999999999999999999999999999999999999999999999999\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n<p>\n	<br />\n</p>\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258902', '1062', '0', '[贪心算法]排队接水', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p style=\"text-align:center;\">\n	<span style=\"font-size:18px;\"><strong>排队接水 wate</strong></span><span style=\"font-size:18px;\"><strong>r.pas/c/cpp</strong></span> \n</p>\n<p>\n	<span style=\"font-size:18px;\">有n个人在一个水龙头前排队接水，假如每个人接水的时间为Ti，请编程找出这n个人排队的一种顺序，使得n个人的平均等待时间最小。</span><br />\n<span style=\"font-size:18px;\">[输入格式]</span> \n</p>\n<p>\n	<span style=\"font-size:18px;\">&nbsp;&nbsp;输入文件共两行，第一行为n；第二行分别表示第1个人到第n个人每人的接水时间T1，T2，…，Tn，每个数据之间有1个空格。</span><br />\n<span style=\"font-size:18px;\"><span style=\"font-size:18px;line-height:27px;\">[输入格式]</span></span> \n</p>\n<p>\n	<span style=\"font-size:18px;\">&nbsp; 输出文件有两行，第一行为一种排队顺序，即1到n的一种排列；第二行为这种排列方案下的平均等待时间(输出结果精确到小数点后两位)。&nbsp;</span><br />\n<span style=\"font-size:18px;\"><br />\n</span> \n</p>\n<p>\n	<span style=\"font-size:18px;\"><span style=\"font-size:18px;line-height:27px;\">[输入样例]</span>water.in </span><br />\n<span style=\"font-size:18px;\">&nbsp; 10</span><br />\n<span style=\"font-size:18px;\">&nbsp; 56 12 1 99 1000 234 33 55 99 812 </span><br />\n<span style=\"font-size:18px;\"><span style=\"font-size:18px;line-height:27px;\">[输出样例]</span><span style=\"font-size:18px;line-height:27px;\"></span><span style=\"font-size:18px;line-height:27px;\">w</span>ater.out</span><br />\n<span style=\"font-size:18px;\">&nbsp; 3 2 7 8 1 4 9 6 10 5</span><br />\n<span style=\"font-size:18px;\">&nbsp; 291.90&nbsp;</span>\n</p>\n<div>\n	<br />\n</div>\n<p>\n	<br />\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"10\\r\\n56 12 1 99 1000 234 33 55 99 812\", \"output\": \"3 2 7 8 1 4 9 6 10 5\\r\\n291.90\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258903', '1063', '0', '发工资咯', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p><font face=\"Times New Roman\">作为吉大的老师，最盼望的日子就是每月的9号了，因为这一天是发工资的日子，养家糊口就靠它了，呵呵 <br />\n但是对于学校财务处的工作人员来说，这一天则是很忙碌的一天，财务处的小胡老师最近就在考虑一个问题：如果每个老师的工资额都知道，最少需要准备多少张人民币，才能在给每位老师发工资的时候都不用老师找零呢？ <br />\n这里假设老师的工资都是正整数，单位元，人民币一共有100元、50元、10元、5元、2元和1元六种。</font></p>\n\n## 输入描述\n<p><font face=\"Times New Roman\">输入数据包含多个测试实例，每个测试实例的第一行是一个整数n（n&lt;100），表示老师的人数，然后是n个老师的工资。 <br />\nn=0表示输入的结束，不做处理。</font></p>\n\n## 输出描述\n<p><font face=\"Times New Roman\">对于每个测试实例输出一个整数x,表示至少需要准备的人民币张数。每个输出占一行。</font></p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"3 1 2 3\\r\\n0\", \"output\": \"4\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938587258904', '1064', '0', '成绩转换', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p><font face=\"Times New Roman\">输入一个百分制的成绩t，将其转换成对应的等级，具体转换规则如下： <br />\n90~100为A; <br />\n80~89为B; <br />\n70~79为C; <br />\n60~69为D; <br />\n0~59为E; </font><br />\n</p>\n\n## 输入描述\n<p><font size=\"3\" face=\"Times New Roman\">输入数据有多组，每组占一行，由一个整数组成。</font></p>\n\n## 输出描述\n<p><font size=\"3\" face=\"Times New Roman\">对于每组输入数据，输出一行。如果输入数据不在0~100范围内，请输出一行：&ldquo;Score is error!&rdquo;。</font></p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"56\\r\\n67\\r\\n100\\r\\n123\", \"output\": \"E\\r\\nD\\r\\nA\\r\\nScore is error!\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562050', '1038', '0', 'C语言程序设计教程（第三版）课后习题3.7', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>要将&quot;China&quot;译成密码，译码规律是：用原来字母后面的第4个字母代替原来的字母．例如，字母&quot;A&quot;后面第4个字母是&quot;E&quot;．&quot;E&quot;代替&quot;A&quot;。因此，&quot;China&quot;应译为&quot;Glmre&quot;。请编一程序，用赋初值的方法使cl、c2、c3、c4、c5五个变量的值分别为，&rsquo;C&rsquo;、&rsquo;h&rsquo;、&rsquo;i&rsquo;、&rsquo;n&rsquo;、&rsquo;a&rsquo;，经过运算，使c1、c2、c3、c4、c5分别变为&rsquo;G&rsquo;、&rsquo;l&rsquo;、&rsquo;m&rsquo;、&rsquo;r&rsquo;、&rsquo;e&rsquo;，并输出。</p>\n\n## 输入描述\n<p>China</p>\n\n## 输出描述\n<p>加密后的China</p>\n\n## 提示\nso easy\n\n## 规则\nACM', '[{\"input\": \"China\", \"output\": \"Glmre\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562051', '1065', '0', '换位置', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p><font size=\"3\" face=\"Times New Roman\">M个人围成一圈，每分钟相邻的两个人可以交换位置（只能有一对交换）。求使M个人的顺序颠倒（即每个人左边相邻的人换到右边，右边相邻的人换到左边）所需的最少时间（分钟数）。</font></p>\n\n## 输入描述\n<p><font size=\"3\" face=\"Times New Roman\">第一行为测试数据的组数n，以后n行中每行为一个小于32767的正整数，表示M</font></p>\n\n## 输出描述\n<p><font size=\"3\" face=\"Times New Roman\">对于每组测试数据，输出一个数，表示最少需要的分钟数。</font></p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"3\\r\\n4\\r\\n5\\r\\n6\", \"output\": \"2\\r\\n4\\r\\n6\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562052', '1066', '0', '方砖问题', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p><span style=\"color: rgb(0, 0, 0); font-family: \'Times New Roman\'; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; \" class=\"Apple-style-span\">用边长小于N的正方形方砖（注意，不要求所有的方砖大小相同，请看样例说明）不重叠地铺满N*N的正方形房间，最少要几块方砖。</span></p>\n\n## 输入描述\n<p><span style=\"color: rgb(0, 0, 0); font-family: \'Times New Roman\'; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; \" class=\"Apple-style-span\">第一行是一个整数T,表示测试数据的组数,接下来的T 行，每一行是一个N(2&lt;=N&lt;=100)</span></p>\n\n## 输出描述\n<p><span style=\"color: rgb(0, 0, 0); font-family: \'Times New Roman\'; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; \" class=\"Apple-style-span\">对于每一组测试数据输出一行，为最少需要的块数。</span></p>\n\n## 提示\n<p><span style=\"color: rgb(0, 0, 0); font-family: \'Times New Roman\'; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; \" class=\"Apple-style-span\">当N＝4时<span class=\"Apple-converted-space\">&nbsp;</span><br />\n最优的铺砖方法<span class=\"Apple-converted-space\">&nbsp;</span><br />\nAABB<span class=\"Apple-converted-space\">&nbsp;</span><br />\nAABB<span class=\"Apple-converted-space\">&nbsp;</span><br />\nCCDD<span class=\"Apple-converted-space\">&nbsp;</span><br />\nCCDD<span class=\"Apple-converted-space\">&nbsp;</span><br />\nA，B，C，D为四块方砖的代号。<span class=\"Apple-converted-space\">&nbsp;</span><br />\n其他的铺砖方法，例如：<span class=\"Apple-converted-space\">&nbsp;</span><br />\nAAAB<span class=\"Apple-converted-space\">&nbsp;</span><br />\nAAAC<span class=\"Apple-converted-space\">&nbsp;</span><br />\nAAAD<span class=\"Apple-converted-space\">&nbsp;</span><br />\nEFGH<span class=\"Apple-converted-space\">&nbsp;</span><br />\n需要的8块方砖，不是最少的。<span class=\"Apple-converted-space\"> </span><br />\n</span></p>\n\n## 规则\nACM', '[{\"input\": \"2 \\r\\n4 \\r\\n5\", \"output\": \"4 \\r\\n8\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562053', '1067', '0', '送分题素数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p><span style=\"color: rgb(0, 0, 0); font-family: \'Times New Roman\'; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; \" class=\"Apple-style-span\">输出100-&gt;200之间的素数的个数，以及所有的素数。</span></p>\n\n## 输入描述\n无\n\n## 输出描述\n<p><span style=\"color: rgb(0, 0, 0); font-family: \'Times New Roman\'; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; \" class=\"Apple-style-span\">100-&gt;200之间的素数的个数，以及所有的素数。</span></p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"21\\r\\n101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562054', '1068', '0', '比赛安排', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoNormalIndent\" style=\"text-indent:0cm;\">\n	设有2<sup>n</sup>（n&lt;=6）个球队进行单循环比赛，计划在2<sup>&nbsp;n</sup>&nbsp;– 1天内完成，每个队每天进行一场比赛。设计一个比赛的安排，使在2<sup>n</sup>&nbsp;– 1天内每个队都与不同的对手比赛。\n</p>\n<p class=\"MsoNormal\" style=\"text-indent:21pt;\">\n	例如n=2时的比赛安排：\n</p>\n<p class=\"MsoNormal\" style=\"text-indent:21pt;\">\n	&nbsp;&nbsp;&nbsp;&nbsp;队&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; 2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3&nbsp; 4\n</p>\n<p class=\"MsoNormal\" style=\"text-indent:21pt;\">\n	&nbsp;&nbsp;&nbsp;&nbsp;比赛&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1==2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;3==4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;一天\n</p>\n<p class=\"MsoNormal\" style=\"text-indent:21pt;\">\n	&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1==3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2==4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;二天\n</p>\n<p>\n	&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1==4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2==3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;三天\n</p>\n<p>\n	<br />\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	每个测试文件只包含一组测试数据，每组输入数据为一个正整数n（n&lt;=6）。\n</p>\n<p>\n	<br />\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	对于每组输入数据，输出比赛安排，从第一天的安排开始，每天占一行，每行开头先输出天号，再输出当天的安排，优先给队伍编号小的队伍安排比赛，具体格式见样例输出。\n</p>\n<p>\n	<br />\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"3\", \"output\": \"<1>1-2,3-4,5-6,7-8\\r\\n<2>1-3,2-4,5-7,6-8\\r\\n<3>1-4,2-3,5-8,6-7\\r\\n<4>1-5,2-6,3-7,4-8\\r\\n<5>1-6,2-5,3-8,4-7\\r\\n<6>1-7,2-8,3-5,4-6\\r\\n<7>1-8,2-7,3-6,4-5\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562055', '1069', '0', '数制转换', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoNormal\">\n	设有一个字符串<span>A$</span>的结构为：<span>A$=\'m&lt;n&gt;p\'</span> \n</p>\n<p class=\"MsoNormal\">\n	其中<span>m</span>为数字串（长度<span>&lt;=20</span>），而<span>n,p</span>均为<span>1</span>或<span>2</span>位的数字串（其中所表达的内容在<span>2-10</span>之间）。<span></span> \n</p>\n<p class=\"MsoNormal\" style=\"margin-left:72.0pt;text-indent:-72.0pt;\">\n	程序要求：\n</p>\n<p class=\"MsoNormal\" style=\"margin-left:72.0pt;text-indent:-72.0pt;\">\n	从键盘上读入<span>A$</span>后（不用正确性检查），将<span>A$</span>中的数字串<span>m（n</span>进制），以<span>p</span>进制的形式输出。<span></span> \n</p>\n<p class=\"MsoNormal\">\n	例如：<span>A$=\'48&lt;10&gt;8\'</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;其意义为：将</span><span style=\"line-height:1.5;\">10</span><span style=\"line-height:1.5;\">进制数</span><span style=\"line-height:1.5;\">48</span><span style=\"line-height:1.5;\">，转换成</span><span style=\"line-height:1.5;\">8</span><span style=\"line-height:1.5;\">进制数输出。</span> \n</p>\n<p class=\"MsoNormal\">\n	<span></span> \n</p>\n<p>\n	&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;输出结果为：48&lt;10&gt;=60&lt;8&gt;\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	每个测试文件只包含一组测试数据，每组输入一个字符串，形式如m&lt;n&gt;p。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	对于每组输入数据，输出数制转换后的结果，具体格式见样例输出。\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1101<10>2\", \"output\": \"1101<10>=10001001101<2>\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562056', '1070', '0', 'C语言程序设计教程（第三版）课后习题6.11', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n用迭代法求X的平方根。求平方根的迭代公式为： X[n+1]=1/2(X[n]+a/X[n]) 要求前后两次求出的差的绝对值少于0.00001。输出保留3位小数\n\n## 输入描述\nX\n\n## 输出描述\nX的平方根\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"16\", \"output\": \"4.000\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562057', '1071', '0', '砝码称重', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoNormalIndent\">\n	设有<span>1g</span>、<span>2g</span>、<span>3g</span>、<span>5g</span>、<span>10g</span>、<span>20g</span>的砝码各若干枚（其总重<span>&lt;=1000</span>）。<span></span>\n</p>\n<p class=\"MsoNormalIndent\">\n	现在给你这六种砝码的数量，请你计算<span>用这些砝码能称出的不同重量的个数，但不包括一个砝码也不用的情况。</span>\n</p>\n<p class=\"MsoNormalIndent\">\n	<br />\n</p>\n<p class=\"MsoNormalIndent\">\n	如输入：<span>1 1 0 0 0 0</span><span></span>\n</p>\n<p>\n	输出：<span>Total</span>=3 &nbsp;表示可以称出1g，2g，3g三种不同的重量。\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	每个测试文件只包含一组测试数据，每组输入六个整数，例如：\n</p>\n<p>\n	输入&nbsp;<span>a1&nbsp; a2&nbsp; a3&nbsp; a4&nbsp; a5&nbsp; a6</span>\n</p>\n<p>\n	<span><span>&nbsp; &nbsp; &nbsp; （表示</span><span>1g</span><span>砝码有</span><span>a1</span><span>个，</span><span>2g</span><span>砝码有</span><span>a2</span><span>个，…，</span><span>20g</span><span>砝码有</span><span>a6</span><span>个）</span></span>\n</p>\n<p>\n	<span><br />\n</span>\n</p>\n\n## 输出描述\n<p>\n	对于每组输入数据，输出&nbsp;<span style=\"line-height:1.5;\">Total=N。</span><span style=\"line-height:1.5;\">（N表示用这些砝码能称出的不同重量的个数，但不包括一个砝码也不用的情况）</span>\n</p>\n<p>\n	<span style=\"line-height:1.5;\"><br />\n</span>\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2 2 0 0 0 0\", \"output\": \"Total=6\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562058', '1072', '0', '棋盘方格', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoBodyTextFirstIndent\" style=\"margin-left:15.75pt;text-indent:-15.75pt;\">\n	设有一个<span>n*m</span>方格的棋盘（<span>1</span>≤<span>m,n</span>≤<span>100</span>）。<span></span> \n</p>\n<p>\n	求出该棋盘中包含多少个正方形、多少个长方形（不包括正方形）。\n</p>\n<p>\n	例如：\n</p>\n<p>\n	&nbsp; &nbsp; &nbsp; &nbsp;当n=2，m=3时\n</p>\n<p style=\"text-align:center;\">\n	<img src=\"http://tk.hustoj.com:80/attached/image/20140109/20140109155617_80195.jpg\" alt=\"\" /> \n</p>\n<p style=\"text-align:left;\">\n	<br />\n</p>\n<p class=\"MsoBodyText\" style=\"text-indent:21.0pt;\">\n	正方形的个数有<span>8</span>个，即边长为<span>1</span>的正方形有<span>6</span>个，边长为2的正方形有2个。\n</p>\n<p class=\"MsoBodyText\" style=\"text-indent:21.0pt;\">\n	长方形的个数有10个：\n</p>\n<p class=\"MsoBodyText\" style=\"text-indent:21.0pt;\">\n	2*1的长方形有4个；<img src=\"http://noi.acmclub.com/attached/image/20140109/20140109160025_60435.jpg\" alt=\"\" /> \n</p>\n<p class=\"MsoBodyText\" style=\"text-indent:21.0pt;\">\n	1*2的长方形有3个；<img src=\"http://tk.hustoj.com:80/attached/image/20140109/20140109160119_48455.jpg\" alt=\"\" /> \n</p>\n<p class=\"MsoBodyText\" style=\"text-indent:21.0pt;\">\n	3*1的长方形有2个；<img src=\"http://tk.hustoj.com:80/attached/image/20140109/20140109160140_93063.jpg\" alt=\"\" /> \n</p>\n<p class=\"MsoBodyText\" style=\"text-indent:21.0pt;\">\n	3*2的长方形有1个。<img src=\"http://tk.hustoj.com:80/attached/image/20140109/20140109160158_92741.jpg\" alt=\"\" /> \n</p>\n<p class=\"MsoBodyText\" style=\"text-indent:21.0pt;\">\n	<br />\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	每个测试文件只包含一组测试数据，每组输入两个正整数n和m。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	对于每组输入数据，<span>出该棋盘中包含的正方形个数和长方形个数。</span> \n</p>\n<p>\n	<span><br />\n</span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2 2\", \"output\": \"5 4\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562059', '1073', '0', '排三角形', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoBodyTextIndent\">\n	将<span>1</span>，<span>2</span>，······<span>,9</span>共<span>9</span>个数排成下列形态的三角形。\n</p>\n<p class=\"MsoBodyTextIndent\">\n	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\na</span> \n</p>\n<p class=\"MsoBodyTextIndent\">\n	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c</span> \n</p>\n<p class=\"MsoBodyTextIndent\">\n	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e</span> \n</p>\n<p class=\"MsoBodyTextIndent\">\n	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nf&nbsp;&nbsp;&nbsp;&nbsp; g&nbsp;&nbsp;&nbsp;&nbsp; h&nbsp;&nbsp;&nbsp;&nbsp;\ni</span> \n</p>\n<p class=\"MsoBodyTextIndent\">\n	<span>&nbsp;&nbsp;&nbsp; </span> \n</p>\n<p class=\"MsoBodyTextIndent\">\n	<span>&nbsp;&nbsp;&nbsp; </span>其中：<span>a</span>～<span>i</span>分别表示<span>1</span>，<span>2</span>，······<span>,9</span>中的一个数字，并要求同时满足下列条件：<span></span> \n</p>\n<p class=\"MsoList2\" style=\"margin-left:0cm;text-indent:0cm;\">\n	<span>&nbsp;&nbsp;&nbsp; </span>（<span>1</span>）<span>a&lt;f&lt;i;</span> \n</p>\n<p class=\"MsoList2\" style=\"margin-left:0cm;text-indent:0cm;\">\n	<span>&nbsp;&nbsp;&nbsp; </span>（<span>2</span>）<span>b&lt;d, g&lt;h, c&lt;e</span> \n</p>\n<p>\n	&nbsp;&nbsp;&nbsp; （3）a+b+d+f=f+g+h+i=i+e+c+a=P\n</p>\n<p>\n	<br />\n</p>\n<p class=\"MsoBodyTextFirstIndent2\" style=\"margin-left:81.0pt;text-indent:-81.0pt;\">\n	程序要求：<span></span> \n</p>\n<p class=\"MsoBodyTextFirstIndent2\" style=\"margin-left:81.0pt;text-indent:-81.0pt;\">\n	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>根据输入的边长之和<span>P，</span><span style=\"line-height:1.5;\">输出所有满足上述条件的三角形的个数。</span> \n</p>\n<p class=\"MsoBodyTextFirstIndent2\" style=\"margin-left:81.0pt;text-indent:-81.0pt;\">\n	<span style=\"line-height:1.5;\"><br />\n</span> \n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	每个测试文件只包含一组测试数据，每组输入一个整数P，表示边长之和。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	对于每组输入数据，<span>输出所有满足上述条件的三角形的个数。</span> \n</p>\n<p>\n	<span>如果无解，则输出\"Not exist\"（引号不输出）。</span> \n</p>\n<p>\n	<span><br />\n</span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"18\", \"output\": \"Not exist\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562060', '1074', '0', '组成三位数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoNormal\">\n	将<span>1</span>，<span>2</span>，…，<span>9</span>共<span>9</span>个数分成三组，分别组成三个三位数，且使这三个三位数构成<span style=\"line-height:1.5;\">1</span><span style=\"line-height:1.5;\">：</span><span style=\"line-height:1.5;\">2</span><span style=\"line-height:1.5;\">：</span><span style=\"line-height:1.5;\">3</span><span style=\"line-height:1.5;\">的比例，试求出所有满足条件的三个三位数。</span> \n</p>\n<p class=\"MsoNormal\">\n	<span></span> \n</p>\n<p>\n	例如：三个三位数192，384，576满足以上条件。\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	本题无输入。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	输出所有符合要求的三个三位数，每一组占一行，数字之间由一个空格分隔。\n</p>\n<p>\n	每组中的三个数字按照从小到大输出，各组之间按照每组的第一个数从小到大输出。\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n本题无输入。<br />\n本题结果是唯一的，所以不提供输出样例。<br />\n\n## 规则\nACM', '[{\"input\": \"no input\", \"output\": \"192 384 576\\r\\n219 438 657\\r\\n273 546 819\\r\\n327 654 981\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562061', '1039', '0', 'C语言程序设计教程（第三版）课后习题6.6', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n打印出所有\"水仙花数\"，所谓\"水仙花数\"是指一个三位数，其各位数字立方和等于该本身。\n例如：153是一个水仙花数，因为153=1^3+5^3+3^3。\nOutput:<pre>\n153\n???\n???\n??? </pre>\n\n## 输入描述\n无\n\n## 输出描述\n所有的水仙花数，从小的开始。\n每行一个\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1\", \"output\": \"153\\r\\n370\\r\\n371\\r\\n407\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562062', '1075', '0', '高精度阶乘的和', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoList\" style=\"margin-left:15.75pt;text-indent:-15.75pt;\">\n	用高精度计算出<span>S=1!</span><span>+2!</span><span>+3!</span><span>+</span>…<span>+N!</span>（<span>N</span>≤<span>50</span>），<span style=\"line-height:1.5;\">其中\"!\"表示阶乘，例如：</span><span style=\"line-height:1.5;\">5!</span><span style=\"line-height:1.5;\">=5*4*3*2*1</span><span style=\"line-height:1.5;\">。</span> \n</p>\n<p class=\"MsoList\" style=\"margin-left:15.75pt;text-indent:-15.75pt;\">\n	<span></span> \n</p>\n<p>\n	输入正整数N，输出计算结果S。\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	每个测试文件只包含一组测试数据，每组输入一个正整数N。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	对于每组输入数据，输出阶乘和的计算结果。\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"48\", \"output\": \"12678163798554051767172643373255731925167694226950680420940313\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562063', '1076', '0', '二的幂次方', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoNormal\">\n	任何一个正整数都可以用<span>2</span>的幂次方表示。\n</p>\n<p class=\"MsoNormal\">\n	例如：\n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 137=2<sup>7</sup>+2<sup>3</sup>+2<sup>0</sup></span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"line-height:1.5;\">同时约定次方用括号来表示，即</span><span style=\"line-height:1.5;\">a<sup>b</sup> </span><span style=\"line-height:1.5;\">可表示为</span><span style=\"line-height:1.5;\">a</span><span style=\"line-height:1.5;\">（</span><span style=\"line-height:1.5;\">b</span><span style=\"line-height:1.5;\">）。</span> \n</p>\n<p class=\"MsoNormal\">\n	<span></span> \n</p>\n<p class=\"MsoNormal\">\n	由此可知，<span>137</span>可表示为：<span></span> \n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2</span>（<span>7</span>）<span>+2</span>（<span>3</span>）<span>+2</span>（<span>0</span>）<span></span> \n</p>\n<p class=\"MsoNormal\">\n	进一步：<span>7= 2<sup>2</sup>+2+2<sup>0</sup></span>（<span>2<sup>1</sup></span>用<span>2</span>表示）<span></span> \n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3=2+2<sup>0&nbsp;&nbsp; </sup></span> \n</p>\n<p class=\"MsoNormal\">\n	所以最后<span>137</span>可表示为：<span></span> \n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2</span>（<span>2</span>（<span>2</span>）<span>+2+2</span>（<span>0</span>））<span>+2</span>（<span>2+2</span>（<span>0</span>））<span>+2</span>（<span>0</span>）<span></span> \n</p>\n<p class=\"MsoNormal\">\n	又如：<span></span> \n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1315=2<sup>10</sup> +2<sup>8</sup> +2<sup>5</sup> +2+1</span> \n</p>\n<p class=\"MsoNormal\">\n	所以<span>1315</span>最后可表示为：<span></span> \n</p>\n<p class=\"MsoNormal\">\n	<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;2</span>（<span>2</span>（<span>2+2</span>（<span>0</span>））<span>+2</span>）<span>+2</span>（<span>2</span>（<span>2+2</span>（<span>0</span>）））<span>+2</span>（<span>2</span>（<span>2</span>）<span>+2</span>（<span>0</span>））<span>+2+2</span>（<span>0</span>）<span></span> \n</p>\n<p class=\"MsoNormal\">\n	<br />\n</p>\n\n## 输入描述\n<p>\n	每个测试文件只包含一组测试数据，每组输入一个正整数n（n&lt;=20000）。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	对于每组输入数据，输出<span>符合约定的n的0，2表示。（在表示中不能有空格）</span> \n</p>\n<p>\n	<span><br />\n</span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1384\", \"output\": \"2(2(2+2(0))+2)+2(2(2+2(0)))+2(2(2)+2)+2(2(2)+2(0))+2(2+2(0))\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562064', '1077', '0', '上下火车', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n火车从始发站（称为第1站）开出，在始发站上车的人数为a，然后到达第2站，在第2站有人上、下车，但上、下车的人数相同，因此在第2站开出时（即在到达第3站之前）车上的人数保持为a人。从第3站起（包括第3站）上、下车的人数有一定规律：上车的人数都是前两站上车人数之和，而下车人数等于上一站上车人数，一直到终点站的前一站（第n-1站），都满足此规律。现给出的条件是：共有N个车站，始发站上车的人数为a，最后一站下车的人数是m（全部下车）。试问x站开出时车上的人数是多少？<br />\n<div>\n	<br />\n</div>\n\n## 输入描述\n<p>\n	每个测试文件只包含一组测试数据，每组输入四个整数a、n、m和x。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	对于每组输入数据，输出<span>从x站开出时车上的人数。</span> \n</p>\n<p>\n	<span><br />\n</span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"5 7 32 4\", \"output\": \"13\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562065', '1078', '0', '联接最大数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n设有n个正整数（n≤20），将它们联接成一排，组成一个最大的多位整数。<br />\n例如：n=3时，3个整数13，312，343联接成的最大整数为：34331213<br />\n又如：n=4时，4个整数7，13，4，246联接成的最大整数为：7424613<br />\n<br />\n\n## 输入描述\n<p>\n	每个测试文件只包含一组测试数据，每组输入数据的第一行输入一个正整数n（<span>n≤20</span>）。\n</p>\n<p>\n	接下来一行输入n个正整数。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	对于每组输入数据，输出n个正整数联接成的最大的<span>多位整数。</span> \n</p>\n<p>\n	<span><br />\n</span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"4\\r\\n1341 133 1321 37\", \"output\": \"3713411331321\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562066', '1079', '0', '数字游戏', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	丁丁最近沉迷于一个数字游戏之中。这个游戏看似简单，但丁丁在研究了许多天之后却发觉原来在简单的规则下想要赢得这个游戏并不那么容易。游戏是这样的，在你面前有一圈整数（一共n个），你要按顺序将其分为m个部分，各部分内的数字相加，相加所得的m个结果对10取模后再相乘，最终得到一个数k。游戏的要求是使你所得的k最大或者最小。\n</p>\n<p>\n	例如，对于下面这圈数字（n=4，m=2）：\n</p>\n<p style=\"text-align:center;\">\n	<img src=\"http://tk.hustoj.com:80/attached/image/20140113/20140113154549_88295.jpg\" alt=\"\" /> \n</p>\n<p style=\"text-align:left;\">\n	当要求最小值时，((2-1) mod 10)×((4+3) mod 10)=1×7=7，要求最大值时，为((2+4+3) mod 10)×(-1 mod 10)=9×9=81。特别值得注意的是，无论是负数还是正数，对10取模的结果均为非负值。\n</p>\n<p style=\"text-align:left;\">\n	丁丁请你编写程序帮他赢得这个游戏。\n</p>\n<p style=\"text-align:left;\">\n	<br />\n</p>\n\n## 输入描述\n<p>\n	输入文件第一行有两个整数，n（1≤n≤50）和m（1≤m≤9）。以下n行每行有个整数，其绝对值不大于104，按顺序给出圈中的数字，首尾相接。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	输出文件有两行，各包含一个非负整数。第一行是你程序得到的最小值，第二行是最大值。\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"50 1\\r\\n208 \\r\\n1910 \\r\\n7959 \\r\\n32 \\r\\n5069 \\r\\n-3749 \\r\\n472 \\r\\n-338 \\r\\n-6341 \\r\\n-2895 \\r\\n2659 \\r\\n2260 \\r\\n-4570 \\r\\n2102 \\r\\n9595 \\r\\n-7146 \\r\\n-1267 \\r\\n4096 \\r\\n-4000 \\r\\n-7733 \\r\\n-1205 \\r\\n9757 \\r\\n2928 \\r\\n-690 \\r\\n-7583 \\r\\n-8157 \\r\\n-7093 \\r\\n-4743 \\r\\n4114 \\r\\n-1381 \\r\\n-9267 \\r\\n-3454 \\r\\n-6650 \\r\\n8818 \\r\\n-7907 \\r\\n6637 \\r\\n-2406 \\r\\n5629 \\r\\n7200 \\r\\n2965 \\r\\n-9154 \\r\\n8113 \\r\\n-8352 \\r\\n-59 \\r\\n2352 \\r\\n3502 \\r\\n1653 \\r\\n-6092 \\r\\n5170 \\r\\n8815\", \"output\": \"3\\r\\n3\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562067', '1080', '0', '栈', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	栈是计算机中经典的数据结构，简单的说，栈就是限制在一端进行插入删除操作的线性表。\n</p>\n<p>\n	栈有两种最重要的操作，即pop（从栈顶弹出一个元素）和push（将一个元素进栈）。\n</p>\n<p>\n	栈的重要性不言自明，任何一门数据结构的课程都会介绍栈。宁宁同学在复习栈的基本概念时，想到了一个书上没有讲过的问题，而他自己无法给出答案，所以需要你的帮忙。\n</p>\n<p style=\"text-align:center;\">\n	<img src=\"http://tk.hustoj.com:80/attached/image/20140113/20140113155626_14187.jpg\" alt=\"\" /> \n</p>\n<p style=\"text-align:left;\">\n	宁宁考虑的是这样一个问题：一个操作数序列，从1，2，一直到n（图示为1到3的情况），栈A的深度大于n。\n</p>\n<p style=\"text-align:left;\">\n	现在可以进行两种操作：\n</p>\n<p style=\"text-align:left;\">\n	1. 将一个数，从操作数序列的头端移到栈的头端（对应数据结构栈的push操作）<br />\n2. 将一个数，从栈的头端移到输出序列的尾端（对应数据结构栈的pop操作）\n</p>\n<p style=\"text-align:left;\">\n	使用这两种操作，由一个操作数序列就可以得到一系列的输出序列，下图所示为由1 2 3生成序列2 3 1的过程。（原始状态如上图所示）\n</p>\n<p style=\"text-align:center;\">\n	<img src=\"http://tk.hustoj.com:80/attached/image/20140113/20140113155755_78240.jpg\" alt=\"\" /> \n</p>\n<p style=\"text-align:left;\">\n	你的程序将对给定的n，计算并输出由操作数序列1，2，...，n经过操作可能得到的输出序列的总数。\n</p>\n<p style=\"text-align:left;\">\n	<br />\n</p>\n\n## 输入描述\n<p>\n	输入只含一个整数n（1≤n≤18）。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	输出只有一行，即可能输出序列的总数目。\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"3\", \"output\": \"5\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562068', '1081', '0', 'C语言程序设计教程（第三版）课后习题7.1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n用筛法求N之内的素数。\n\n## 输入描述\nN\n\n## 输出描述\n0～N的素数\n\n## 提示\n数组大小动态定义？函数？\n\n## 规则\nACM', '[{\"input\": \"100\", \"output\": \"2\\r\\n3\\r\\n5\\r\\n7\\r\\n11\\r\\n13\\r\\n17\\r\\n19\\r\\n23\\r\\n29\\r\\n31\\r\\n37\\r\\n41\\r\\n43\\r\\n47\\r\\n53\\r\\n59\\r\\n61\\r\\n67\\r\\n71\\r\\n73\\r\\n79\\r\\n83\\r\\n89\\r\\n97\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562069', '1082', '0', '麦森数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"a\">\n	形如<span>2<i><sup>P</sup></i>-1</span>的素数称为麦森数，这时<span>P</span>一定也是个素数。但反过来不一定，即如果<span>P</span>是个素数，<span>2<i><sup>P</sup></i>-1</span>不一定也是素数。到<span>1998</span>年底，人们已找到了<span>37</span>个麦森数。最大的一个是<span>P=3021377</span>，它有<span>909526</span>位。麦森数有许多重要应用，它与完全数密切相关。\n</p>\n<p class=\"a\">\n	<span style=\"line-height:1.5;\">任务：从文件中输入</span><span style=\"line-height:1.5;\">P</span><span style=\"line-height:1.5;\">（</span><span style=\"line-height:1.5;\">1000&lt;P&lt;3100000</span><span style=\"line-height:1.5;\">），计算</span><span style=\"line-height:1.5;\">2<i><sup>P</sup></i>-1</span><span style=\"line-height:1.5;\">的位数和最后</span><span style=\"line-height:1.5;\">500</span><span style=\"line-height:1.5;\">位数字（用十进制高精度数表示）。</span>\n</p>\n<p class=\"a\">\n	<span style=\"line-height:1.5;\"><br />\n</span>\n</p>\n\n## 输入描述\n<p>\n	每组输入只包含一个整数<span>P</span>（<span>1000&lt;P&lt;3100000</span>）。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p class=\"a\">\n	第一行：十进制高精度数<span>2<i><sup>P</sup></i>-1</span>的位数。\n</p>\n<p class=\"a\">\n	<span style=\"line-height:1.5;\">第</span><span style=\"line-height:1.5;\">2-11</span><span style=\"line-height:1.5;\">行：十进制高精度数</span><span style=\"line-height:1.5;\">2<i><sup>P</sup></i>-1</span><span style=\"line-height:1.5;\">的最后</span><span style=\"line-height:1.5;\">500</span><span style=\"line-height:1.5;\">位数字。（每行输出</span><span style=\"line-height:1.5;\">50</span><span style=\"line-height:1.5;\">位，共输出</span><span style=\"line-height:1.5;\">10</span><span style=\"line-height:1.5;\">行，不足</span><span style=\"line-height:1.5;\">500</span><span style=\"line-height:1.5;\">位时高位补</span><span style=\"line-height:1.5;\">0</span><span style=\"line-height:1.5;\">）</span>\n</p>\n<p class=\"a\">\n	<span style=\"line-height:1.5;\">不必验证</span><span style=\"line-height:1.5;\">2<i><sup>P</sup></i>-1</span><span style=\"line-height:1.5;\">与</span><span style=\"line-height:1.5;\">P</span><span style=\"line-height:1.5;\">是否为素数。</span>\n</p>\n<p class=\"a\">\n	<span style=\"line-height:1.5;\"><br />\n</span>\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"86243\", \"output\": \"25962\\r\\n79703690602567473816512335624372076379566082030679\\r\\n12439206620235758650147895166177535866385795630368\\r\\n34055378477781370640297039260367479584587420897320\\r\\n52549318161396475554914563870886654597859221632902\\r\\n34690334971548318468117832228572631424866778315564\\r\\n60602846450000517145589171992401648810902661369025\\r\\n73707212409831769690354034882497230519475241696380\\r\\n43767876677292778517229159025657351862519228939958\\r\\n84693761059056977054150896001780329459143532013769\\r\\n15456322320250960867906195719699857021709433438207\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562070', '1083', '0', '神经网络', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	人工神经网络（Artificial Neural Network）是一种新兴的具有自我学习能力的计算系统，在模式识别、函数逼近及贷款风险评估等诸多领域有广泛的应用。对神经网络的研究一直是当今的热门方向，兰兰同学在自学了一本神经网络的入门书籍后，提出了一个简化模型，他希望你能帮助他用程序检验这个神经网络模型的实用性。\n</p>\n<p>\n	在兰兰的模型中，神经网络就是一张有向图，图中的节点称为神经元，而且两个神经<br />\n元之间至多有一条边相连，下图是一个神经元的例子：\n</p>\n<p style=\"text-align:center;\">\n	<span style=\"line-height:1.5;\"><img src=\"http://tk.hustoj.com:80/attached/image/20140113/20140113165437_34413.jpg\" alt=\"\" /></span> \n</p>\n<p style=\"text-align:left;\">\n	<span style=\"line-height:1.5;\">图中，X1—X3是信息输入渠道，Y1—Y2是信息输出渠道，C1表示神经元目前的状态，Ui是阈值，可视为神经元的一个内在参数。</span> \n</p>\n<p style=\"text-align:left;\">\n	<span style=\"line-height:1.5;\">神经元按一定的顺序排列，构成整个神经网络。在兰兰的模型之中，神经网络中的神经无分为几层；称为输入层、输出层，和若干个中间层。每层神经元只向下一层的神经元输出信息，只从上一层神经元接受信息。下图是一个简单的三层神经网络的例子。</span> \n</p>\n<p style=\"text-align:center;\">\n	<span style=\"line-height:1.5;\"><img src=\"http://tk.hustoj.com:80/attached/image/20140113/20140113165626_59496.jpg\" alt=\"\" /><br />\n</span> \n</p>\n<p style=\"text-align:left;\">\n	<span style=\"line-height:1.5;\">兰兰规定，</span><span style=\"line-height:1.5;\">C<sub>i</sub></span><span style=\"line-height:1.5;\">服从公式：（其中</span><span style=\"line-height:1.5;\">n</span><span style=\"line-height:1.5;\">是网络中所有神经元的数目）</span> \n</p>\n<p style=\"text-align:center;\">\n	<span style=\"line-height:1.5;\"><img src=\"http://tk.hustoj.com:80/attached/image/20140113/20140113165648_37755.jpg\" alt=\"\" /><br />\n</span> \n</p>\n<p style=\"text-align:left;\">\n	<span style=\"line-height:1.5;\">公式中的Wji（可能为负值）表示连接j号神经元和 i号神经元的边的权值。当 Ci大于0时，该神经元处于兴奋状态，否则就处于平静状态。当神经元处于兴奋状态时，下一秒它会向其他神经元传送信号，信号的强度为Ci。<br />\n如此，在输入层神经元被激发之后，整个网络系统就在信息传输的推动下进行运作。<br />\n现在，给定一个神经网络，及当前输入层神经元的状态（Ci），要求你的程序运算出最后网络输出层的状态。</span> \n</p>\n<p style=\"text-align:left;\">\n	<span style=\"line-height:1.5;\"><br />\n</span> \n</p>\n\n## 输入描述\n<p>\n	每组输入第一行是两个整数n（1≤n≤20）和p。接下来n行，每行两个整数，第i＋1行是神经元i最初状态和其阈值（Ui），非输入层的神经元开始时状态必然为0。再下面P行，每行由两个整数i，j及一个整数Wij，表示连接神经元i、j的边权值为Wij。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n每组输出包含若干行，每行有两个整数，分别对应一个神经元的编号，及其最后的状态，两个整数间以空格分隔。仅输出最后状态非零的输出层神经元状态，并且按照编号由小到大顺序输出！<br />\n若输出层的神经元最后状态均为 0，则输出 NULL。<br />\n<div>\n	<br />\n</div>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"20 100\\r\\n106 0\\r\\n161 0\\r\\n159 0\\r\\n191 0\\r\\n156 0\\r\\n0 30\\r\\n0 -44\\r\\n0 -116\\r\\n0 -123\\r\\n0 0\\r\\n0 -91\\r\\n0 -122\\r\\n0 -2\\r\\n0 -72\\r\\n0 65\\r\\n0 5\\r\\n0 -71\\r\\n0 -73\\r\\n0 -11\\r\\n0 65\\r\\n1 6 7\\r\\n1 7 0\\r\\n1 8 8\\r\\n1 9 -3\\r\\n1 10 7\\r\\n1 11 -5\\r\\n1 12 10\\r\\n1 13 11\\r\\n1 14 13\\r\\n1 15 11\\r\\n2 6 5\\r\\n2 7 0\\r\\n2 8 0\\r\\n2 9 -4\\r\\n2 10 -1\\r\\n2 11 2\\r\\n2 12 -3\\r\\n2 13 12\\r\\n2 14 9\\r\\n2 15 12\\r\\n3 6 8\\r\\n3 7 8\\r\\n3 8 7\\r\\n3 9 11\\r\\n3 10 13\\r\\n3 11 12\\r\\n3 12 3\\r\\n3 13 8\\r\\n3 14 -2\\r\\n3 15 1\\r\\n4 6 12\\r\\n4 7 -2\\r\\n4 8 13\\r\\n4 9 -2\\r\\n4 10 13\\r\\n4 11 7\\r\\n4 12 5\\r\\n4 13 7\\r\\n4 14 6\\r\\n4 15 2\\r\\n5 6 2\\r\\n5 7 11\\r\\n5 8 10\\r\\n5 9 1\\r\\n5 10 5\\r\\n5 11 1\\r\\n5 12 11\\r\\n5 13 6\\r\\n5 14 4\\r\\n5 15 6\\r\\n6 16 0\\r\\n6 17 -8\\r\\n6 18 6\\r\\n6 19 -7\\r\\n6 20 -3\\r\\n7 16 4\\r\\n7 17 -9\\r\\n7 18 8\\r\\n7 19 -7\\r\\n7 20 6\\r\\n8 16 8\\r\\n8 17 -3\\r\\n8 18 -4\\r\\n8 19 -7\\r\\n8 20 0\\r\\n9 16 6\\r\\n9 17 8\\r\\n9 18 2\\r\\n9 19 8\\r\\n9 20 -1\\r\\n10 16 5\\r\\n10 17 -4\\r\\n10 18 9\\r\\n10 19 8\\r\\n10 20 -9\\r\\n11 16 9\\r\\n11 17 6\\r\\n11 18 -8\\r\\n11 19 -3\\r\\n11 20 -5\\r\\n12 16 6\\r\\n12 17 0\\r\\n12 18 -2\\r\\n12 19 -3\\r\\n12 20 -5\\r\\n13 16 8\\r\\n13 17 4\\r\\n13 18 9\\r\\n13 19 4\\r\\n13 20 3\\r\\n14 16 6\\r\\n14 17 4\\r\\n14 18 3\\r\\n14 19 0\\r\\n14 20 6\\r\\n15 16 3\\r\\n15 17 -6\\r\\n15 18 -3\\r\\n15 19 5\\r\\n15 20 -9\", \"output\": \"16 238648\\r\\n18 109080\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562071', '1084', '0', '守望者的逃离', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	恶魔猎手尤迪安野心勃勃，他背叛了暗夜精灵，率领深藏在海底的娜迦族企图叛变。守望者在与尤迪安的交锋中遭遇了围杀，被困在一个荒芜的大岛上。为了杀死守望者，尤迪安开始对这个荒岛施咒，这座岛很快就会沉下去。到那时，岛上的所有人都会遇难。守望者的跑步速度为17m/s，以这样的速度是无法逃离荒岛的。庆幸的是守望者拥有闪烁法术，可在1s内移动60m，不过每次使用闪烁法术都会消耗魔法值10点。守望者的魔法值恢复的速度为4点/s，只有处在原地休息状态时才能恢复。\n</p>\n<p>\n	现在已知守望者的魔法初值M，他所在的初始位置与岛的出口之间的距离S，岛沉没的时间T。你的任务是写一个程序帮助守望者计算如何在最短的时间内逃离荒岛，若不能逃出，则输出守望者在剩下的时间内能走的最远距离。注意：守望者跑步、闪烁或休息活动均以秒（s）为单位，且每次活动的持续时间为整数秒。距离的单位为（m）。\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	每组输入数据仅一行，包括空格隔开的三个非负整数M，S，T。\n</p>\n<p>\n	<br />\n</p>\n<p>\n	<span style=\"line-height:1.5;\">数据规模：</span>\n</p>\n<p>\n	30%的数据满足1&lt;=T&lt;=10，1&lt;=S&lt;=100；\n</p>\n<p>\n	50%的数据满足1&lt;=T&lt;=1000，1&lt;=S&lt;=10000；\n</p>\n<p>\n	100%的数据满足1&lt;=T&lt;=300000，0&lt;=M&lt;=1000，1&lt;=S&lt;=10<sup>8</sup>\n</p>\n<p>\n	<sup><br />\n</sup>\n</p>\n\n## 输出描述\n每组输出包含两行：<br />\n<p>\n	<span style=\"line-height:1.5;\">第1行为字符串“Yes”或“No”（区分大小写），即守望者是否能逃离荒岛。</span> \n</p>\n第2行包含一个整数。第一行为“Yes”（区分大小写）时表示守望者逃离荒岛的最短时间；<br />\n<p>\n	<span style=\"line-height:1.5;\">第一行为“No”（区分大小写）时表示守望者能走的最远距离。</span> \n</p>\n<p>\n	<span style=\"line-height:1.5;\"><br />\n</span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"100 99054932 500\", \"output\": \"No\\r\\n9000\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562072', '1040', '0', 'C语言程序设计教程（第三版）课后习题8.1', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果两个整数由键盘输入。\n\n## 输入描述\n两个数\n\n## 输出描述\n最大公约数 最小公倍数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"6 15\", \"output\": \"3 30\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562073', '1085', '0', '【基础题】歌手大奖赛', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	例2.20 &nbsp;歌手大奖赛上6名评委给一位参赛者打分，6个人打分的平均分为9.6分；如果去掉一个最高分，这名参赛者的平均分为9.4分；如果去掉一个最低分，这名参赛者的平均分为9.8分；如果去掉一个最高分和一个最低分，这名参赛者的平均是多少？\n</p>\n<p>\n	<br />\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	无输入。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	<span>参赛者的最终得分，保留2位小数。（注意修改教材程序中的输出语句，不要用域宽输出）</span> \n</p>\n<p>\n	<span><br />\n</span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"9.60\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562074', '1086', '0', '【基础题】分钱游戏', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<strong>例2.22 </strong>&nbsp;分钱游戏。甲、乙、丙三人共有24元钱，先由甲分钱给乙、丙两人，所分给的数与各人已有数相同；接着由乙分给甲、丙，分法同前；再由丙分钱给甲、乙，分法亦同前。经上述三次分钱之后，每个人的钱数恰好一样多。 求原先各人的钱数分别是多少?\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	<span>无输入。</span> \n</p>\n<p>\n	<span><br />\n</span> \n</p>\n\n## 输出描述\n<p>\n	<span>一行三个数，表示甲、乙、丙三人原先的钱数。</span> \n</p>\n<p>\n	<span><br />\n</span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"13 7 4\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938658562075', '1087', '0', '【基础题】解方程', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	例2.23 求一元二次方程x2+3x+2=0的两个实数根。\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	无输入。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	<span>x1=一个根 x2=另一个根，x1&gt;=x2，保留3位小数。</span> \n</p>\n<p>\n	<span><br />\n</span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"x1=-1.000 x2=-2.000\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476609', '1088', '0', '【基础题】平均数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	输入3个整数，输出它们的平均值，保留3位小数。\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	三个整数（0~32767），用空格隔开。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	三个数的平均值，保留3位小数。\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1 5 7\", \"output\": \"4.333\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476610', '1089', '0', '转圈游戏（Day 1）', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	n个小伙伴（编号从0到n-1）围坐一圈玩游戏。按照顺时针方向给n个位置编号，从0到n-1。最初，第0号小伙伴在第0号位置，第1号小伙伴在第1号位置，...，依此类推。\n</p>\n<p>\n	游戏规则如下：每一轮第0号位置上的小伙伴顺时针走到第m号位置，第1号位置小伙伴走到第m+1号位置，...，依此类推，第n−m号位置上的小伙伴走到第0号位置，第n-m+1号位置上的小伙伴走到第1号位置，...，第n-1号位置上的小伙伴顺时针走到第m-1号位置。\n</p>\n<p>\n	现在，一共进行了10<sup>k</sup>轮，请问x号小伙伴最后走到了第几号位置。\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	每组输入数据共1行，包含4个整数n、m、k、x，每两个整数之间用一个空格隔开。\n</p>\n<p>\n	<br />\n</p>\n<p>\n	数据规模：\n</p>\n<p>\n	对于30%的数据，0&lt;k&lt;7；\n</p>\n<p>\n	对于80%的数据，0&lt;k&lt;10<sup>7</sup>；\n</p>\n<p>\n	对于100%的数据，1&lt;n&lt;1,000,000，0&lt;m&lt;n，0≤x&lt;n，0&lt;k&lt;10<sup>9</sup>。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	每组输出共1行，包含1个整数，表示10<sup>k</sup>轮后x号小伙伴所在的位置编号。\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"361 226 242242144 34\", \"output\": \"83\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476611', '1090', '0', '华容道（Day 2）', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	小B最近迷上了华容道，可是他总是要花很长的时间才能完成一次。于是，他想到用编程来完成华容道：给定一种局面，华容道是否根本就无法完成，如果能完成，最少需要多少时间。\n</p>\n<p>\n	小B玩的华容道与经典的华容道游戏略有不同，游戏规则是这样的：\n</p>\n<p>\n	1. 在一个n*m棋盘上有n*m个格子，其中有且只有一个格子是空白的，其余n*m-1个格子上每个格子上有一个棋子，每个棋子的大小都是1*1的；\n</p>\n<p>\n	2. 有些棋子是固定的，有些棋子则是可以移动的；\n</p>\n<p>\n	3. 任何与空白的格子相邻（有公共的边）的格子上的棋子都可以移动到空白格子上。\n</p>\n<p>\n	游戏的目的是把某个指定位置可以活动的棋子移动到目标位置。\n</p>\n<p>\n	给定一个棋盘，游戏可以玩q次，当然，每次棋盘上固定的格子是不会变的，但是棋盘上空白的格子的初始位置、指定的可移动的棋子的初始位置和目标位置却可能不同。第i次玩的时候，空白的格子在第EX<sub>i</sub>行第EY<sub>i</sub>列，指定的可移动棋子的初始位置为第SX<sub>i</sub>行第SY<sub>i</sub>列，目标位置为第TX<sub>i</sub>行第TY<sub>i</sub>列。\n</p>\n<p>\n	假设小B每秒钟能进行一次移动棋子的操作，而其他操作的时间都可以忽略不计。请你告诉小B每一次游戏所需要的最少时间，或者告诉他不可能完成游戏。\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	每组输入数据的第一行有3个整数，每两个整数之间用一个空格隔开，依次表示n、m和q；\n</p>\n<p>\n	接下来的n行描述一个n*m的棋盘，每行有m个整数，每两个整数之间用一个空格隔开，每个整数描述棋盘上一个格子的状态，0表示该格子上的棋子是固定的，1表示该格子上的棋子可以移动或者该格子是空白的。\n</p>\n<p>\n	接下来的q行，每行包含6个整数依次是EX<sub>i</sub>、EY<sub>i</sub>、SX<sub>i</sub>、SY<sub>i</sub>、TX<sub>i</sub>、TY<sub>i</sub>，每两个整数之间用一个空格隔开，表示每次游戏空白格子的位置，指定棋子的初始位置和目标位置。\n</p>\n<p>\n	<br />\n</p>\n<p>\n	数据规模：\n</p>\n<p>\n	对于30%的数据，1≤n, m≤10，q=1；\n</p>\n<p>\n	对于60%的数据，1≤n, m≤30，q≤10；\n</p>\n<p>\n	对于100%的数据，1≤n, m≤30，q≤500。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	每组输出有q行，每行包含1个整数，表示每次游戏所需要的最少时间，如果某次游戏无法完成目标则输出−1。\n</p>\n<p>\n	<br />\n</p>\n<p>\n	下面是对样例数据的解释：\n</p>\n<p>\n	棋盘上划叉的格子是固定的，红色格子是目标位置，圆圈表示棋子，其中绿色圆圈表示目标棋子。\n</p>\n<p>\n	1. 第一次游戏，空白格子的初始位置是(3, 2)（图中空白所示），游戏的目标是将初始位置在(1, 2)上的棋子（图中绿色圆圈所代表的棋子）移动到目标位置(2, 2)（图中红色的格子）上。\n</p>\n<p>\n	移动过程如下：\n</p>\n<p style=\"text-align:center;\">\n	<img src=\"http://tk.hustoj.com:80/attached/image/20140120/20140120142256_31775.jpg\" alt=\"\" />\n</p>\n<p style=\"text-align:left;\">\n	2. 第二次游戏，空白格子的初始位置是(1, 2)（图中空白所示），游戏的目标是将初始位置在(2, 2)上的棋子（图中绿色圆圈所示）移动到目标位置(3, 2)上。\n</p>\n<p style=\"text-align:center;\">\n	<img src=\"http://tk.hustoj.com:80/attached/image/20140120/20140120142404_64677.jpg\" alt=\"\" />\n</p>\n<p style=\"text-align:left;\">\n	要将指定块移入目标位置，必须先将空白块移入目标位置，空白块要移动到目标位置，必然是从位置(2, 2)上与当前图中目标位置上的棋子交换位置，之后能与空白块交换位置的只有当前图中目标位置上的那个棋子，因此目标棋子永远无法走到它的目标位置，游戏无法完成。\n</p>\n<p style=\"text-align:left;\">\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"30 30 500\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\\r\\n1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\\r\\n1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1\\r\\n4 21 8 9 15 23\\r\\n18 9 12 23 20 15\\r\\n19 3 3 21 28 17\\r\\n23 5 23 9 1 18\\r\\n1 11 25 23 27 7\\r\\n5 9 29 1 18 1\\r\\n3 13 12 1 20 25\\r\\n29 29 30 13 1 26\\r\\n14 19 13 3 3 20\\r\\n20 25 28 13 13 29\\r\\n11 3 7 7 6 3\\r\\n16 29 25 3 28 1\\r\\n18 29 30 26 6 5\\r\\n9 11 10 25 24 25\\r\\n6 3 5 9 13 1\\r\\n7 23 10 25 1 6\\r\\n5 19 26 19 10 17\\r\\n23 21 29 1 13 7\\r\\n11 3 3 12 27 25\\r\\n10 29 12 15 29 27\\r\\n8 1 15 13 22 13\\r\\n27 15 3 24 19 23\\r\\n18 15 28 27 27 19\\r\\n16 5 20 13 26 27\\r\\n21 3 16 25 16 24\\r\\n14 23 25 7 20 9\\r\\n1 25 18 1 27 25\\r\\n29 29 24 1 22 17\\r\\n10 13 27 15 29 7\\r\\n3 24 3 16 24 3\\r\\n21 11 1 13 20 1\\r\\n27 1 30 14 1 18\\r\\n21 3 22 9 20 25\\r\\n16 23 1 14 10 19\\r\\n5 3 5 29 20 7\\r\\n13 3 21 27 7 21\\r\\n30 27 3 11 27 27\\r\\n21 9 23 9 28 29\\r\\n1 27 25 3 23 7\\r\\n8 7 15 28 5 7\\r\\n14 7 24 7 9 29\\r\\n5 13 26 23 4 21\\r\\n29 15 18 27 30 22\\r\\n21 1 1 29 19 29\\r\\n20 13 7 13 8 21\\r\\n5 25 10 27 22 5\\r\\n6 7 13 15 15 27\\r\\n10 9 12 7 8 11\\r\\n8 13 22 27 14 11\\r\\n22 23 9 19 28 9\\r\\n27 13 12 23 30 7\\r\\n17 3 25 25 25 13\\r\\n12 23 16 15 4 25\\r\\n16 9 30 15 8 19\\r\\n15 25 23 3 27 1\\r\\n18 11 21 19 27 1\\r\\n11 21 22 17 21 9\\r\\n25 7 11 13 30 19\\r\\n10 7 7 9 25 3\\r\\n23 17 30 11 5 9\\r\\n1 9 22 1 1 21\\r\\n30 21 20 1 23 5\\r\\n30 2 13 11 3 7\\r\\n6 1 30 6 28 27\\r\\n30 22 22 11 8 11\\r\\n23 13 25 13 3 25\\r\\n28 15 15 1 3 8\\r\\n1 28 19 3 16 11\\r\\n11 15 15 11 10 27\\r\\n27 11 6 27 2 27\\r\\n22 7 18 15 15 11\\r\\n5 29 30 11 5 27\\r\\n20 27 28 9 11 23\\r\\n15 3 3 3 10 11\\r\\n14 7 1 12 9 3\\r\\n4 25 14 7 10 23\\r\\n15 9 3 3 23 21\\r\\n27 13 22 27 29 21\\r\\n4 1 16 13 27 27\\r\\n24 11 24 25 1 27\\r\\n3 28 23 15 20 3\\r\\n7 7 27 23 10 11\\r\\n25 17 10 17 29 29\\r\\n10 25 13 3 18 23\\r\\n9 19 18 23 10 9\\r\\n11 23 28 29 5 3\\r\\n6 11 23 21 24 1\\r\\n3 13 20 15 20 25\\r\\n26 29 28 25 8 21\\r\\n1 20 11 21 16 24\\r\\n3 15 20 5 20 19\\r\\n22 21 30 18 6 3\\r\\n29 29 30 9 20 29\\r\\n10 19 25 23 21 11\\r\\n14 9 17 19 27 9\\r\\n15 25 13 29 14 19\\r\\n13 5 9 17 25 11\\r\\n4 29 16 25 27 21\\r\\n16 3 29 1 19 11\\r\\n16 21 1 7 5 3\\r\\n11 11 23 29 26 17\\r\\n16 9 5 3 5 17\\r\\n20 3 29 23 27 5\\r\\n13 27 11 27 15 25\\r\\n16 11 19 17 16 23\\r\\n29 7 15 23 17 25\\r\\n24 11 30 1 18 17\\r\\n1 1 29 13 28 9\\r\\n10 9 10 7 23 17\\r\\n1 12 28 5 4 1\\r\\n4 25 8 11 6 7\\r\\n13 9 27 15 23 3\\r\\n14 29 8 30 24 21\\r\\n16 1 1 19 18 7\\r\\n8 25 18 23 1 24\\r\\n19 13 1 30 1 21\\r\\n25 15 21 27 9 25\\r\\n27 17 11 21 20 25\\r\\n11 9 9 11 6 19\\r\\n1 15 11 9 14 3\\r\\n30 6 7 9 15 28\\r\\n4 1 7 29 13 5\\r\\n23 7 12 15 7 23\\r\\n30 2 16 17 4 29\\r\\n22 1 1 24 27 21\\r\\n1 9 1 3 25 11\\r\\n17 9 26 21 29 23\\r\\n10 11 1 21 19 29\\r\\n19 23 23 4 5 13\\r\\n27 11 4 21 12 19\\r\\n16 11 23 3 13 7\\r\\n1 15 29 9 1 28\\r\\n14 25 4 17 28 23\\r\\n17 27 5 23 3 5\\r\\n28 11 4 13 25 27\\r\\n14 1 20 3 16 27\\r\\n20 15 30 13 28 19\\r\\n6 27 14 25 22 13\\r\\n27 21 25 11 17 13\\r\\n13 9 4 17 4 23\\r\\n7 5 23 23 25 17\\r\\n23 25 27 15 2 1\\r\\n10 21 6 23 3 25\\r\\n10 13 28 7 29 7\\r\\n30 15 10 23 30 9\\r\\n18 23 9 7 26 7\\r\\n25 11 9 21 9 3\\r\\n3 29 5 19 3 21\\r\\n28 13 7 27 15 1\\r\\n16 29 16 11 17 27\\r\\n30 14 4 1 13 17\\r\\n30 1 22 13 14 5\\r\\n5 7 11 25 27 17\\r\\n1 11 26 11 11 1\\r\\n1 30 15 3 23 13\\r\\n22 9 29 1 15 7\\r\\n6 21 14 29 13 7\\r\\n4 25 15 5 15 15\\r\\n8 15 23 19 7 5\\r\\n14 23 3 24 1 26\\r\\n22 19 7 1 14 17\\r\\n30 6 4 17 25 21\\r\\n15 17 24 21 23 25\\r\\n21 27 21 3 3 4\\r\\n30 25 8 1 3 13\\r\\n24 11 3 11 7 15\\r\\n9 23 9 25 12 17\\r\\n18 9 29 21 28 27\\r\\n8 5 16 25 3 25\\r\\n1 27 28 1 6 3\\r\\n14 3 30 23 28 11\\r\\n21 17 25 21 29 15\\r\\n23 19 15 13 7 21\\r\\n3 29 6 11 3 8\\r\\n11 3 17 27 23 7\\r\\n18 19 25 11 29 25\\r\\n1 1 1 9 8 21\\r\\n30 23 3 29 8 19\\r\\n9 5 4 5 28 1\\r\\n4 29 13 1 28 25\\r\\n28 25 12 17 12 5\\r\\n24 1 3 5 11 19\\r\\n7 21 11 15 21 7\\r\\n30 11 10 9 26 7\\r\\n19 3 23 7 29 5\\r\\n8 9 9 5 5 5\\r\\n11 3 13 9 1 9\\r\\n10 23 26 3 3 5\\r\\n29 23 10 3 13 21\\r\\n4 21 9 3 6 21\\r\\n10 19 1 20 3 19\\r\\n22 15 1 19 8 29\\r\\n1 3 14 21 27 15\\r\\n30 9 1 11 18 19\\r\\n23 17 7 27 27 23\\r\\n13 27 5 1 29 15\\r\\n6 13 10 15 20 11\\r\\n21 1 19 23 5 25\\r\\n25 9 7 29 17 15\\r\\n30 14 23 4 20 3\\r\\n1 5 24 27 23 5\\r\\n22 19 26 9 16 25\\r\\n23 11 14 15 6 1\\r\\n8 3 24 23 7 27\\r\\n14 9 10 13 10 21\\r\\n11 13 14 1 26 25\\r\\n1 5 13 19 30 23\\r\\n17 25 24 21 26 23\\r\\n26 3 7 17 3 13\\r\\n4 5 5 29 5 5\\r\\n5 23 22 9 16 23\\r\\n13 15 11 15 30 15\\r\\n1 7 10 1 10 7\\r\\n6 13 21 17 8 7\\r\\n27 29 23 4 25 29\\r\\n15 7 5 13 26 9\\r\\n26 5 7 27 24 5\\r\\n7 1 26 11 26 3\\r\\n5 7 23 3 27 17\\r\\n24 15 15 19 20 5\\r\\n20 21 13 13 8 5\\r\\n3 4 8 19 1 4\\r\\n26 1 22 15 22 3\\r\\n13 1 29 25 27 17\\r\\n1 28 8 21 19 21\\r\\n11 1 1 5 5 3\\r\\n6 17 3 15 8 19\\r\\n15 5 14 29 27 29\\r\\n22 1 10 19 14 17\\r\\n30 9 23 7 1 17\\r\\n17 5 15 25 17 5\\r\\n14 7 30 6 27 7\\r\\n1 11 20 1 17 27\\r\\n28 17 11 1 22 19\\r\\n12 5 13 11 10 13\\r\\n3 25 23 5 10 29\\r\\n11 9 3 29 10 1\\r\\n29 9 22 3 24 29\\r\\n10 23 29 11 18 7\\r\\n14 13 4 7 28 21\\r\\n9 11 21 5 1 5\\r\\n20 3 30 3 11 27\\r\\n21 19 7 21 15 27\\r\\n16 11 6 27 8 25\\r\\n18 23 27 29 1 15\\r\\n20 19 5 9 13 15\\r\\n14 13 10 13 5 23\\r\\n22 7 19 5 14 9\\r\\n28 17 1 4 13 9\\r\\n30 1 10 25 28 1\\r\\n21 17 28 21 24 25\\r\\n3 24 28 7 19 25\\r\\n8 30 1 28 16 29\\r\\n7 9 19 21 3 15\\r\\n21 17 15 27 1 28\\r\\n6 13 18 27 25 17\\r\\n25 25 16 17 15 25\\r\\n19 13 23 7 2 1\\r\\n28 25 23 3 6 7\\r\\n5 23 14 29 7 17\\r\\n16 27 25 11 22 15\\r\\n1 16 9 21 3 1\\r\\n12 19 11 29 25 23\\r\\n20 13 26 11 18 13\\r\\n10 21 1 6 4 11\\r\\n22 7 14 23 4 9\\r\\n12 25 11 13 28 29\\r\\n26 1 12 9 1 5\\r\\n19 17 17 23 26 7\\r\\n29 11 4 19 27 5\\r\\n1 26 18 7 27 23\\r\\n9 25 24 23 19 3\\r\\n14 13 12 29 6 21\\r\\n16 5 7 25 15 1\\r\\n19 25 5 25 15 21\\r\\n30 19 27 25 26 15\\r\\n27 11 14 23 22 29\\r\\n5 23 26 17 19 17\\r\\n18 23 12 13 25 5\\r\\n5 11 26 13 18 29\\r\\n22 19 8 11 28 13\\r\\n9 13 5 29 1 9\\r\\n13 11 30 30 1 22\\r\\n16 15 16 3 9 3\\r\\n18 25 12 5 29 25\\r\\n6 25 23 23 6 17\\r\\n22 29 23 29 11 3\\r\\n3 24 13 23 7 23\\r\\n28 11 24 3 19 11\\r\\n7 9 8 15 1 19\\r\\n27 15 21 11 23 27\\r\\n22 21 18 19 23 25\\r\\n12 7 9 29 20 1\\r\\n18 13 12 9 7 25\\r\\n13 9 11 27 8 5\\r\\n3 9 7 29 7 7\\r\\n3 3 8 23 17 3\\r\\n12 15 25 3 18 11\\r\\n23 9 18 19 29 29\\r\\n21 11 6 25 3 21\\r\\n16 3 21 9 1 7\\r\\n12 1 3 27 23 13\\r\\n29 19 18 21 21 15\\r\\n5 23 17 21 10 19\\r\\n19 15 1 11 18 11\\r\\n20 11 7 5 13 29\\r\\n17 5 7 27 1 10\\r\\n16 24 28 29 7 25\\r\\n1 5 7 29 1 27\\r\\n30 26 13 19 9 19\\r\\n18 19 16 17 14 29\\r\\n16 7 22 23 22 5\\r\\n7 7 22 21 14 1\\r\\n3 23 23 29 14 1\\r\\n23 3 9 21 23 19\\r\\n24 15 7 17 28 17\\r\\n10 21 21 7 10 27\\r\\n22 13 26 21 6 25\\r\\n12 9 28 25 20 15\\r\\n15 17 22 11 16 1\\r\\n27 17 1 28 21 19\\r\\n21 11 10 29 15 17\\r\\n28 25 30 25 10 3\\r\\n9 27 14 17 6 7\\r\\n10 13 4 3 23 13\\r\\n3 17 9 7 15 25\\r\\n3 16 23 23 2 1\\r\\n22 3 22 27 27 23\\r\\n24 11 3 13 3 13\\r\\n1 9 21 11 18 13\\r\\n11 23 17 15 7 9\\r\\n1 26 8 30 12 7\\r\\n24 23 28 5 22 13\\r\\n28 7 19 27 29 21\\r\\n15 29 26 23 17 15\\r\\n7 13 19 5 12 27\\r\\n28 13 19 19 7 11\\r\\n1 1 3 13 8 9\\r\\n18 17 13 11 26 7\\r\\n30 14 1 7 10 29\\r\\n17 29 22 29 30 27\\r\\n9 7 3 9 1 25\\r\\n1 14 11 27 27 29\\r\\n30 2 6 27 29 15\\r\\n16 1 24 9 12 15\\r\\n28 27 14 29 3 12\\r\\n1 15 16 15 12 19\\r\\n24 21 1 6 27 21\\r\\n10 15 25 25 1 2\\r\\n28 23 18 13 22 15\\r\\n25 25 4 21 5 23\\r\\n20 3 29 15 23 15\\r\\n17 23 8 7 1 7\\r\\n12 21 28 5 3 5\\r\\n24 9 14 1 1 1\\r\\n12 27 26 21 22 25\\r\\n25 27 12 23 14 19\\r\\n4 9 7 5 28 27\\r\\n12 25 30 18 14 23\\r\\n8 17 16 13 30 25\\r\\n6 15 4 13 12 13\\r\\n9 9 4 7 15 19\\r\\n30 9 11 23 23 25\\r\\n24 21 12 27 3 16\\r\\n6 17 26 5 29 19\\r\\n29 9 23 25 13 5\\r\\n30 19 17 11 15 5\\r\\n6 27 19 27 6 25\\r\\n12 27 3 16 25 21\\r\\n1 22 19 15 1 9\\r\\n20 7 25 11 1 28\\r\\n22 19 1 24 21 9\\r\\n15 11 9 15 17 7\\r\\n21 27 15 23 1 19\\r\\n16 27 28 23 27 19\\r\\n9 1 29 25 26 25\\r\\n5 11 15 1 1 13\\r\\n1 11 13 3 1 20\\r\\n1 15 24 9 4 9\\r\\n30 26 26 5 28 19\\r\\n24 11 1 6 13 7\\r\\n15 13 22 11 9 9\\r\\n20 19 25 3 7 17\\r\\n1 4 27 15 9 29\\r\\n13 21 22 13 25 17\\r\\n27 19 3 25 15 25\\r\\n1 24 19 7 12 1\\r\\n10 15 23 13 15 7\\r\\n9 3 27 23 24 17\\r\\n4 23 23 15 23 5\\r\\n10 3 26 15 9 15\\r\\n13 1 12 3 15 17\\r\\n15 23 8 11 1 28\\r\\n7 11 19 1 7 21\\r\\n13 25 13 21 13 5\\r\\n30 7 1 6 4 29\\r\\n17 25 3 21 1 27\\r\\n16 21 6 29 3 5\\r\\n7 27 7 11 11 13\\r\\n4 23 18 7 19 7\\r\\n22 7 9 5 24 15\\r\\n22 27 8 23 13 15\\r\\n19 15 15 21 15 29\\r\\n8 27 3 8 3 20\\r\\n28 29 6 11 30 29\\r\\n24 23 26 3 30 10\\r\\n14 9 15 1 11 7\\r\\n29 29 12 17 6 9\\r\\n5 25 16 1 28 25\\r\\n6 17 16 23 7 5\\r\\n15 11 22 29 15 19\\r\\n18 11 4 9 6 19\\r\\n17 25 9 19 19 23\\r\\n1 4 10 7 20 17\\r\\n16 29 18 25 2 1\\r\\n10 29 16 11 23 4\\r\\n15 25 10 1 4 23\\r\\n29 27 27 19 26 11\\r\\n17 15 6 25 19 25\\r\\n12 5 9 1 24 27\\r\\n11 21 28 3 19 19\\r\\n8 1 16 7 22 23\\r\\n30 21 23 13 12 7\\r\\n1 12 19 3 28 27\\r\\n1 25 13 17 28 13\\r\\n16 9 26 13 27 9\\r\\n24 25 16 27 26 11\\r\\n26 5 8 27 19 19\\r\\n12 21 24 7 22 5\\r\\n20 25 1 22 13 29\\r\\n9 11 23 15 11 23\\r\\n27 25 2 1 25 29\\r\\n11 21 8 5 4 13\\r\\n28 9 29 21 8 1\\r\\n27 29 30 3 11 1\\r\\n23 5 10 23 4 13\\r\\n23 7 3 24 22 11\\r\\n24 13 15 1 21 21\\r\\n27 17 12 23 5 15\\r\\n27 13 12 5 10 13\\r\\n28 29 16 13 16 9\\r\\n14 5 1 28 29 27\\r\\n30 29 18 23 8 21\\r\\n8 21 24 21 1 9\\r\\n3 16 14 23 23 9\\r\\n17 23 13 29 2 1\\r\\n13 15 13 13 6 15\\r\\n1 24 7 29 10 25\\r\\n27 7 5 21 17 7\\r\\n3 12 21 11 28 13\\r\\n20 13 11 19 11 13\\r\\n13 23 10 27 24 7\\r\\n3 19 6 21 1 9\\r\\n23 11 20 1 24 27\\r\\n23 11 9 17 11 21\\r\\n1 10 5 5 20 1\\r\\n3 7 3 20 27 27\\r\\n5 15 22 23 1 7\\r\\n21 21 14 17 16 15\\r\\n19 5 16 15 12 19\\r\\n30 27 1 20 4 3\\r\\n24 27 30 9 3 27\\r\\n28 1 23 15 6 21\\r\\n5 5 12 23 27 3\\r\\n23 27 4 29 6 27\\r\\n16 1 30 5 14 9\\r\\n22 17 21 9 1 2\\r\\n28 5 24 13 19 13\\r\\n9 27 27 27 27 23\\r\\n20 11 22 29 23 19\\r\\n11 19 26 5 9 17\\r\\n11 21 26 29 13 3\\r\\n13 23 25 11 1 6\\r\\n29 19 30 1 1 1\\r\\n3 19 13 21 15 3\\r\\n11 1 1 10 4 17\\r\\n14 19 27 3 1 9\\r\\n9 11 23 3 3 20\\r\\n23 4 11 21 11 5\\r\\n22 23 12 29 7 9\\r\\n19 5 28 17 18 11\\r\\n3 21 29 27 28 21\\r\\n28 1 10 1 30 9\\r\\n19 27 26 13 1 2\\r\\n6 23 1 6 12 3\\r\\n22 23 14 21 30 29\\r\\n7 13 4 27 16 27\\r\\n4 23 21 7 18 21\\r\\n1 7 13 7 27 13\\r\\n26 17 3 23 13 19\\r\\n2 27 12 1 5 11\\r\\n20 9 4 7 17 3\\r\\n11 9 5 9 14 19\\r\\n28 1 23 5 27 11\\r\\n25 27 6 17 29 11\\r\\n20 23 25 23 24 1\\r\\n15 29 20 9 11 27\\r\\n30 5 28 29 16 11\\r\\n7 13 25 1 9 27\\r\\n3 27 13 17 1 17\", \"output\": \"45430\\r\\n42629\\r\\n11500\\r\\n34698\\r\\n39003\\r\\n3846\\r\\n23838\\r\\n59458\\r\\n51409\\r\\n58852\\r\\n6824\\r\\n2903\\r\\n30391\\r\\n3170\\r\\n18108\\r\\n19900\\r\\n9158\\r\\n7703\\r\\n59403\\r\\n45718\\r\\n2345\\r\\n1603\\r\\n30878\\r\\n57477\\r\\n247\\r\\n13917\\r\\n23283\\r\\n58650\\r\\n39660\\r\\n49391\\r\\n10704\\r\\n58076\\r\\n48412\\r\\n35333\\r\\n25296\\r\\n22901\\r\\n56306\\r\\n-1\\r\\n1411\\r\\n30840\\r\\n24284\\r\\n11090\\r\\n15367\\r\\n-1\\r\\n40961\\r\\n23964\\r\\n51106\\r\\n21551\\r\\n50657\\r\\n49729\\r\\n36060\\r\\n51827\\r\\n41445\\r\\n28167\\r\\n3993\\r\\n53164\\r\\n41255\\r\\n27802\\r\\n10310\\r\\n9425\\r\\n14149\\r\\n6996\\r\\n16671\\r\\n29109\\r\\n4754\\r\\n49119\\r\\n16437\\r\\n23599\\r\\n47816\\r\\n534\\r\\n19182\\r\\n42219\\r\\n52556\\r\\n26348\\r\\n17958\\r\\n39171\\r\\n44307\\r\\n14663\\r\\n58496\\r\\n9284\\r\\n41677\\r\\n55280\\r\\n-1\\r\\n36531\\r\\n46934\\r\\n-1\\r\\n37957\\r\\n44116\\r\\n18027\\r\\n12444\\r\\n57472\\r\\n60047\\r\\n-1\\r\\n59700\\r\\n47096\\r\\n31214\\r\\n30867\\r\\n7050\\r\\n25846\\r\\n16560\\r\\n-1\\r\\n50664\\r\\n40450\\r\\n11405\\r\\n29917\\r\\n533\\r\\n57669\\r\\n20622\\r\\n50848\\r\\n12889\\r\\n19613\\r\\n40029\\r\\n-1\\r\\n21979\\r\\n14105\\r\\n-1\\r\\n9177\\r\\n14108\\r\\n41966\\r\\n11476\\r\\n33600\\r\\n24300\\r\\n40021\\r\\n42908\\r\\n20404\\r\\n34649\\r\\n2289\\r\\n-1\\r\\n29473\\r\\n4026\\r\\n4012\\r\\n-1\\r\\n30815\\r\\n36537\\r\\n56512\\r\\n24455\\r\\n21545\\r\\n49549\\r\\n13225\\r\\n35892\\r\\n25313\\r\\n53228\\r\\n172\\r\\n100\\r\\n53293\\r\\n5121\\r\\n49141\\r\\n1153\\r\\n15086\\r\\n48162\\r\\n54895\\r\\n35813\\r\\n27491\\r\\n29819\\r\\n36132\\r\\n6822\\r\\n28020\\r\\n44614\\r\\n59260\\r\\n13073\\r\\n55537\\r\\n27755\\r\\n10553\\r\\n900\\r\\n39886\\r\\n19042\\r\\n32724\\r\\n12553\\r\\n632\\r\\n4912\\r\\n59471\\r\\n37833\\r\\n37853\\r\\n18856\\r\\n25159\\r\\n50714\\r\\n32442\\r\\n29387\\r\\n4748\\r\\n21167\\r\\n52979\\r\\n54922\\r\\n44407\\r\\n10617\\r\\n127\\r\\n188\\r\\n27995\\r\\n2214\\r\\n47615\\r\\n50159\\r\\n30790\\r\\n3873\\r\\n33433\\r\\n39409\\r\\n15519\\r\\n51557\\r\\n23697\\r\\n1503\\r\\n53009\\r\\n282\\r\\n27213\\r\\n51413\\r\\n56254\\r\\n14472\\r\\n40895\\r\\n22420\\r\\n14244\\r\\n3908\\r\\n21682\\r\\n24644\\r\\n50326\\r\\n6356\\r\\n15578\\r\\n49493\\r\\n-1\\r\\n12782\\r\\n24217\\r\\n20978\\r\\n57621\\r\\n55853\\r\\n33013\\r\\n38279\\r\\n41891\\r\\n32083\\r\\n3616\\r\\n15611\\r\\n18361\\r\\n-1\\r\\n13269\\r\\n19780\\r\\n35689\\r\\n68\\r\\n17623\\r\\n47787\\r\\n6649\\r\\n24038\\r\\n13194\\r\\n-1\\r\\n16411\\r\\n49029\\r\\n15031\\r\\n21366\\r\\n25069\\r\\n11901\\r\\n-1\\r\\n35806\\r\\n53976\\r\\n12195\\r\\n26390\\r\\n31285\\r\\n9496\\r\\n34462\\r\\n-1\\r\\n26661\\r\\n-1\\r\\n37986\\r\\n31221\\r\\n13732\\r\\n6671\\r\\n45671\\r\\n21395\\r\\n35368\\r\\n14734\\r\\n13809\\r\\n43023\\r\\n43981\\r\\n-1\\r\\n26230\\r\\n36360\\r\\n52185\\r\\n41406\\r\\n38283\\r\\n25735\\r\\n26804\\r\\n11305\\r\\n48475\\r\\n-1\\r\\n2405\\r\\n31674\\r\\n-1\\r\\n11045\\r\\n7305\\r\\n-1\\r\\n418\\r\\n30938\\r\\n32125\\r\\n-1\\r\\n156\\r\\n22710\\r\\n53525\\r\\n48667\\r\\n23716\\r\\n16873\\r\\n47148\\r\\n24638\\r\\n29949\\r\\n35899\\r\\n23491\\r\\n-1\\r\\n15681\\r\\n30116\\r\\n59050\\r\\n32519\\r\\n8102\\r\\n39768\\r\\n24762\\r\\n6866\\r\\n-1\\r\\n875\\r\\n1131\\r\\n42475\\r\\n37605\\r\\n34722\\r\\n-1\\r\\n9737\\r\\n7387\\r\\n25085\\r\\n7613\\r\\n46847\\r\\n29622\\r\\n-1\\r\\n43057\\r\\n30857\\r\\n46468\\r\\n36640\\r\\n40855\\r\\n24589\\r\\n12654\\r\\n0\\r\\n12246\\r\\n33777\\r\\n-1\\r\\n35175\\r\\n15834\\r\\n37731\\r\\n24172\\r\\n36432\\r\\n18478\\r\\n24321\\r\\n8184\\r\\n-1\\r\\n30073\\r\\n-1\\r\\n57161\\r\\n29583\\r\\n52317\\r\\n21708\\r\\n26538\\r\\n17827\\r\\n7545\\r\\n15195\\r\\n2008\\r\\n21371\\r\\n1444\\r\\n4518\\r\\n9263\\r\\n19908\\r\\n29309\\r\\n25903\\r\\n56559\\r\\n2523\\r\\n57195\\r\\n2814\\r\\n47443\\r\\n59518\\r\\n33047\\r\\n23554\\r\\n10159\\r\\n28378\\r\\n59194\\r\\n-1\\r\\n36306\\r\\n43483\\r\\n15209\\r\\n20078\\r\\n994\\r\\n9075\\r\\n20606\\r\\n6806\\r\\n59824\\r\\n19226\\r\\n10911\\r\\n51428\\r\\n56546\\r\\n21287\\r\\n403\\r\\n11425\\r\\n32448\\r\\n24250\\r\\n41208\\r\\n5898\\r\\n53873\\r\\n-1\\r\\n41883\\r\\n47433\\r\\n8491\\r\\n27553\\r\\n24746\\r\\n4795\\r\\n132\\r\\n41581\\r\\n40152\\r\\n22565\\r\\n58727\\r\\n-1\\r\\n19360\\r\\n13182\\r\\n42958\\r\\n22280\\r\\n36260\\r\\n-1\\r\\n58991\\r\\n16645\\r\\n50069\\r\\n20803\\r\\n23459\\r\\n25112\\r\\n40508\\r\\n1475\\r\\n16515\\r\\n54829\\r\\n40317\\r\\n31295\\r\\n28759\\r\\n15040\\r\\n19836\\r\\n44461\\r\\n33114\\r\\n577\\r\\n2818\\r\\n43871\\r\\n-1\\r\\n29768\\r\\n30157\\r\\n7145\\r\\n56064\\r\\n57014\\r\\n35498\\r\\n37259\\r\\n31668\\r\\n20311\\r\\n-1\\r\\n12691\\r\\n26786\\r\\n50674\\r\\n10596\\r\\n14862\\r\\n11741\\r\\n52437\\r\\n15551\\r\\n34330\\r\\n24302\\r\\n33151\\r\\n20338\\r\\n21095\\r\\n7591\\r\\n22447\\r\\n21761\\r\\n9114\\r\\n21766\\r\\n21253\\r\\n41148\\r\\n29169\\r\\n33759\\r\\n158\\r\\n11817\\r\\n28537\\r\\n1520\\r\\n10955\\r\\n-1\\r\\n51069\\r\\n-1\\r\\n35534\\r\\n10057\\r\\n47605\\r\\n53964\\r\\n14636\\r\\n50730\\r\\n48334\\r\\n33578\\r\\n35116\\r\\n12446\\r\\n27965\\r\\n50728\\r\\n15945\\r\\n-1\\r\\n804\\r\\n46405\\r\\n33125\\r\\n19880\\r\\n37088\\r\\n7712\\r\\n55780\\r\\n19420\\r\\n31297\\r\\n32807\\r\\n38143\\r\\n-1\\r\\n18743\\r\\n48117\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476612', '1091', '0', '【入门】兑换硬币', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<div class=\"O\">\n	<div>\n		<b>用一张一元票换1分、2分和5分的硬币，每种至少一枚， 问有几种换法.</b>\n	</div>\n	<div>\n		<br />\n	</div>\n</div>\n\n## 输入描述\n无\n\n## 输出描述\n<b>输出只有一行（这意味着末尾有一个回车符号），包括1个整数。</b>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"461\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476613', '1092', '0', 'C语言程序设计教程（第三版）课后习题7.2', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n用选择法对10个整数从小到大排序。\n\n## 输入描述\n10个整数\n\n## 输出描述\n排序好的10个整数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"4 85 3 234 45 345 345 122 30 12\", \"output\": \"3\\r\\n4\\r\\n12\\r\\n30\\r\\n45\\r\\n85\\r\\n122\\r\\n234\\r\\n345\\r\\n345\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476614', '1093', '0', '两个数的和', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">写一个程序，计算1234+4321值，并在计算机屏幕上输出。</span>\n\n## 输入描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">本题无输入。</span>\n\n## 输出描述\n<pre>\n<p>\n	写一个程序，计算1234+4321值，并在计算机屏幕上输出。\n</p>\n\n<p>\n	要求输出结果后再输出一个换行符。\n</p>\n</pre>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"��������������\", \"output\": \"5555\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476615', '1094', '0', '两个数的差', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">写一个程序，计算12345-4321值，并在计算机屏幕上输出。输出结果后再输出一个换行符。</span>\n\n## 输入描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">本题无输入。</span>\n\n## 输出描述\n<pre>\n<p>\n	写一个程序，计算12345-4321值，并在计算机屏幕上输出。\n</p>\n\n<p>\n	要求输出结果后再输出一个换行符。\n</p>\n</pre>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"��������������\", \"output\": \"8024\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476616', '1041', '0', '【C语言训练】亲密数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span>两个不同的自然数A和B，如果整数A的全部因子(包括1，不包括A本身)之和等于B；且整数B的全部因子(包括1，不包括B本身)之和等于A，则将整数A和B称为亲密数。求3000以内的全部亲密数。</span>\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n<p>\n	<span>3000以内的全部亲密数(输出格式:(A,B)，不加换行，不加分隔符号) <br />\n一对亲密数只输出一次, 小的在前</span>\n</p>\n\n## 提示\n<p>\n	<span>按照亲密数定义，要判断数a是否有亲密数，只要计算出a的全部因子的累加和为b，再计算b的全部因子的累加和为n，若n等于a则可判定a和b是亲密数。计算数a的各因子的算法： <br />\n用a依次对i(i=1~a/2)进行模运算，若模运算结果等于0，则i为a的一个因子；否则i就不是a的因子。</span>\n</p>\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"(220,284)(1184,1210)(2620,2924)\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476617', '1095', '0', '两个数的商', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">写一个程序，计算9÷4的商，并在计算机屏幕上输出。输出后再输出一个换行符。</span>\n\n## 输入描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">本题无输入。</span>\n\n## 输出描述\n<pre>\n<p>\n	写一个程序，计算9÷4的商，并在计算机屏幕上输出。\n</p>\n\n<p>\n	要求输出结果后再输出一个换行符。\n</p>\n</pre>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"��������������\", \"output\": \"2\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476618', '1096', '0', '两个数的余数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">写一个程序，计算9÷4的余数，并在计算机屏幕上输出。输出</span><span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">结果后再输出一个换行符。</span>\n\n## 输入描述\n<pre>\n<p>\n	本题无输入。\n</p>\n</pre>\n\n## 输出描述\n<pre>\n<p>\n	写一个程序，计算9÷4的余数，并在计算机屏幕上输出。\n</p>\n\n<p>\n	要求输本题无输入。出结果后再输出一个换行符。\n</p>\n</pre>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"��������������\", \"output\": \"1\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476619', '1097', '0', '输出小数计算公式', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">计算2.37*12.43-22.1的值，输出整个计算公式，计算结果保留4位小数，参与运算的数保留原本的有效位数。</span><br />\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\"><strong>输出计算公式后再输出一个换行符。</strong></span>\n\n## 输入描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">本题无输入。</span>\n\n## 输出描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">写一个程序，计算2.37*12.43-22.1值，并在计算机屏幕上输出。</span><span style=\"font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;color:#FF0000;\"><strong>结果保留4位小数。</strong></span><br />\n<strong>要求输出结果后再输出一个换行符。</strong>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"��������������\", \"output\": \"2.37*12.43-22.1=7.3591\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476620', '1098', '0', '输出小数计算算式II', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">计算1.47×(32.54-32.1)的值，输出整个计算公式，计算结果保留4位小数，参与运算的数保留原本的有效位数。</span><br />\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\"><strong>输出计算公式后再输出一个换行符。</strong></span>\n\n## 输入描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">本题无输入。</span>\n\n## 输出描述\n<span style=\"color:#333333;font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;\">写一个程序，计算1.47*(32.54-32.1)值，并在计算机屏幕上输出。</span><span style=\"font-family:Monaco, Menlo, Consolas, \'Courier New\', monospace;font-size:13px;line-height:20px;background-color:#FFFFFF;color:#FF0000;\"><strong>结果保留4位小数。</strong></span><br />\n<strong>要求输出结果后再输出一个换行符。</strong>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"��������������\", \"output\": \"1.47*(32.54-32.1)=0.6468\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476621', '1099', '0', '特殊的数字', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span style=\"font-size:16px;\">153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1*1*1+5*5*5+3*3*3。编程求所有满足这种条件的三位十进制数。</span>\n\n## 输入描述\n无\n\n## 输出描述\n<span style=\"font-size:16px;\">按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。</span>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"153\\r\\n370\\r\\n371\\r\\n407\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476622', '1100', '0', '【基础题】阶乘之和(例题）', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<br />\n</p>\n<p>\n	<b>例4.12 &nbsp;&nbsp;</b><b>&nbsp;</b>求 S=1!+2!+3!+....+10!\n</p>\n<p>\n	<br />\n</p>\n<div>\n</div>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	无输入。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	所求的和。\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"4037913\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476623', '1101', '0', '【基础题】买鸡(例题）', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<b>例4.13 &nbsp; &nbsp;</b>一个炊事员上街采购，用500元钱买了90只鸡，其中母鸡一只15元,公鸡一只10元，小鸡一只5元，正好把钱买完。问母鸡，公鸡，小鸡各买了多少只？（有多种情形）\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	无输入。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	若干行，每行三个数分别为母鸡数、公鸡数、小鸡数，表示<span>一种可能的购买方案，按母鸡数从小到大排列。</span> \n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"0 10 80\\r\\n1 8 81\\r\\n2 6 82\\r\\n3 4 83\\r\\n4 2 84\\r\\n5 0 85\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476624', '1102', '0', '【基础题】换钞票', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<strong>上机练习4.4.6 &nbsp; &nbsp; </strong>把一张一元钞票换成一分，二分和五分的硬币，每种至少一枚。问有哪几种换法？\n</p>\n<p>\n	<br />\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	无输入。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	一个整数，表示总共多少种换法。\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"461\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476625', '1103', '0', 'C语言程序设计教程（第三版）课后习题7.3', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>求一个3&times;3矩阵对角线元素之和。 </p>\n\n## 输入描述\n矩阵\n\n## 输出描述\n主对角线 副对角线 元素和\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1 2 3\\r\\n1 1 1\\r\\n3 2 1\", \"output\": \"3 7\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476626', '1104', '0', '【基础题】百鸡问题', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<strong>上机练习4.4.7 &nbsp; &nbsp; &nbsp;</strong>百鸡问题：一只公鸡值5元，一只母鸡值3元，而1元可买3只小鸡。现有100元钱，想买100只鸡。问可买公鸡、母鸡、小鸡各几只？\n</p>\n<p>\n	<br />\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	无输入。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	若干行，每行三个数分别为公鸡数、母鸡数、小鸡数，表示一种可能的购买方案，按公鸡数从小到大排列。\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"0 25 75\\r\\n4 18 78\\r\\n8 11 81\\r\\n12 4 84\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476627', '1042', '0', '【C语言训练】列出最简真分数序列*', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span>按递增顺序依次列出所有分母为40，分子小于40的最简分数。</span>\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n<p>\n	<span>分数之间用逗号分开(含最末逗号)</span>\n</p>\n\n## 提示\n<p>\n	<span>对分子采用穷举法，利用最大公约数的方法，判断分子与40是否构成真分数。</span>\n</p>\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"1/40,3/40,7/40,9/40,11/40,13/40,17/40,19/40,21/40,23/40,27/40,29/40,31/40,33/40,37/40,39/40,\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476628', '1105', '0', '【基础题】再次换钞票', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<strong>上机练习4.4.8 &nbsp; &nbsp; &nbsp;</strong>某人想将手中的一张面值100元的人民币换成10元、5元、2元和1元面值的票子。要求换正好40张，且每种票子至少一张。问：有几种换法？应适当考虑减少重复次数。\n</p>\n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	无输入。\n</p>\n<p>\n	<br />\n</p>\n\n## 输出描述\n<p>\n	一个数，表示共有多少种换法。\n</p>\n<p>\n	<br />\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"34\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476629', '1106', '0', '【循环】猴子吃枣问题（jujube）', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span style=\"font-size:medium;\">猴子摘了一堆枣，每一天吃了一半，还嫌不过瘾，又吃了一个；第二天又吃了剩下的一半零一个；以后第天如此。到第十天，猴子一看，只剩下一个了，问最初有多少个枣子？</span> \n</p>\n\n## 输入描述\n<p>\n	<span style=\"font-size:medium;\">无输入。</span> \n</p>\n\n## 输出描述\n<p>\n	<span style=\"font-size:medium;\">枣子数量。</span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"1534\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476630', '1107', '0', '【循环】判断湖的大小（lake）', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<!--[if gte mso 9]>Normal07.8 磅02falsefalsefalseMicrosoftInternetExplorer4<![endif]-->\n</p>\n<p>\n	<!--[if gte mso 9]><![endif]--><!--[if gte mso 10]>\n<![endif]-->\n</p>\n<p style=\"text-indent:28.0pt;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">四个学生上地理课，回答我国四大淡水湖大小时这样说：</span></span> \n</p>\n<p style=\"text-indent:28.0pt;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">甲：“最大洞庭湖，最小洪泽湖，鄱阳湖第三。”</span></span> \n</p>\n<p style=\"text-indent:28.0pt;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">乙：“最大洪泽湖，最小洞庭湖，鄱阳湖第二，太湖第三。”</span></span> \n</p>\n<p style=\"text-indent:28.0pt;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">丙：“最小洪泽湖，洞庭湖第三。”</span></span> \n</p>\n<p style=\"text-indent:28.0pt;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">丁：“最大鄱阳湖，最小太湖，洪泽湖第二，洞庭湖第三。”</span></span> \n</p>\n<span style=\"font-size:medium;\"> <span style=\"font-family:宋体;\">对于每个湖的大小，每个学生仅答对一个，请编程确定四个湖的大小。</span></span> \n<p>\n	<br />\n</p>\n\n## 输入描述\n<p>\n	<span style=\"font-size:medium;\">无。</span> \n</p>\n\n## 输出描述\n<p>\n	<span style=\"font-size:medium;\">共四行，从大到小输出四个湖的名称，每行一个。<span style=\"font-family:宋体;\">鄱阳湖（p</span></span><span style=\"font-size:medium;\"><span style=\"font-family:宋体;\"><span>oyang lake</span>）、太湖（tai lake）、洪泽湖（hongze lake）、洞庭湖（dongting lake）</span>，用括号中的名称输出。</span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"poyang lake\\r\\ndongting lake\\r\\ntai lake\\r\\nhongze lake\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476631', '1108', '0', '【循环】谁是小偷（thief）', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<!--[if gte mso 9]>Normal07.8 磅02falsefalsefalseMicrosoftInternetExplorer4<![endif]--><!--[if gte mso 9]><![endif]--><!--[if gte mso 10]>\n<![endif]--><span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">&nbsp;&nbsp;&nbsp; 警察局抓了<span>A</span>、<span>B</span>、<span>C</span>、<span>D</span>四名偷窃嫌疑犯，其中有一个是小偷。审问中<span>A</span>说：“我不是小偷。”<span>B</span>说“<span>C</span>是小偷。”<span>C</span>说：“小偷肯定是<span>D</span>。”<span>D</span>说：“<span>C</span>在冤枉人。”现在已经知道四个人中三人说的是真话，一人说的是假话，问到底谁是小偷？</span></span> \n</p>\n\n## 输入描述\n<p>\n	<span style=\"font-size:medium;\">无。</span> \n</p>\n\n## 输出描述\n<p>\n	<span style=\"font-size:medium;\">小偷（用字母表示），即A、B、C、D其中一个字母。</span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"C\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476632', '1109', '0', '【循环】侦察队长选人（select）', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<!--[if gte mso 9]>Normal07.8 磅02falsefalsefalseMicrosoftInternetExplorer4<![endif]-->\n<p style=\"margin-left:18.0pt;text-indent:0cm;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">某侦察队长接到一项紧急任务，要他在代号为<span>A</span>、<span>B</span>、<span>C</span>、<span>D</span>、<span>E</span>、<span>F</span>的六个队员中选出若干人去侦破一件案子。人选的配备必须尊照下列各点：</span></span> \n</p>\n<p style=\"margin-left:18.0pt;text-indent:0cm;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">（<span>1</span>）<span>A</span>、<span>B</span>两人中至少去一人；</span></span> \n</p>\n<p style=\"margin-left:18.0pt;text-indent:0cm;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">（<span>2</span>）<span>A</span>、<span>D</span>不能一起去；</span></span> \n</p>\n<p style=\"margin-left:18.0pt;text-indent:0cm;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">（<span>3</span>）<span>A</span>、<span>E</span>、<span>F</span>三人中要派两人去；</span></span> \n</p>\n<p style=\"margin-left:18.0pt;text-indent:0cm;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">（<span>4</span>）<span>B</span>、<span>C</span>两人都去或都不去；</span></span> \n</p>\n<p style=\"margin-left:18.0pt;text-indent:0cm;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">（<span>5</span>）<span>C</span>、<span>D</span>两人中去一人；</span></span> \n</p>\n<p style=\"margin-left:18.0pt;text-indent:0cm;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">（<span>6</span>）若<span>D</span>不去，则<span>F</span>也不去。</span></span> \n</p>\n<p style=\"margin-left:18.0pt;text-indent:0cm;\" class=\"MsoNormal\">\n	<span style=\"font-size:medium;\"><span style=\"font-family:宋体;\">请问应该让哪些人去？</span></span> \n</p>\n<!--[if gte mso 9]><![endif]--><!--[if gte mso 10]>\n<![endif]-->\n\n## 输入描述\n<p>\n	<span style=\"font-size:medium;\">无。</span> \n</p>\n\n## 输出描述\n<p>\n	<span style=\"font-size:medium;\">执行任务的队员代号（<span style=\"font-family:宋体;\"><span>A</span>、<span>B</span>、<span>C</span>、<span>D</span>、<span>E</span>、<span>F表示），中间用一个空格分隔。</span></span></span><span style=\"font-size:medium;\"><span style=\"font-family:宋体;\"><span><br />\n</span></span></span> \n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"0\", \"output\": \"A B C E\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476633', '1110', '0', '[语言过关]牛棚回声', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoNormal\" style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;text-indent:24pt;\">\n	<span style=\"font-size:12pt;font-family:宋体;\">奶牛们灰常享受在牛栏中牟叫，因為她们可以听到她们牟声的回音。虽然有时候并不能完全听到完整的回音。<span>Bessie</span>曾经是一个出色的秘书，所以她精确地纪录了所有的牟叫声及其回声。她很好奇到底两个声音的重复部份有多长。<span></span></span>\n</p>\n<p class=\"MsoNormal\" style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;text-indent:24pt;\">\n	<span style=\"font-size:12pt;font-family:宋体;\">输入两个字符串（长度為<span>1</span>到<span>80</span>个字母），表示两个牟叫声。你要确定最长的重复部份的长度。两个字符串的重复部份指的是同时是一个字符串的前缀（从第一个字符开始的连续字符串）和另一个字符串的后缀（从最后一个字符开始的连续字符串）的字符串。</span><span style=\"font-family:宋体;font-size:12pt;\">&nbsp;</span>\n</p>\n<p class=\"MsoNormal\" style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;text-indent:24pt;\">\n	<span style=\"font-size:12pt;font-family:宋体;\">我们通过一个例子来理解题目。考虑下面的两个牟声：</span><span style=\"font-family:宋体;font-size:12pt;\">&nbsp;</span>\n</p>\n<p class=\"MsoNormal\" style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;text-indent:24pt;\">\n	<span style=\"font-size:12pt;font-family:宋体;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;moyooyoxyzooo</span>\n</p>\n<p class=\"MsoNormal\" style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;text-indent:24pt;\">\n	<span style=\"font-size:12pt;font-family:宋体;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yzoooqyasdfljkamo</span><span style=\"font-family:宋体;font-size:12pt;\">&nbsp;</span>\n</p>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span style=\"font-size:12pt;font-family:宋体;\">第一个串的最后的部份<span>\"yzooo\"</span>跟第二个串的第一部份重复。第二个串的最后的份<span>\"mo\"</span>跟第一个串的第一部份重复。所以<span>\"yzooo\"</span>跟<span>\"mo\"</span>都是这<span>2</span>个串的重复部份。其中，<span>\"yzooo\"</span>比较长，所以最长的重复部份的长度就是<span>5</span>。</span>\n</p>\n<h3 style=\"font-family:\'Microsoft Yahei\';background-color:#F5F5F5;\">\n	输入格式\n</h3>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span style=\"font-size:12pt;font-family:宋体;\">输入只有共两行，第一行为奶牛的牟叫，第二行为奶牛牟叫的回声</span>\n</p>\n<h3 style=\"font-family:\'Microsoft Yahei\';background-color:#F5F5F5;\">\n	输出\n</h3>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span style=\"font-size:12pt;font-family:宋体;\">输出为一行，包含一个单独的整数表示输入的<span>2</span>个字符串中，一个字符串的前缀和另一个字符串的后缀的最长的重复部份的长度。</span>\n</p>\n<h3 style=\"font-family:\'Microsoft Yahei\';background-color:#F5F5F5;\">\n	样例输入\n</h3>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span style=\"font-family:\'Lucida Console\';\">abcxxxxabcxabcd<br />\nabcdxabcxxxxabcx<br />\n</span>\n</p>\n<h3 style=\"font-family:\'Microsoft Yahei\';background-color:#F5F5F5;\">\n	样例输出\n</h3>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span style=\"font-family:\'Lucida Console\';\">11</span>\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"abcxxxxabcxabcd\\r\\nabcdxabcxxxxabcx\", \"output\": \"11\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476634', '1111', '0', '[语言过关]配对', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	给出2个序列A={a[1]，a[2]，…，a[n]}，B={b[1]，b[2]，…，b[n]}，从A、B中各选出n个元素进行一一配对（可以不按照原来在序列中的顺序），并使得所有配对元素差的绝对值之和最大。\n</p>\n<h3 style=\"font-family:\'Microsoft Yahei\';background-color:#F5F5F5;\">\n	输入格式\n</h3>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	输入的第1行为1个整数n 第2行包含n个整数，题目中的A序列。&nbsp; 第3行包含n个整数，题目中的B序列。&nbsp;\n</p>\n<h3 style=\"font-family:\'Microsoft Yahei\';background-color:#F5F5F5;\">\n	输出\n</h3>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	一个数，最大配对\n</p>\n<h3 style=\"font-family:\'Microsoft Yahei\';background-color:#F5F5F5;\">\n	样例输入\n</h3>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span style=\"font-family:\'Lucida Console\';\">4<br />\n2&nbsp;5&nbsp;6&nbsp;3<br />\n1&nbsp;4&nbsp;6&nbsp;7<br />\n</span> \n</p>\n<h3 style=\"font-family:\'Microsoft Yahei\';background-color:#F5F5F5;\">\n	样例输出\n</h3>\n<p style=\"font-family:\'Microsoft Yahei\';font-size:14px;background-color:#F5F5F5;\">\n	<span style=\"font-family:\'Lucida Console\';\">14</span> \n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"4\\r\\n2 5 6 3\\r\\n1 4 6 7\", \"output\": \"14\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476635', '1112', '0', '计数排序', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span style=\"font-family:\'Microsoft Yahei\';font-size:14px;line-height:28px;background-color:#F5F5F5;\">输入n个整数(n&lt;=5000)，从小到大输出。（使用计数排序）</span>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"10\\r\\n9 8 6 5 4 3 7 1 2 12\", \"output\": \"1 2 3 4 5 6 7 8 9 12\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476636', '1113', '0', '求偶数和', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n&nbsp;\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;font-size:12pt;\">输入</span><span style=\"font-size:12pt;\">n</span><span style=\"font-family:宋体;font-size:12pt;\">个整数，先判断这个整数是否偶数，如果是偶数就加起来。求所有偶数的和！</span><span style=\"font-size:12pt;\"></span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;font-size:12pt;\"></span>\n</p>\n\n## 输入描述\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;font-size:12pt;\">第一行：一个整数n；</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;font-size:12pt;\">第二行：n个整数。</span> \n</p>\n\n## 输出描述\n<p>\n	一个整数，表示偶数的和。\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"10\\r\\n45 60 52 14 31 28 20 66 79 43\", \"output\": \"240\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476637', '1114', '0', 'C语言程序设计教程（第三版）课后习题7.4', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n已有一个已排好的9个元素的数组，今输入一个数要求按原来排序的规律将它插入数组中。\n\n## 输入描述\n第一行，原始数列。第二行，需要插入的数字。\n\n## 输出描述\n排序后的数列\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1 7 8 17 23 24 59 62 101\\r\\n50\", \"output\": \"1\\r\\n7\\r\\n8\\r\\n17\\r\\n23\\r\\n24\\r\\n50\\r\\n59\\r\\n62\\r\\n101\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476638', '1043', '0', '【C语言训练】委派任务*', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span>某侦察队接到一项紧急任务，要求在A、B、C、D、E、F六个队员中尽可能多地挑若干人，但有以下限制条件： <br />\n1)A和B两人中至少去一人； <br />\n2)A和D不能一起去； <br />\n3)A、E和F三人中要派两人去； <br />\n4)B和C都去或都不去； <br />\n5)C和D两人中去一个； <br />\n6)若D不去，则E也不去。 <br />\n问应当让哪几个人去？ </span>\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n<p>\n	<span>要派出的人 <br />\n若有多个，按字母递增顺序排列，用逗号分开（含末尾逗号） <br />\n<br />\n</span>\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"no input needed\", \"output\": \"A,B,C,F,\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476639', '1115', '0', '求整和', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n&nbsp;\n<div class=\"O\">\n	<div>\n		<span style=\"font-family:宋体;color:blue;font-size:20pt;\">输入</span><span style=\"color:blue;font-size:20pt;\">10</span><span style=\"font-family:宋体;color:blue;font-size:20pt;\">个整数</span><span style=\"color:blue;font-size:20pt;\">,</span><span style=\"font-family:宋体;color:blue;font-size:20pt;\">求他们的和. </span>\n	</div>\n	<div>\n		<span style=\"color:blue;font-size:20pt;\"><span></span></span><span style=\"font-family:宋体;color:blue;font-size:20pt;\">输入</span><span style=\"color:blue;font-size:20pt;\">10</span><span style=\"font-family:宋体;color:blue;font-size:20pt;\">行</span><span style=\"color:blue;font-size:20pt;\">,</span><span style=\"font-family:宋体;color:blue;font-size:20pt;\">每行一个整数. </span>\n	</div>\n	<div>\n		<span style=\"font-family:宋体;color:blue;font-size:20pt;\">输出一行</span><span style=\"color:blue;font-size:20pt;\">,</span><span style=\"font-family:宋体;color:blue;font-size:20pt;\">一个整数</span><span style=\"color:blue;font-size:20pt;\">. </span>\n	</div>\n	<div>\n	</div>\n</div>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"10\\r\\n10\\r\\n10\\r\\n10\\r\\n10\\r\\n20\\r\\n20\\r\\n20\\r\\n20\\r\\n20\", \"output\": \"150\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476640', '1116', '0', '统计直角个数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span style=\"font-family:宋体;font-size:12pt;\">输入</span><span style=\"font-family:\'Times New Roman\';font-size:12pt;\">10</span><span style=\"font-family:宋体;font-size:12pt;\">个角的度数</span><span style=\"font-family:\'Times New Roman\';font-size:12pt;\">a</span><span style=\"font-family:宋体;font-size:12pt;\">，先判断这个角是否是直角，如果是就统计直角的个数</span><span style=\"font-family:\'Times New Roman\';font-size:12pt;\">r</span><span style=\"font-family:宋体;font-size:12pt;\">！</span>\n\n## 输入描述\n10个整数\n\n## 输出描述\n一个整数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"30 90 45 60 90 90 25 145 270 90\", \"output\": \"4\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938721476641', '1117', '0', '统计100分人数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<span style=\"font-family:宋体;font-size:12pt;\">统计</span><span style=\"font-family:\'Times New Roman\';font-size:12pt;\">15</span><span style=\"font-family:宋体;font-size:12pt;\">个同学的成绩</span><span style=\"font-family:\'Times New Roman\';font-size:12pt;\">100</span><span style=\"font-family:宋体;font-size:12pt;\">分的人数！</span>\n\n## 输入描述\n15个整数\n\n## 输出描述\n一个整数\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"100 90 80 100 70 100 60 45 89 100 100 60 100 78 100\", \"output\": \"7\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585474', '1118', '0', '有假币', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n居然有假币！！！\n事情是这样的，现在猪肉涨了，但是农民的工资却不见涨啊，没钱怎么买猪肉啊。渊子这就去买猪肉，结果找来的零钱中有假币！！！可惜渊子一不小心把它混进了一堆真币里面去了。现在知道假币的重量比真币的质量要轻。给你一个天平，请用最快的时间把那个可恶的假币找出来。\n\n## 输入描述\n1≤n≤2<sup>30</sup>,输入0结束程序。\n\n## 输出描述\n最少要称几次一定能把那个假币找出来。\n\n## 提示\n示例1中共有3枚硬币，所以任意取2个放天平上称量一下。\n因为假币的重量比较轻。\n<ul><li>如果天平不平衡，则较轻的那枚就是假币。\n<li>如果天平平衡，则说明这两枚硬币都是真的，而剩下那枚是假币。</ul>\n\n## 规则\nACM', '[{\"input\": \"3\\r\\n12\\r\\n0\", \"output\": \"1\\r\\n3\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585475', '1119', '0', '习题3-6 译密码（1）', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	写程序将字符串“China”译成密码，密码规律是：用原来的字母后面第四个私募代替原来的字母。例如，字母A后面第四个字母是E，用E代替A。因此，China应译为Glmre。\n</p>\n<p>\n	请编写一个程序，用赋初值的方法使c1, c2, c3, c4, c5这5个字符变量的值分别为\'C\', \'h\', \'i\', \'n\', \'a\'，经过运算，使c1, c2, c3, c4, c5的值分别变为\'G\', \'l\', \'m\', \'r\', \'e\'\n</p>\n<p>\n	用putchar函数输出这5个字符，输出末尾加换行符。\n</p>\n\n## 输入描述\n无\n\n## 输出描述\nGlmre，注意末尾的换行\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"��\", \"output\": \"Glmre\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585476', '1120', '0', '习题3-6 译密码（2）', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	写程序将字符串“China”译成密码，密码规律是：用原来的字母后面第四个私募代替原来的字母。例如，字母A后面第四个字母是E，用E代替A。因此，China应译为Glmre。\n</p>\n<p>\n	请编写一个程序，用赋初值的方法使c1, c2, c3, c4, c5这5个字符变量的值分别为\'C\', \'h\', \'i\', \'n\', \'a\'，经过运算，使c1, c2, c3, c4, c5的值分别变为\'G\', \'l\', \'m\', \'r\', \'e\'\n</p>\n<p>\n	用printf函数输出这5个字符\n</p>\n\n## 输入描述\n无\n\n## 输出描述\nGlmre，注意末尾的换行\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"��\", \"output\": \"Glmre\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585477', '1121', '0', '习题3-7 圆相关计算', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	设圆半径为r，圆柱高为h，计算圆周长c、圆面积area，圆球表面积s，圆球体积sv，圆柱体积cv.\n</p>\n<p>\n	数据类型设为双精度double类型，圆半径r和圆柱高h从键盘输入，要求使用scanf函数输入数据。\n</p>\n<p>\n	输出结果保留2位小数。\n</p>\n<p>\n	请将圆周率PI=3.14定义为符号常量\n</p>\n\n## 输入描述\n以空格分隔的圆半径和圆柱高\n\n## 输出描述\n<p>\n	分行输出各数据，按如下格式输出：\n</p>\n<p>\n	c=圆周长\n</p>\n<p>\n	area=圆面积\n</p>\n<p>\n	s=圆球表面积\n</p>\n<p>\n	sv=圆球体积\n</p>\n<p>\n	cv=圆柱体积\n</p>\n<p>\n	注意末尾的换行。\n</p>\n<p>\n	&nbsp;\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"1.5 3\", \"output\": \"c=9.42\\r\\narea=7.06\\r\\ns=28.26\\r\\nsv=14.13\\r\\ncv=21.20\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585478', '1122', '0', '习题4-9-2 求正整数各位上的数字', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	输入一个不多于5位的正整数，按高位到低位的顺序输出各位上的数字，末尾换行。\n</p>\n<p>\n	注意：确保输入的正整数的位数不多于5。\n</p>\n\n## 输入描述\n一个不多于5位的正整数\n\n## 输出描述\n<p>\n	从高位到低位依次输出各位上的数字，中间以空格分隔的。\n</p>\n<p>\n	注意末尾的换行。\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"2143\", \"output\": \"2 1 4 3\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585479', '1123', '0', '习题4-12 求建筑物高度', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	有4个圆塔，圆心分别为(2, 2)、(-2, 2)、(-2, -2)、(2, -2)，圆半径为1，如下图所示。这4个塔的高度为10米（m），塔以外无建筑物。\n</p>\n<img style=\"height:170px;width:215px;\" alt=\"\" src=\"http://tk.hustoj.com:80/attached/image/20141018/20141018154437_86801.jpeg\" width=\"639\" height=\"547\" /> \n<p>\n	&nbsp;\n</p>\n<p>\n	现输入任一点的坐标，求该点的建筑物高度（塔外的高度为零）。\n</p>\n\n## 输入描述\n<p>\n	输入以圆括号括起来的两个数字，两个数字之间以逗号(,)分隔，格式如：(x,y)\n</p>\n<p>\n	如下为正确输入：\n</p>\n<p>\n	(1.5,1.9)\n</p>\n<p>\n	浮点型变量，请定义为float类型。\n</p>\n\n## 输出描述\n<p>\n	该建筑物的高度，末尾换行。\n</p>\n\n## 提示\n根据输入的点的坐标，判断该点在圆内，还是在圆外。在圆内的话，建筑物的高度就是10；否则，建筑物的高度就是0.\n\n## 规则\nACM', '[{\"input\": \"(1.8,1.9)\", \"output\": \"10\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585480', '1124', '0', '求20个学生的总分及平均分', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	问题描述：输入20个学生某一次的测试成绩，要求输出总分以及平均分\n</p>\n<p>\n	输入：20行，每行一个整数，表示成绩\n</p>\n<p>\n	输出：2行，第一行表示总分，第二行表示平均分，其中平均分保留2位小数。\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"66\\r\\n77\\r\\n88\\r\\n99\\r\\n70\\r\\n80\\r\\n90\\r\\n95\\r\\n85\\r\\n75\\r\\n65\\r\\n45\\r\\n30\\r\\n100\\r\\n55\\r\\n70\\r\\n80\\r\\n87\\r\\n78\\r\\n98\", \"output\": \"1533\\r\\n76.65\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585481', '1044', '0', '【C语言训练】字符串正反连接', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span>所给字符串正序和反序连接，形成新串并输出</span>\n</p>\n\n## 输入描述\n<p>\n	<span>任意字符串（长度&lt;=50）</span>\n</p>\n\n## 输出描述\n<p>\n	<span>字符串正序和反序连接所成的新字符串</span>\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"123abc\", \"output\": \"123abccba321\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585482', '1125', '0', 'C语言程序设计教程（第三版）课后习题7.5', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n输入10个数字，然后逆序输出。\n\n## 输入描述\n十个整数\n\n## 输出描述\n逆序输出，空格分开\n\n## 提示\n数组？堆栈？\n\n## 规则\nACM', '[{\"input\": \"1 2 3 4 5 6 7 8 9 0\", \"output\": \"0 9 8 7 6 5 4 3 2 1\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585483', '1126', '0', '图形打印长方形', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	&nbsp;<span style=\"font-family:宋体;font-size:14pt;\">输入</span><span style=\"font-size:14pt;\">n,m</span><span style=\"font-family:宋体;font-size:14pt;\">输出一个</span><span style=\"font-size:14pt;\">n*m</span><span style=\"font-family:宋体;font-size:14pt;\">的长方形图形。</span> \n</p>\n<p>\n	输入\n</p>\n<p>\n	3 5\n</p>\n<p>\n	输出\n</p>\n<p>\n	@@@@@\n</p>\n<p>\n	@@@@@\n</p>\n<p>\n	@@@@@\n</p>\n<p>\n	&nbsp;\n</p>\n<p>\n	输入 5 10\n</p>\n<p>\n	输出\n</p>\n@@@@@@@@@@<br />\n@@@@@@@@@@<br />\n@@@@@@@@@@<br />\n@@@@@@@@@@<br />\n@@@@@@@@@@\n<p>\n	&nbsp;\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"5 10\", \"output\": \"@@@@@@@@@@\\r\\n@@@@@@@@@@\\r\\n@@@@@@@@@@\\r\\n@@@@@@@@@@\\r\\n@@@@@@@@@@\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585484', '1127', '0', '图形打印正方形', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	<span style=\"font-family:宋体;font-size:14pt;\">输入一个n,输出一个</span><span style=\"font-size:14pt;\">n*n</span><span style=\"font-family:宋体;font-size:14pt;\">的正方形图形。</span> \n</p>\n<p>\n	输入\n</p>\n<p>\n	2\n</p>\n<p>\n	输出\n</p>\n<p>\n	##\n</p>\n<p>\n	##\n</p>\n<p>\n	&nbsp;\n</p>\n<p>\n	输入\n</p>\n<p>\n	5\n</p>\n<p>\n	输出\n</p>\n<p>\n	<span style=\"font-family:宋体;font-size:14pt;\">#####<br />\n#####<br />\n#####<br />\n#####<br />\n#####</span><span style=\"font-family:\'Times New Roman\';font-size:10.5pt;\"></span> \n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"5\", \"output\": \"#####\\r\\n#####\\r\\n#####\\r\\n#####\\r\\n#####\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585485', '1128', '0', '图形打印直角三角形', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n&nbsp;<span style=\"font-family:宋体;font-size:14pt;\">输入一个整数</span><span style=\"font-size:14pt;\">n,</span><span style=\"font-family:宋体;font-size:14pt;\">输出一个</span><span style=\"font-size:14pt;\">n</span><span style=\"font-family:宋体;font-size:14pt;\">行的三角形图形。</span><span style=\"font-size:14pt;\"></span> \n<p class=\"MsoNormal\">\n	<span><span>&nbsp;</span><span>&nbsp;</span></span><span style=\"font-family:宋体;\">输入</span><span>3</span> \n</p>\n<p class=\"MsoNormal\">\n	<span></span><span style=\"font-family:宋体;\">输出</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\"></span><span>@</span>\n</p>\n<p class=\"MsoNormal\">\n	<span><span></span></span><span>@@</span>\n</p>\n<p class=\"MsoNormal\">\n	<span><span></span></span><span>@@@</span>\n</p>\n<p class=\"MsoNormal\">\n	<span></span>\n</p>\n<p class=\"MsoNormal\">\n	<span></span>\n</p>\n<p style=\"text-indent:5.25pt;\" class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\"></span>&nbsp;\n</p>\n<p style=\"text-indent:5.25pt;\" class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输入</span><span>5</span> \n</p>\n<p style=\"text-indent:5.25pt;\" class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输出</span> \n</p>\n<p class=\"MsoNormal\">\n	<span>@&nbsp;</span>\n</p>\n<p class=\"MsoNormal\">\n	<span><span></span></span><span>@@</span>\n</p>\n<p class=\"MsoNormal\">\n	<span><span></span></span><span>@@@</span>\n</p>\n<p class=\"MsoNormal\">\n	<span><span></span></span><span>@@@@</span>\n</p>\n<span>@@@@@</span> \n<p class=\"MsoNormal\">\n	<span style=\"font-family:\'Times New Roman\';font-size:10.5pt;\"></span>&nbsp;\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"5\", \"output\": \"@\\r\\n@@\\r\\n@@@\\r\\n@@@@\\r\\n@@@@@\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585486', '1129', '0', '数字图形三角形二', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n&nbsp;<span style=\"font-family:宋体;font-size:14pt;\">输出一个</span><span style=\"font-size:14pt;\">n</span><span style=\"font-family:宋体;font-size:14pt;\">行的三角形图形。</span><span style=\"font-size:14pt;\"></span> \n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输入</span><span>3</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输出</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\"></span><span>1</span>\n</p>\n<p class=\"MsoNormal\">\n	<span></span><span>12</span>\n</p>\n<p class=\"MsoNormal\">\n	<span></span><span>123</span>\n</p>\n<p class=\"MsoNormal\">\n	<span></span>\n</p>\n<p class=\"MsoNormal\">\n	<span></span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输入</span><span>5</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输出</span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\"></span><span>1</span>\n</p>\n<p class=\"MsoNormal\">\n	<span></span><span>12</span>\n</p>\n<p class=\"MsoNormal\">\n	<span></span><span>123</span>\n</p>\n<p class=\"MsoNormal\">\n	<span></span><span>1234</span>\n</p>\n<p class=\"MsoNormal\">\n	<span></span><span>12345</span>\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"5\", \"output\": \"1\\r\\n12\\r\\n123\\r\\n1234\\r\\n12345\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585487', '1130', '0', '打印乘法口诀', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;font-size:14pt;\">输入一个整数</span><span style=\"font-size:14pt;\">n</span><span style=\"font-family:宋体;font-size:14pt;\">（</span><span style=\"font-size:14pt;\">1&lt;=n&lt;=9</span><span style=\"font-family:宋体;font-size:14pt;\">）</span><span style=\"font-size:14pt;\">,</span><span style=\"font-family:宋体;font-size:14pt;\">输出</span><span style=\"font-size:14pt;\">1</span><span style=\"font-family:宋体;font-size:14pt;\">——</span><span style=\"font-size:14pt;\">n</span><span style=\"font-family:宋体;font-size:14pt;\">的乘法口诀表。</span><span style=\"font-size:14pt;\"></span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输入</span><span>5 </span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输出</span>\n</p>\n<p class=\"MsoNormal\">\n	<span>1*1=1</span>\n</p>\n<p class=\"MsoNormal\">\n	<span>1*2=2<span>&nbsp; </span>2*2=4</span>\n</p>\n<p class=\"MsoNormal\">\n	<span>1*3=3<span>&nbsp; </span>2*3=6<span>&nbsp; </span>3*3=9</span>\n</p>\n<p class=\"MsoNormal\">\n	<span>1*4=4<span>&nbsp; </span>2*4=8<span>&nbsp; </span>3*4=12<span>&nbsp; </span>4*4=16</span>\n</p>\n<p class=\"MsoNormal\">\n	<span>1*5=5<span>&nbsp; </span>2*5=10<span>&nbsp; </span>3*5=15<span>&nbsp; </span>4*5=20<span>&nbsp; </span>5*5=25</span>\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"5\", \"output\": \"1*1=1 \\r\\n1*2=2 2*2=4 \\r\\n1*3=3 2*3=6 3*3=9 \\r\\n1*4=4 2*4=8 3*4=12 4*4=16 \\r\\n1*5=5 2*5=10 3*5=15 4*5=20 5*5=25\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585488', '1131', '0', '数字图形打印二', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n&nbsp;<b><span style=\"font-family:宋体;font-size:14pt;\">从键盘输入行数</span></b><b><span style=\"font-size:14pt;\">N</span></b><b><span style=\"font-family:宋体;font-size:14pt;\">，１&lt;=</span></b><b><span style=\"font-size:14pt;\">N&lt;=9，输出以下图形</span></b><b><span style=\"font-family:宋体;font-size:14pt;\">。</span></b><span style=\"font-size:14pt;\"></span> \n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">例如</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输入</span><span>5</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输出</span> \n</p>\n<p style=\"text-indent:21pt;\" class=\"MsoNormal\">\n	<span>1</span> \n</p>\n<p style=\"text-indent:15.75pt;\" class=\"MsoNormal\">\n	<span>121</span> \n</p>\n<p style=\"text-indent:10.5pt;\" class=\"MsoNormal\">\n	<span>12321</span> \n</p>\n<p style=\"text-indent:5.25pt;\" class=\"MsoNormal\">\n	<span>1234321</span> \n</p>\n<p class=\"MsoNormal\">\n	<span>123454321</span> \n</p>\n<p class=\"MsoNormal\">\n	<b><span></span></b>\n</p>\n<p class=\"MsoNormal\">\n	<b><span></span></b>\n</p>\n<p class=\"MsoNormal\">\n	<span></span>\n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输入</span><span>8</span> \n</p>\n<p class=\"MsoNormal\">\n	<span style=\"font-family:宋体;\">输出</span> \n</p>\n<p style=\"text-indent:36.75pt;\" class=\"MsoNormal\">\n	<span>1</span> \n</p>\n<p style=\"text-indent:31.5pt;\" class=\"MsoNormal\">\n	<span>121</span> \n</p>\n<p style=\"text-indent:26.25pt;\" class=\"MsoNormal\">\n	<span>12321</span> \n</p>\n<p style=\"text-indent:21pt;\" class=\"MsoNormal\">\n	<span>1234321</span> \n</p>\n<p style=\"text-indent:15.75pt;\" class=\"MsoNormal\">\n	<span>123454321</span> \n</p>\n<p style=\"text-indent:10.3pt;\" class=\"MsoNormal\">\n	<span>12345654321</span> \n</p>\n<p style=\"text-indent:5.15pt;\" class=\"MsoNormal\">\n	<span>1234567654321</span> \n</p>\n<p class=\"MsoNormal\">\n	<span>123456787654321</span> \n</p>\n\n## 输入描述\n无\n\n## 输出描述\n无\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"8\", \"output\": \"1\\r\\n      121\\r\\n     12321\\r\\n    1234321\\r\\n   123454321\\r\\n  12345654321\\r\\n 1234567654321\\r\\n123456787654321\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585489', '1132', '0', 'C++老师叫啥名？', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	送分啦！\n</p>\n<p>\n	童鞋！你那人见人爱、花见花开、鸟见鸟呆、车见车爆胎的江湖人称“华哥”的C++老师叫啥名？ 你造吗？\n</p>\n<p>\n	请输出“华哥”的中文姓名！\n</p>\n\n## 输入描述\n无。\n\n## 输出描述\n<p>\n	输出姓名。\n</p>\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"\", \"output\": \"\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585490', '1133', '0', '习题5-8 求水仙花数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	输出所有的“水仙花数”，所谓“水仙花数”是指一个三位数，其各位数字的立方和等于该数本身。\n</p>\n<p>\n	例如，153是一个水仙花数，因为153=1<sup>3</sup>+5<sup>3</sup>+3<sup>3</sup>\n</p>\n<p>\n	&nbsp;\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n每行输出一个水仙花数。\n\n## 提示\n\n\n## 规则\nACM', '[{\"input\": \"��\", \"output\": \"153\\r\\n370\\r\\n371\\r\\n407\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');
INSERT INTO `data_problem` VALUES ('1970761938788585491', '1134', '0', '习题5-9 完数', 'FATE_YO', NULL, 1000, 256, '## 题目描述\n<p>\n	一个数如果恰好等于它的因子和，这个数就称为“完数”。例如，6的因子为1,2,3，而6=1+2+3，所以6是“完数”。\n</p>\n<p>\n	编程输出1000以内的所有完数，每个完数输出一行，并按下面的格式输出其因子：\n</p>\n<p>\n	6 its factors are 1,2,3\n</p>\n\n## 输入描述\n无\n\n## 输出描述\n<p>\n	每个完数输出一行，并按下面的格式输出其因子：\n</p>\n<p>\n	？&nbsp;its factors are ?,?,?\n</p>\n<p>\n	&nbsp;\n</p>\n\n## 提示\n<p>\n	因子包含1但不包含其本身。\n</p>\n\n## 规则\nACM', '[{\"input\": \"��\", \"output\": \"6 its factors are 1,2,3\\r\\n28 its factors are 1,2,4,7,14 \\r\\n496 its factors are 1,2,4,8,16,31,62,124,248\"}]', '[\"cpp\", \"c\"]', 1, 0.50, 0, NULL, 1, 1, 0, 0, 0, '2025-09-24 16:07:16', '0', '2025-09-24 16:07:16', '0');

-- ----------------------------
-- Table structure for data_problem_tag
-- ----------------------------
DROP TABLE IF EXISTS `data_problem_tag`;
CREATE TABLE `data_problem_tag`  (
  `problem_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '题目ID',
  `tag_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '标签ID'
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '题目标签关联表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of data_problem_tag
-- ----------------------------
INSERT INTO `data_problem_tag` VALUES ('1958869993346752514', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1958869993346752514', '1961379956156125185');
INSERT INTO `data_problem_tag` VALUES ('1970761938222354434', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1970761938222354435', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1970761938222354436', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1970761938222354437', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1970761938264297474', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1970761938264297475', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1970761938264297476', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1970761938264297473', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1970761938264297477', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1970761938264297478', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1970761938264297479', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1970761938264297480', '1961380061173108737');
INSERT INTO `data_problem_tag` VALUES ('1970761938264297481', '1961380061173108737');

-- ----------------------------
-- Table structure for data_progress
-- ----------------------------
DROP TABLE IF EXISTS `data_progress`;
CREATE TABLE `data_progress`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `user_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '用户ID',
  `set_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '题集ID',
  `problem_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '题目ID',
  `status` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '状态',
  `extra_json` json NULL COMMENT '额外信息',
  `completed` tinyint(1) NULL DEFAULT 0 COMMENT '是否完成',
  `completed_at` datetime NULL DEFAULT NULL COMMENT '完成时间',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '题集进度表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of data_progress
-- ----------------------------

-- ----------------------------
-- Table structure for data_reports
-- ----------------------------
DROP TABLE IF EXISTS `data_reports`;
CREATE TABLE `data_reports`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `report_type` int NOT NULL DEFAULT 0 COMMENT '报告类型',
  `task_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '任务ID',
  `is_set` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否是题单报告',
  `report_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '报告ID',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '报告库表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of data_reports
-- ----------------------------
INSERT INTO `data_reports` VALUES ('1965248209732927490', 2, '1965248208523591680', 0, '1965248209623875585', 0, '2025-09-09 10:57:40', '1', '2025-09-09 10:57:40', '1');
INSERT INTO `data_reports` VALUES ('1965248711245852673', 2, '1965248710300758016', 0, '1965248711178743809', 0, '2025-09-09 10:59:40', '1', '2025-09-09 10:59:40', '1');
INSERT INTO `data_reports` VALUES ('1965251448100548610', 2, '1965251447205785600', 0, '1965251448033439745', 0, '2025-09-09 11:10:32', '1', '2025-09-09 11:10:32', '1');

-- ----------------------------
-- Table structure for data_set
-- ----------------------------
DROP TABLE IF EXISTS `data_set`;
CREATE TABLE `data_set`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `set_type` int NOT NULL DEFAULT 1 COMMENT '题集类型',
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '标题',
  `cover` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '封面',
  `description` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL COMMENT '描述',
  `category_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT '0' COMMENT '分类',
  `difficulty` int NULL DEFAULT 1 COMMENT '难度',
  `start_time` datetime NULL DEFAULT NULL COMMENT '开始时间',
  `end_time` datetime NULL DEFAULT NULL COMMENT '结束时间',
  `ex_json` json NULL COMMENT '额外的信息',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  `is_visible` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否可见',
  `use_ai` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否使用AI',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '题集' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of data_set
-- ----------------------------
INSERT INTO `data_set` VALUES ('1949692059327299586', 1, '语法基础与简单模拟', 'http://localhost:93/oj/api/v1/sys/file/9170c9e0-4126-4e1b-a55c-c729e44cd4a0.png', '本专题旨在帮助刚刚接触编程竞赛的同学巩固语言基础，熟悉OJ的输入输出格式。题目避免复杂算法，以简单的逻辑判断、循环控制、数组和字符串的基本操作为主。通过本练习，你将学会如何将实际问题转化为代码，并注意处理各种边界条件。\n**建议**：即使题目简单，也请追求代码的清晰、规范与高效。', '0', 1, NULL, NULL, NULL, 0, '2025-07-31 14:51:53', '1', '2025-08-30 15:14:06', '1', 1, 0);
INSERT INTO `data_set` VALUES ('1950817439404732418', 2, '必备数据结构：从线性到非线性', 'http://localhost:93/oj/api/v1/sys/file/9170c9e0-4126-4e1b-a55c-c729e44cd4a0.png', '数据结构是算法的基石。本专题将系统性地训练你对常用数据结构的理解和应用能力。从简单的线性结构栈和队列，到高效的查找结构哈希表，再到灵活的非线性结构树与图。掌握它们的特点、实现方式以及应用场景，是你解决更复杂问题的重要一步。', '0', 3, '2025-07-31 07:14:02', '2025-07-31 07:14:02', NULL, 0, NULL, '1', '2025-08-30 15:14:11', '1', 1, 0);
INSERT INTO `data_set` VALUES ('1960984403355774977', 1, '深入搜索与动态规划', 'http://localhost:93/oj/api/v1/sys/file/9170c9e0-4126-4e1b-a55c-c729e44cd4a0.png', '搜索和动态规划（DP）是解决各类难题的两大核心武器。本专题将带你深入探索这两种算法思想。DFS/BFS教你如何系统地枚举状态，而DP则教你如何优雅地避免重复计算，将指数复杂度转化为多项式复杂度。本专题题目综合性较强，需要你精心设计状态转移方程或剪枝策略。', '0', 1, '2025-08-28 08:32:25', '2025-08-28 08:32:25', NULL, 0, '2025-08-28 16:34:50', '1', '2025-09-04 10:24:17', '1', 1, 0);
INSERT INTO `data_set` VALUES ('1960984493998878721', 1, '《剑指Offer》经典题目精练', 'http://localhost:93/oj/api/v1/sys/file/9170c9e0-4126-4e1b-a55c-c729e44cd4a0.png', '本专题精选自经典编程面试题集《剑指Offer》，题目质量高，覆盖了各大公司技术面试中的常考考点。题目不仅考察算法和数据结构，更注重考察对问题本质的理解、思维的发散性以及代码的鲁棒性。完成本专题将极大增强你解决面试编程题的能力和信心。', '0', 1, '2025-08-28 08:32:25', '2025-08-28 08:32:25', NULL, 0, '2025-08-28 16:35:11', '1', '2025-08-30 15:14:20', '1', 1, 0);

-- ----------------------------
-- Table structure for data_set_problem
-- ----------------------------
DROP TABLE IF EXISTS `data_set_problem`;
CREATE TABLE `data_set_problem`  (
  `set_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '题集ID',
  `problem_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '题目ID',
  `sort` int NOT NULL DEFAULT 0 COMMENT '排序'
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '题集题目' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of data_set_problem
-- ----------------------------
INSERT INTO `data_set_problem` VALUES ('1949692059327299586', '1958869993346752514', 0);
INSERT INTO `data_set_problem` VALUES ('1950817439404732418', '1958869993346752514', 0);

-- ----------------------------
-- Table structure for data_solved
-- ----------------------------
DROP TABLE IF EXISTS `data_solved`;
CREATE TABLE `data_solved`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `set_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '题集ID',
  `is_set` tinyint(1) NULL DEFAULT 0 COMMENT '是否是题集提交',
  `user_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '用户ID',
  `problem_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '题目ID',
  `submit_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '提交ID',
  `solved` tinyint(1) NULL DEFAULT 0 COMMENT '是否解决',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '用户解决表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of data_solved
-- ----------------------------
INSERT INTO `data_solved` VALUES ('1969530544871620609', NULL, 0, '1965337457379221506', '1958869993346752514', '1970756807305072642', 1, 0, '2025-09-21 06:34:09', '1965337457379221506', '2025-09-21 06:34:09', '1965337457379221506');
INSERT INTO `data_solved` VALUES ('1969663774174134274', NULL, 0, '1', '1958869993346752514', '1971098574760124417', 1, 0, '2025-09-21 15:23:33', '0', '2025-09-21 15:23:33', '0');
INSERT INTO `data_solved` VALUES ('1970734269678161922', '1950817439404732418', 1, '1965337457379221506', '1958869993346752514', '1970757292393205762', 1, 0, '2025-09-24 14:17:19', '0', '2025-09-24 14:17:19', '0');
INSERT INTO `data_solved` VALUES ('1970762481879650305', NULL, 0, '1965337457379221506', '1970761938222354434', '1970762559910481922', 1, 0, '2025-09-24 16:09:25', '0', '2025-09-24 16:09:25', '0');
INSERT INTO `data_solved` VALUES ('1970764582911471618', NULL, 0, '1', '1970761938222354434', '1970764593086853122', 1, 0, '2025-09-24 16:17:46', '0', '2025-09-24 16:17:46', '0');
INSERT INTO `data_solved` VALUES ('1970767454294220801', '1950817439404732418', 1, '1', '1958869993346752514', '1971106807516188674', 1, 0, '2025-09-24 16:29:11', '0', '2025-09-24 16:29:11', '0');
INSERT INTO `data_solved` VALUES ('1970768994329403394', NULL, 0, '1', '1970761938222354435', '1970778257755971586', 1, 0, '2025-09-24 16:35:18', '0', '2025-09-24 16:35:18', '0');
INSERT INTO `data_solved` VALUES ('1970771333983477761', NULL, 0, '1', '1970761938222354437', '1970771454171258881', 1, 0, '2025-09-24 16:44:36', '0', '2025-09-24 16:44:36', '0');

-- ----------------------------
-- Table structure for data_submit
-- ----------------------------
DROP TABLE IF EXISTS `data_submit`;
CREATE TABLE `data_submit`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `user_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '用户ID',
  `set_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '题集ID',
  `is_set` tinyint(1) NULL DEFAULT 0 COMMENT '是否是题集提交',
  `problem_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '题目ID',
  `language` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '编程语言',
  `code` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '源代码',
  `code_length` int NOT NULL DEFAULT 0 COMMENT '源代码长度',
  `submit_type` tinyint(1) NULL DEFAULT 0 COMMENT '执行类型',
  `max_time` int NOT NULL DEFAULT 0 COMMENT '最大耗时',
  `max_memory` int NOT NULL DEFAULT 0 COMMENT '最大内存使用',
  `message` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL COMMENT '执行结果消息',
  `test_case` json NULL COMMENT '测试用例结果',
  `status` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '执行状态',
  `is_finish` tinyint(1) NULL DEFAULT 0 COMMENT '流程流转是否完成',
  `similarity` decimal(10, 2) NULL DEFAULT 0.00 COMMENT '相似度',
  `task_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '相似检测任务ID',
  `report_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '报告ID',
  `similarity_category` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '相似分级',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  `judge_task_id` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '相似检测任务ID',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `problem_id`(`problem_id` ASC, `user_id` ASC) USING BTREE,
  INDEX `task_id`(`task_id` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '提交表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of data_submit
-- ----------------------------
INSERT INTO `data_submit` VALUES ('1970748527149314049', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 4, 500, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 4, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 500}]', 'ACCEPTED', 1, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:13:58', '0', '2025-09-24 15:13:59', '0', 'task-7b41072e-71be-43f1-8204-6eda18cdbaec');
INSERT INTO `data_submit` VALUES ('1970748533763731457', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 2, 280, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 280}]', 'ACCEPTED', 1, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:14:00', '0', '2025-09-24 15:14:00', '0', 'task-d1f2c373-4e51-42e5-83b8-73c187c15c60');
INSERT INTO `data_submit` VALUES ('1970748540399120385', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 1, 0.00, '1970748542294675456', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:14:01', '0', '2025-09-24 15:14:02', '0', 'task-e69040c6-64ce-4742-85f4-1ba8541d3c0a');
INSERT INTO `data_submit` VALUES ('1970748545470033921', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 1, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:14:03', '0', '2025-09-24 15:14:03', '0', 'task-712d4f44-3eed-4d09-9795-7ba97466d8f8');
INSERT INTO `data_submit` VALUES ('1970748567221694466', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 1, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:14:08', '0', '2025-09-24 15:14:08', '0', 'task-f6358cb1-b8b1-4013-802a-15b0e2ce2b55');
INSERT INTO `data_submit` VALUES ('1970749515239256065', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 2, 280, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 280}]', 'ACCEPTED', 1, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:17:54', '0', '2025-09-24 15:17:54', '0', 'task-9e1e9c1a-3722-45b7-ad74-c779a1d77d68');
INSERT INTO `data_submit` VALUES ('1970749594780037122', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 1, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:18:13', '0', '2025-09-24 15:18:13', '0', 'task-0f7586c0-2b24-4706-a8b9-65214131186f');
INSERT INTO `data_submit` VALUES ('1970750134993747969', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:20:22', '0', '2025-09-24 15:20:22', '0', 'task-f1a0598d-557c-4ace-a2d5-c2c64e2fbbdc');
INSERT INTO `data_submit` VALUES ('1970750153834561538', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:20:26', '0', '2025-09-24 15:20:27', '0', 'task-54114e96-7ec0-404e-9c80-307983331a48');
INSERT INTO `data_submit` VALUES ('1970750174990630913', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:20:31', '0', '2025-09-24 15:20:32', '0', 'task-52f9c45c-bde4-4453-bd10-14838ee98de5');
INSERT INTO `data_submit` VALUES ('1970750189284818945', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:20:35', '0', '2025-09-24 15:20:35', '0', 'task-a1f757f6-8217-406d-8008-80e652c109fd');
INSERT INTO `data_submit` VALUES ('1970750231605346305', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:20:45', '0', '2025-09-24 15:20:45', '0', 'task-6abf77e1-0177-4b4f-872d-1e33e86ce964');
INSERT INTO `data_submit` VALUES ('1970750259392610305', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:20:51', '0', '2025-09-24 15:20:52', '0', 'task-db8e427c-504c-4a47-b18b-faa664c02519');
INSERT INTO `data_submit` VALUES ('1970750268456501249', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:20:53', '0', '2025-09-24 15:20:54', '0', 'task-994ee2a0-711d-4f3a-8e66-1d831506096b');
INSERT INTO `data_submit` VALUES ('1970750279021953025', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:20:56', '0', '2025-09-24 15:20:56', '0', 'task-561d68f9-6011-4aa3-b235-5e575ba06e6a');
INSERT INTO `data_submit` VALUES ('1970750289042145282', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:20:58', '0', '2025-09-24 15:20:59', '0', 'task-3b35e314-743d-4f51-b43e-c8eabf1ac7da');
INSERT INTO `data_submit` VALUES ('1970750300563898369', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:21:01', '0', '2025-09-24 15:21:02', '0', 'task-7f157dac-1c0a-41f1-a2b3-90d4dc4fd099');
INSERT INTO `data_submit` VALUES ('1970752118920482818', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 4, 500, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 4, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 500}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:28:15', '0', '2025-09-24 15:28:15', '0', 'task-0e5da961-4e0b-4520-9d46-b8f610352eeb');
INSERT INTO `data_submit` VALUES ('1970752126931603458', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 2, 284, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 284}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:28:17', '0', '2025-09-24 15:28:17', '0', 'task-4f78f0a1-21b3-4287-98a0-f60e9e2ac45a');
INSERT INTO `data_submit` VALUES ('1970752133910925314', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970752135995240448', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:28:18', '0', '2025-09-24 15:28:19', '0', 'task-4b6578bc-1549-49cf-a5ff-57e1aed590e0');
INSERT INTO `data_submit` VALUES ('1970752419924709378', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:29:26', '0', '2025-09-24 15:29:27', '0', 'task-f823297e-a568-4149-91a7-cd0d3bf37427');
INSERT INTO `data_submit` VALUES ('1970752690851565569', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:30:31', '0', '2025-09-24 15:30:31', '0', 'task-a12000db-dc4a-4d96-93f4-979835f8fb6c');
INSERT INTO `data_submit` VALUES ('1970752697264656385', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970752699197976576', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:30:33', '0', '2025-09-24 15:30:33', '0', 'task-e0c5ed90-9793-4cde-90fa-949935e544ca');
INSERT INTO `data_submit` VALUES ('1970753210941067265', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:32:35', '0', '2025-09-24 15:32:35', '0', 'task-4cfc40ea-8f50-4cf8-a2df-77f9fb93db31');
INSERT INTO `data_submit` VALUES ('1970753425962106881', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:33:26', '0', '2025-09-24 15:33:27', '0', 'task-2a20a43c-514b-4bd9-9300-c6b31d0ac18c');
INSERT INTO `data_submit` VALUES ('1970753435273461761', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970753437106118656', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:33:28', '0', '2025-09-24 15:33:29', '0', 'task-643a83c3-2928-4d53-bf70-6a164eeea30c');
INSERT INTO `data_submit` VALUES ('1970753541884280833', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '123', 3, 1, 6, 3328, ' error: expected unqualified-id before numeric constant\n    1 | 123\n      | ^~~\n', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"\", \"status\": \"PENDING\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 0}]', 'COMPILATION_ERROR', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:33:54', '0', '2025-09-24 15:33:54', '0', 'task-2afa428e-0414-4114-a51f-a8c15c32092b');
INSERT INTO `data_submit` VALUES ('1970753575551959041', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '// 前置代码\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n// 模板代码\r\nclass Solution {\r\npublic:\r\n    int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n};\r\n\r\n// 后置代码\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    \r\n    Solution sol;\r\n    cout << sol.add(a, b) << endl;\r\n    \r\n    return 0;\r\n}', 296, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"WRONG_ANSWER\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'WRONG_ANSWER', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:34:02', '0', '2025-09-24 15:34:02', '0', 'task-e95210dc-cafa-44fa-be2c-12505524f532');
INSERT INTO `data_submit` VALUES ('1970753802757406722', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:34:56', '0', '2025-09-24 15:34:57', '0', 'task-70bb9f8c-70d5-40be-8d89-a9bd290068ae');
INSERT INTO `data_submit` VALUES ('1970753977991237633', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:35:38', '0', '2025-09-24 15:35:38', '0', 'task-aeacf289-25bc-4e93-8f16-69a26602de89');
INSERT INTO `data_submit` VALUES ('1970753983712268290', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:35:39', '0', '2025-09-24 15:35:40', '0', 'task-ce0c589b-67f5-4f58-ab9a-93620b7fec4c');
INSERT INTO `data_submit` VALUES ('1970754005883359234', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 260, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 260}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:35:45', '0', '2025-09-24 15:35:45', '0', 'task-e5667f58-78d8-4dd2-80e1-645f9f32f0bb');
INSERT INTO `data_submit` VALUES ('1970754017954566145', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:35:47', '0', '2025-09-24 15:35:48', '0', 'task-1ccab86c-9c85-46fd-a166-dfc9b22fb707');
INSERT INTO `data_submit` VALUES ('1970754030331957250', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:35:50', '0', '2025-09-24 15:35:51', '0', 'task-0feb0a98-90ca-45e1-ac65-c1e0b119caeb');
INSERT INTO `data_submit` VALUES ('1970754041300062210', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:35:53', '0', '2025-09-24 15:35:53', '0', 'task-c7ce7dd9-3b9d-4a7e-bbc9-28e591ecba25');
INSERT INTO `data_submit` VALUES ('1970754062925893634', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:35:58', '0', '2025-09-24 15:35:59', '0', 'task-074401d0-6608-4356-b6c4-3e22a4db2002');
INSERT INTO `data_submit` VALUES ('1970755020468731906', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:39:46', '0', '2025-09-24 15:39:47', '0', 'task-253107fe-d6ac-48e5-9470-92a14e45d5e6');
INSERT INTO `data_submit` VALUES ('1970755032678350849', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970755034691362816', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:39:49', '0', '2025-09-24 15:39:50', '0', 'task-67dcd497-35d1-489e-99a4-db5a8f1d916a');
INSERT INTO `data_submit` VALUES ('1970755040945324033', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970755042849284096', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:39:51', '0', '2025-09-24 15:39:52', '0', 'task-24bb873f-f169-49eb-9e05-a3a0c2e002ff');
INSERT INTO `data_submit` VALUES ('1970755047521992706', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970755049488867328', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:39:53', '0', '2025-09-24 15:39:53', '0', 'task-23f53e38-d31c-426c-8ee1-f31f7e4f3599');
INSERT INTO `data_submit` VALUES ('1970755074214543361', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970755076235943936', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:39:59', '0', '2025-09-24 15:40:00', '0', 'task-71c95a74-8fae-426c-9143-dd272a8457b7');
INSERT INTO `data_submit` VALUES ('1970755079952351233', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970755081831145472', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:40:01', '0', '2025-09-24 15:40:01', '0', 'task-b637ffde-ef53-4b1d-9801-2640783ec2da');
INSERT INTO `data_submit` VALUES ('1970755087879585793', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970755089817100288', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:40:02', '0', '2025-09-24 15:40:03', '0', 'task-8fbc9108-8f9c-4a2f-a00c-a6a19160bf21');
INSERT INTO `data_submit` VALUES ('1970755105030094850', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970755107005358080', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:40:07', '0', '2025-09-24 15:40:07', '0', 'task-4ad098f5-84f6-4b7b-9984-f17449d125f5');
INSERT INTO `data_submit` VALUES ('1970755118212792322', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:40:10', '0', '2025-09-24 15:40:10', '0', 'task-5977550a-efe5-4045-ad7d-54b24186b2df');
INSERT INTO `data_submit` VALUES ('1970755385746472962', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:41:13', '0', '2025-09-24 15:41:14', '0', 'task-d8079a68-a0f4-449f-9d3c-fdee3df16fa7');
INSERT INTO `data_submit` VALUES ('1970755390557339649', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970755392247390208', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:41:15', '0', '2025-09-24 15:41:15', '0', 'task-8e4c9223-d739-4d33-a3ee-2fb3897f8c35');
INSERT INTO `data_submit` VALUES ('1970755822310604801', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '// 前置代码\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n// 模板代码\r\nclass Solution {\r\npublic:\r\n    int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n};\r\n\r\n// 后置代码\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    \r\n    Solution sol;\r\n    cout << sol.add(a, b) << endl;\r\n    \r\n    return 0;\r\n}', 296, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"WRONG_ANSWER\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'WRONG_ANSWER', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:42:58', '0', '2025-09-24 15:42:58', '0', 'task-767a46bf-2f3c-4681-9b35-91e8345f90a7');
INSERT INTO `data_submit` VALUES ('1970755828484620289', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '// 前置代码\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n// 模板代码\r\nclass Solution {\r\npublic:\r\n    int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n};\r\n\r\n// 后置代码\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    \r\n    Solution sol;\r\n    cout << sol.add(a, b) << endl;\r\n    \r\n    return 0;\r\n}', 296, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"WRONG_ANSWER\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'WRONG_ANSWER', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:42:59', '0', '2025-09-24 15:42:59', '0', 'task-824ca749-b0a0-4be6-9e6a-bb9c2f178eb1');
INSERT INTO `data_submit` VALUES ('1970756050950504449', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '// 前置代码\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n// 模板代码\r\nclass Solution {\r\npublic:\r\n    int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n};\r\n\r\n// 后置代码\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    \r\n    Solution sol;\r\n    cout << sol.add(a, b) << endl;\r\n    \r\n    return 0;\r\n}', 296, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"WRONG_ANSWER\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'WRONG_ANSWER', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:43:52', '0', '2025-09-24 15:43:52', '0', 'task-248e41cb-40e7-440f-a8a3-1765b1d1919a');
INSERT INTO `data_submit` VALUES ('1970756111742746626', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970756113688649728', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:44:07', '0', '2025-09-24 15:44:07', '0', 'task-0a98ec5b-90c8-4f9c-b685-b55b7ef7fd9b');
INSERT INTO `data_submit` VALUES ('1970756513976422402', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970756516408864768', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:45:42', '0', '2025-09-24 15:45:43', '0', 'task-7874413d-1eee-4e0a-b090-b587c2c89007');
INSERT INTO `data_submit` VALUES ('1970756647695028225', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 260, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 260}]', 'ACCEPTED', 0, 0.00, '1970756649796120576', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:46:14', '0', '2025-09-24 15:46:15', '0', 'task-700fe881-0e60-4294-a91d-d83dfea0da35');
INSERT INTO `data_submit` VALUES ('1970756727583936514', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:46:33', '0', '2025-09-24 15:46:34', '0', 'task-329e96ba-f85f-4e1f-b7eb-60b379ae89db');
INSERT INTO `data_submit` VALUES ('1970756807305072642', '1965337457379221506', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970756809259364352', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:46:52', '0', '2025-09-24 15:46:53', '0', 'task-b6393118-91ec-43e9-af60-b7b7dd2a4a99');
INSERT INTO `data_submit` VALUES ('1970757265931341826', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 15:48:42', '0', '2025-09-24 15:48:42', '0', 'task-f307d89c-8a98-4c02-a6ec-f4277c330018');
INSERT INTO `data_submit` VALUES ('1970757292393205762', '1965337457379221506', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970757294993420288', NULL, 'NOT_DETECTED', 0, '2025-09-24 15:48:48', '0', '2025-09-24 15:48:49', '0', 'task-bb8955ff-1a32-4ede-a129-087d02707ed3');
INSERT INTO `data_submit` VALUES ('1970762481820930049', '1965337457379221506', '', 0, '1970761938222354434', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    cout << \"This is a C program.\";\r\n    return 0;\r\n}', 112, 0, 17, 256, '', '[{\"input\": \"\", \"except\": \"This is a C program.\", \"output\": \"\", \"status\": \"MEMORY_LIMIT_EXCEEDED\", \"maxTime\": 17, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'MEMORY_LIMIT_EXCEEDED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:09:25', '0', '2025-09-24 16:09:26', '0', 'task-168e6109-56a2-4589-9850-e75ea5f45a6b');
INSERT INTO `data_submit` VALUES ('1970762546811670530', '1965337457379221506', '', 0, '1970761938222354434', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    cout << \"This is a C program.\";\r\n    return 0;\r\n}', 112, 0, 6, 476, '', '[{\"input\": \"\", \"except\": \"This is a C program.\", \"output\": \"This is a C program.\", \"status\": \"ACCEPTED\", \"maxTime\": 6, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 476}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:09:41', '0', '2025-09-24 16:09:41', '0', 'task-e172985d-67b6-47d5-a35b-d91f053f7275');
INSERT INTO `data_submit` VALUES ('1970762559910481922', '1965337457379221506', '', 0, '1970761938222354434', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    cout << \"This is a C program.\";\r\n    return 0;\r\n}', 112, 1, 1, 256, '', '[{\"input\": \"\", \"except\": \"This is a C program.\", \"output\": \"This is a C program.\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970762561923493888', NULL, 'NOT_DETECTED', 0, '2025-09-24 16:09:44', '0', '2025-09-24 16:09:44', '0', 'task-89c730d6-717e-4686-a19e-d7f607273521');
INSERT INTO `data_submit` VALUES ('1970764582856945665', '1', '', 0, '1970761938222354434', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    cout << \"This is a C program.\";\r\n    return 0;\r\n}', 112, 0, 3, 256, '', '[{\"input\": \"\", \"except\": \"This is a C program.\", \"output\": \"This is a C program.\", \"status\": \"ACCEPTED\", \"maxTime\": 3, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:17:46', '0', '2025-09-24 16:17:47', '0', 'task-8fcf8a60-4f4b-4a4f-93cb-d187fe07b58b');
INSERT INTO `data_submit` VALUES ('1970764593086853122', '1', '', 0, '1970761938222354434', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    cout << \"This is a C program.\";\r\n    return 0;\r\n}', 112, 1, 1, 256, '', '[{\"input\": \"\", \"except\": \"This is a C program.\", \"output\": \"This is a C program.\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970764595347312640', NULL, 'NOT_DETECTED', 0, '2025-09-24 16:17:49', '0', '2025-09-24 16:17:49', '0', 'task-90a02e35-d5f5-470d-bc08-3f2d42a45a68');
INSERT INTO `data_submit` VALUES ('1970767454277443585', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 3, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 3, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:29:11', '0', '2025-09-24 16:29:11', '0', 'task-ee6c33bb-576e-4092-8559-7670f77cfd53');
INSERT INTO `data_submit` VALUES ('1970767462053683202', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970767464263827456', NULL, 'NOT_DETECTED', 0, '2025-09-24 16:29:13', '0', '2025-09-24 16:29:13', '0', 'task-6d607bc3-73e1-49ea-95b3-b76a499bd662');
INSERT INTO `data_submit` VALUES ('1970768994329403393', '1', '', 0, '1970761938222354435', 'cpp', '#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    int count = 0;\r\n    for (char c : s) {\r\n        if (isalpha(c)) {\r\n            count++;\r\n        }\r\n    }\r\n    cout << count << endl;\r\n    return 0;\r\n}', 282, 0, 3, 256, '', '[{\"input\": \"124lfdk54AIEJ92854&%$GJ\", \"except\": \"10\", \"output\": \"10\\n\", \"status\": \"WRONG_ANSWER\", \"maxTime\": 3, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'WRONG_ANSWER', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:35:18', '0', '2025-09-24 16:35:19', '0', 'task-4e783a59-0fab-4cca-88cc-c4cc499ef63e');
INSERT INTO `data_submit` VALUES ('1970769011295363073', '1', '', 0, '1970761938222354435', 'cpp', '#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    int count = 0;\r\n    for (char c : s) {\r\n        if (isalpha(c)) {\r\n            count++;\r\n        }\r\n    }\r\n    cout << count << endl;\r\n    return 0;\r\n}', 282, 1, 1, 256, '', '[{\"input\": \"124lfdk54AIEJ92854&%$GJ\", \"except\": \"10\", \"output\": \"10\\n\", \"status\": \"WRONG_ANSWER\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'WRONG_ANSWER', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:35:22', '0', '2025-09-24 16:35:23', '0', 'task-16e7c211-1646-4459-a9fe-2985c97364be');
INSERT INTO `data_submit` VALUES ('1970769633692327937', '1', '', 0, '1970761938222354435', 'cpp', '#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    int count = 0;\r\n    for (char c : s) {\r\n        if (isalpha(c)) {\r\n            count++;\r\n        }\r\n    }\r\n    cout << count << endl;\r\n    return 0;\r\n}', 282, 0, 1, 256, '', '[{\"input\": \"124lfdk54AIEJ92854&%$GJ\", \"except\": \"10\", \"output\": \"10\\n\", \"status\": \"WRONG_ANSWER\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'WRONG_ANSWER', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:37:50', '0', '2025-09-24 16:37:51', '0', 'task-81db8b87-9e53-41d9-b05b-4212505d8d39');
INSERT INTO `data_submit` VALUES ('1970770393071067137', '1', '', 0, '1970761938222354435', 'cpp', '#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    int count = 0;\r\n    for (char c : s) {\r\n        if (isalpha(c)) {\r\n            count++;\r\n        }\r\n    }\r\n    cout << count << endl;\r\n    return 0;\r\n}', 282, 0, 8, 256, '', '[{\"input\": \"124lfdk54AIEJ92854&%$GJ\", \"except\": \"10\", \"output\": \"10\\n\", \"status\": \"MEMORY_LIMIT_EXCEEDED\", \"maxTime\": 8, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'MEMORY_LIMIT_EXCEEDED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:40:52', '0', '2025-09-24 16:40:52', '0', 'task-84caa70f-c620-4050-a1b2-4d2ee715ce0b');
INSERT INTO `data_submit` VALUES ('1970770418031370242', '1', '', 0, '1970761938222354435', 'cpp', '#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    int count = 0;\r\n    for (char c : s) {\r\n        if (isalpha(c)) {\r\n            count++;\r\n        }\r\n    }\r\n    cout << count << endl;\r\n    return 0;\r\n}', 282, 1, 5, 256, '', '[{\"input\": \"124lfdk54AIEJ92854&%$GJ\", \"except\": \"10\", \"output\": \"10\\n\", \"status\": \"MEMORY_LIMIT_EXCEEDED\", \"maxTime\": 5, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'MEMORY_LIMIT_EXCEEDED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:40:57', '0', '2025-09-24 16:40:58', '0', 'task-95e8f226-542d-45fe-bb1e-2e3b2d1b5d9e');
INSERT INTO `data_submit` VALUES ('1970770428487770113', '1', '', 0, '1970761938222354435', 'cpp', '#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    int count = 0;\r\n    for (char c : s) {\r\n        if (isalpha(c)) {\r\n            count++;\r\n        }\r\n    }\r\n    cout << count << endl;\r\n    return 0;\r\n}', 282, 0, 3, 256, '', '[{\"input\": \"124lfdk54AIEJ92854&%$GJ\", \"except\": \"10\", \"output\": \"10\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 3, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:41:00', '0', '2025-09-24 16:41:00', '0', 'task-65c358a2-ae94-410f-83c6-2459ca759925');
INSERT INTO `data_submit` VALUES ('1970770436964458497', '1', '', 0, '1970761938222354435', 'cpp', '#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    int count = 0;\r\n    for (char c : s) {\r\n        if (isalpha(c)) {\r\n            count++;\r\n        }\r\n    }\r\n    cout << count << endl;\r\n    return 0;\r\n}', 282, 1, 2, 256, '', '[{\"input\": \"124lfdk54AIEJ92854&%$GJ\", \"except\": \"10\", \"output\": \"10\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970770438734200832', NULL, 'NOT_DETECTED', 0, '2025-09-24 16:41:02', '0', '2025-09-24 16:41:02', '0', 'task-afd9e0b9-03f6-47b3-adda-adb80524dcfe');
INSERT INTO `data_submit` VALUES ('1970770445663444994', '1', '', 0, '1970761938222354435', 'cpp', '#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    int count = 0;\r\n    for (char c : s) {\r\n        if (isalpha(c)) {\r\n            count++;\r\n        }\r\n    }\r\n    cout << count << endl;\r\n    return 0;\r\n}', 282, 1, 1, 256, '', '[{\"input\": \"124lfdk54AIEJ92854&%$GJ\", \"except\": \"10\", \"output\": \"10\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970770447361884160', NULL, 'NOT_DETECTED', 0, '2025-09-24 16:41:04', '0', '2025-09-24 16:41:04', '0', 'task-4c5afb07-84bc-4325-ad3f-22499e8906ca');
INSERT INTO `data_submit` VALUES ('1970770584352301058', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n// 模板代码\r\nclass Solution {\r\npublic:\r\n    int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n};\r\n\r\n// 后置代码\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    \r\n    Solution sol;\r\n    cout << sol.add(a, b) << endl;\r\n    \r\n    return 0;\r\n}', 296, 0, 2, 312, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 312}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:41:37', '0', '2025-09-24 16:41:38', '0', 'task-c064e6d9-2b2c-4754-8b8e-0c1b228d30a3');
INSERT INTO `data_submit` VALUES ('1970770592950624257', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n// 模板代码\r\nclass Solution {\r\npublic:\r\n    int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n};\r\n\r\n// 后置代码\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    \r\n    Solution sol;\r\n    cout << sol.add(a, b) << endl;\r\n    \r\n    return 0;\r\n}', 296, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970770594787475456', NULL, 'NOT_DETECTED', 0, '2025-09-24 16:41:39', '0', '2025-09-24 16:41:40', '0', 'task-6054b811-3298-4a74-961b-2efec8f47c2a');
INSERT INTO `data_submit` VALUES ('1970770605151854594', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n// 模板代码\r\nclass Solution {\r\npublic:\r\n    int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n};\r\n\r\n// 后置代码\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    \r\n    Solution sol;\r\n    cout << sol.add(a, b) << endl;\r\n    \r\n    return 0;\r\n}', 296, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970770607034843136', NULL, 'NOT_DETECTED', 0, '2025-09-24 16:41:42', '0', '2025-09-24 16:41:43', '0', 'task-f31f3d24-168a-4ee0-9fc6-fd4798e460b8');
INSERT INTO `data_submit` VALUES ('1970771333916368898', '1', '', 0, '1970761938222354437', 'c', '#include <stdio.h>\r\n\r\n// 求最大公约数\r\nint hcf(int a, int b) {\r\n    while (b != 0) {\r\n        int temp = b;\r\n        b = a % b;\r\n        a = temp;\r\n    }\r\n    return a;\r\n}\r\n\r\n// 求最小公倍数\r\nint lcd(int a, int b) {\r\n    return a * b / hcf(a, b);\r\n}\r\n\r\nint main() {\r\n    int x, y;\r\n    scanf(\"%d %d\", &x, &y);\r\n    \r\n    printf(\"%d %d\\n\", hcf(x, y), lcd(x, y));\r\n    return 0;\r\n}', 367, 1, 114, 2036, '/usr/bin/ld: cannot find /tmp/judge_workspace/submissions/9483ce299f694261a86dabaf3839a785/build/Main: No such file or directory\ncollect2: error: ld returned 1 exit status\n', '[{\"input\": \"6 15\", \"except\": \"3 30\", \"output\": \"\", \"status\": \"PENDING\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 0}]', 'COMPILATION_ERROR', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:44:36', '0', '2025-09-24 16:44:36', '0', 'task-889803b7-12cc-4d4b-8efb-142c79878198');
INSERT INTO `data_submit` VALUES ('1970771364404764673', '1', '', 0, '1970761938222354437', 'cpp', '#include <stdio.h>\r\n\r\n// 求最大公约数\r\nint hcf(int a, int b) {\r\n    while (b != 0) {\r\n        int temp = b;\r\n        b = a % b;\r\n        a = temp;\r\n    }\r\n    return a;\r\n}\r\n\r\n// 求最小公倍数\r\nint lcd(int a, int b) {\r\n    return a * b / hcf(a, b);\r\n}\r\n\r\nint main() {\r\n    int x, y;\r\n    scanf(\"%d %d\", &x, &y);\r\n    \r\n    printf(\"%d %d\\n\", hcf(x, y), lcd(x, y));\r\n    return 0;\r\n}', 367, 0, 0, 256, '', '[{\"input\": \"6 15\", \"except\": \"3 30\", \"output\": \"3 30\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:44:43', '0', '2025-09-24 16:44:43', '0', 'task-3d705d0e-5f3b-4b51-b6c0-fe5b706f60b6');
INSERT INTO `data_submit` VALUES ('1970771375192514561', '1', '', 0, '1970761938222354437', 'cpp', '#include <stdio.h>\r\n\r\n// 求最大公约数\r\nint hcf(int a, int b) {\r\n    while (b != 0) {\r\n        int temp = b;\r\n        b = a % b;\r\n        a = temp;\r\n    }\r\n    return a;\r\n}\r\n\r\n// 求最小公倍数\r\nint lcd(int a, int b) {\r\n    return a * b / hcf(a, b);\r\n}\r\n\r\nint main() {\r\n    int x, y;\r\n    scanf(\"%d %d\", &x, &y);\r\n    \r\n    printf(\"%d %d\\n\", hcf(x, y), lcd(x, y));\r\n    return 0;\r\n}', 367, 1, 0, 256, '', '[{\"input\": \"6 15\", \"except\": \"3 30\", \"output\": \"3 30\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970771376345694208', NULL, 'NOT_DETECTED', 0, '2025-09-24 16:44:46', '0', '2025-09-24 16:44:46', '0', 'task-c7e318e9-b959-474d-b1a2-a5f8f5a2299a');
INSERT INTO `data_submit` VALUES ('1970771408356876290', '1', '', 0, '1970761938222354437', 'c', '#include <stdio.h>\r\n\r\n// 求最大公约数\r\nint hcf(int a, int b) {\r\n    while (b != 0) {\r\n        int temp = b;\r\n        b = a % b;\r\n        a = temp;\r\n    }\r\n    return a;\r\n}\r\n\r\n// 求最小公倍数\r\nint lcd(int a, int b) {\r\n    return a * b / hcf(a, b);\r\n}\r\n\r\nint main() {\r\n    int x, y;\r\n    scanf(\"%d %d\", &x, &y);\r\n    \r\n    printf(\"%d %d\\n\", hcf(x, y), lcd(x, y));\r\n    return 0;\r\n}', 367, 1, 119, 2032, '/usr/bin/ld: cannot find /tmp/judge_workspace/submissions/7521311f677b41cd9606a8595f8507a5/build/Main: No such file or directory\ncollect2: error: ld returned 1 exit status\n', '[{\"input\": \"6 15\", \"except\": \"3 30\", \"output\": \"\", \"status\": \"PENDING\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 0}]', 'COMPILATION_ERROR', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:44:54', '0', '2025-09-24 16:44:54', '0', 'task-d7cc594a-5081-4e8b-af1c-c5bf45d96c0a');
INSERT INTO `data_submit` VALUES ('1970771430490218497', '1', '', 0, '1970761938222354437', 'c', '#include <stdio.h>\r\n\r\n// 求最大公约数\r\nint hcf(int a, int b) {\r\n    while (b != 0) {\r\n        int temp = b;\r\n        b = a % b;\r\n        a = temp;\r\n    }\r\n    return a;\r\n}\r\n\r\n// 求最小公倍数\r\nint lcd(int a, int b) {\r\n    return a * b / hcf(a, b);\r\n}\r\n\r\nint main() {\r\n    int x, y;\r\n    scanf(\"%d %d\", &x, &y);\r\n    \r\n    printf(\"%d %d\\n\", hcf(x, y), lcd(x, y));\r\n    return 0;\r\n}', 367, 0, 129, 2024, '/usr/bin/ld: cannot find /tmp/judge_workspace/submissions/1c33215be4a041ca9da038d6248e0a0d/build/Main: No such file or directory\ncollect2: error: ld returned 1 exit status\n', '[{\"input\": \"6 15\", \"except\": \"3 30\", \"output\": \"\", \"status\": \"PENDING\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 0}]', 'COMPILATION_ERROR', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:44:59', '0', '2025-09-24 16:44:59', '0', 'task-d9f009d7-bd01-425b-a0b2-284899d1be6b');
INSERT INTO `data_submit` VALUES ('1970771446344687617', '1', '', 0, '1970761938222354437', 'cpp', '#include <stdio.h>\r\n\r\n// 求最大公约数\r\nint hcf(int a, int b) {\r\n    while (b != 0) {\r\n        int temp = b;\r\n        b = a % b;\r\n        a = temp;\r\n    }\r\n    return a;\r\n}\r\n\r\n// 求最小公倍数\r\nint lcd(int a, int b) {\r\n    return a * b / hcf(a, b);\r\n}\r\n\r\nint main() {\r\n    int x, y;\r\n    scanf(\"%d %d\", &x, &y);\r\n    \r\n    printf(\"%d %d\\n\", hcf(x, y), lcd(x, y));\r\n    return 0;\r\n}', 367, 0, 0, 256, '', '[{\"input\": \"6 15\", \"except\": \"3 30\", \"output\": \"3 30\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 16:45:03', '0', '2025-09-24 16:45:03', '0', 'task-8c2fa6b3-7173-4556-9d38-465667fc3f56');
INSERT INTO `data_submit` VALUES ('1970771454171258881', '1', '', 0, '1970761938222354437', 'cpp', '#include <stdio.h>\r\n\r\n// 求最大公约数\r\nint hcf(int a, int b) {\r\n    while (b != 0) {\r\n        int temp = b;\r\n        b = a % b;\r\n        a = temp;\r\n    }\r\n    return a;\r\n}\r\n\r\n// 求最小公倍数\r\nint lcd(int a, int b) {\r\n    return a * b / hcf(a, b);\r\n}\r\n\r\nint main() {\r\n    int x, y;\r\n    scanf(\"%d %d\", &x, &y);\r\n    \r\n    printf(\"%d %d\\n\", hcf(x, y), lcd(x, y));\r\n    return 0;\r\n}', 367, 1, 1, 256, '', '[{\"input\": \"6 15\", \"except\": \"3 30\", \"output\": \"3 30\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1970771455341215744', NULL, 'NOT_DETECTED', 0, '2025-09-24 16:45:04', '0', '2025-09-24 16:45:05', '0', 'task-cf8f05d3-d28a-4baa-a2d4-b9d712e5cb17');
INSERT INTO `data_submit` VALUES ('1970778257755971586', '1', '', 0, '1970761938222354435', 'cpp', '#include <iostream>\r\n#include <string>\r\n#include <cctype>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    int count = 0;\r\n    for (char c : s) {\r\n        if (isalpha(c)) {\r\n            count++;\r\n        }\r\n    }\r\n    cout << count << endl;\r\n    return 0;\r\n}', 282, 0, 13, 256, '', '[{\"input\": \"124lfdk54AIEJ92854&%$GJ\", \"except\": \"10\", \"output\": \"10\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 13, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-24 17:12:07', '0', '2025-09-24 17:12:08', '0', 'task-cc55305c-e971-4446-a25f-371c3f6ec6c5');
INSERT INTO `data_submit` VALUES ('1971070706306969601', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 4, 312, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 4, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 312}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 12:34:12', '0', '2025-09-25 12:34:13', '0', 'task-5adbe981-59e9-4a19-8699-ded267cec2a7');
INSERT INTO `data_submit` VALUES ('1971070721179971585', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1971070723503362048', NULL, 'NOT_DETECTED', 0, '2025-09-25 12:34:15', '0', '2025-09-25 12:34:16', '0', 'task-88bb92ba-6b61-4f26-a99a-2f285857432c');
INSERT INTO `data_submit` VALUES ('1971071944595554306', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 12:39:07', '0', '2025-09-25 12:39:08', '0', 'task-cc01279c-0acd-465d-9c3c-0666d2f15ab4');
INSERT INTO `data_submit` VALUES ('1971071953109991425', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1971071955240443904', NULL, 'NOT_DETECTED', 0, '2025-09-25 12:39:09', '0', '2025-09-25 12:39:10', '0', 'task-9c026a88-7ed7-4ecc-80af-7e0efef1f4e1');
INSERT INTO `data_submit` VALUES ('1971071963088240641', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1971071965269024768', NULL, 'NOT_DETECTED', 0, '2025-09-25 12:39:11', '0', '2025-09-25 12:39:12', '0', 'task-2cf13a90-345e-41bf-ab99-46a3ce3fea20');
INSERT INTO `data_submit` VALUES ('1971074682188427265', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 3, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 3, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 12:50:00', '0', '2025-09-25 12:50:00', '0', 'task-197a4ceb-cb8e-4121-a02a-87dc21a2b61c');
INSERT INTO `data_submit` VALUES ('1971074959578689537', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 12:51:06', '0', '2025-09-25 12:51:06', '0', 'task-9c76f069-4f2d-4f4f-821b-ebd0ac1f3da5');
INSERT INTO `data_submit` VALUES ('1971075449842487297', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 12:53:03', '0', '2025-09-25 12:53:03', '0', 'task-a4b27749-df05-4755-b11b-cce274115280');
INSERT INTO `data_submit` VALUES ('1971075752516001793', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 12:54:15', '0', '2025-09-25 12:54:15', '0', 'task-fdf64deb-2fbd-436e-baec-3748606ec0e7');
INSERT INTO `data_submit` VALUES ('1971076532644016130', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 12:57:21', '0', '2025-09-25 12:57:21', '0', 'task-becd36fb-2fe0-4f00-8923-7a6e8d3aa95e');
INSERT INTO `data_submit` VALUES ('1971077033712373762', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 2, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 12:59:20', '0', '2025-09-25 12:59:21', '0', 'task-8a2abe21-2688-42e4-9462-8744c741149a');
INSERT INTO `data_submit` VALUES ('1971077157754720258', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 12:59:50', '0', '2025-09-25 12:59:50', '0', 'task-fd2d4126-667a-4963-95ff-06a33e6634d0');
INSERT INTO `data_submit` VALUES ('1971077186749943810', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 12:59:57', '0', '2025-09-25 12:59:57', '0', 'task-e797364d-d130-4daa-b22a-3226d88b9bbb');
INSERT INTO `data_submit` VALUES ('1971077251300282370', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:00:12', '0', '2025-09-25 13:00:13', '0', 'task-f81f3eb3-4c8a-4b41-b19f-ec7238ca6131');
INSERT INTO `data_submit` VALUES ('1971077259256877058', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:00:14', '0', '2025-09-25 13:00:15', '0', 'task-c709c808-596a-4910-a6a7-7d6cbb85c8de');
INSERT INTO `data_submit` VALUES ('1971077291435577345', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:00:22', '0', '2025-09-25 13:00:22', '0', 'task-ce552c62-2cf5-434b-b6cf-60582117a2b1');
INSERT INTO `data_submit` VALUES ('1971077308607057921', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:00:26', '0', '2025-09-25 13:00:26', '0', 'task-6e62ddb9-93b3-4af6-8367-01f749f5387e');
INSERT INTO `data_submit` VALUES ('1971077725977968641', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:02:05', '0', '2025-09-25 13:02:06', '0', 'task-0f7d19f6-7016-4fa9-bc9b-2bd04b368cf5');
INSERT INTO `data_submit` VALUES ('1971077733309612034', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:02:07', '0', '2025-09-25 13:02:08', '0', 'task-b87a55cb-0623-41ea-917c-88f499e7ba4c');
INSERT INTO `data_submit` VALUES ('1971077743220752386', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:02:10', '0', '2025-09-25 13:02:10', '0', 'task-6e5e7fcf-57d4-4412-854e-5e08b2e6674f');
INSERT INTO `data_submit` VALUES ('1971077757070344194', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:02:13', '0', '2025-09-25 13:02:13', '0', 'task-cfd6ab8e-4feb-47c5-9e74-6745103cf034');
INSERT INTO `data_submit` VALUES ('1971077770194321409', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:02:16', '0', '2025-09-25 13:02:16', '0', 'task-f77e52e0-c0a1-4b1e-9d1b-4f266acdbc20');
INSERT INTO `data_submit` VALUES ('1971077775416229889', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:02:17', '0', '2025-09-25 13:02:18', '0', 'task-058b2278-d239-49b2-a3e8-2960f1a51500');
INSERT INTO `data_submit` VALUES ('1971077816210030594', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:02:27', '0', '2025-09-25 13:02:27', '0', 'task-b59a05ad-3498-4ca1-85eb-54dfcec10b43');
INSERT INTO `data_submit` VALUES ('1971077900314214401', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 260, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 260}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:02:47', '0', '2025-09-25 13:02:47', '0', 'task-7ca68f17-b0f5-409a-98d9-356ac9e5eb26');
INSERT INTO `data_submit` VALUES ('1971077908568604674', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:02:49', '0', '2025-09-25 13:02:49', '0', 'task-5f213b36-91ad-4b12-9d03-92dd5fdda1d1');
INSERT INTO `data_submit` VALUES ('1971077930647420930', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:02:54', '0', '2025-09-25 13:02:55', '0', 'task-9fc0124d-5788-4302-83fa-c07f8dcac5d2');
INSERT INTO `data_submit` VALUES ('1971077941674246146', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:02:57', '0', '2025-09-25 13:02:57', '0', 'task-e39ad0d5-bf5e-4cdf-a3f9-e6e8b869169d');
INSERT INTO `data_submit` VALUES ('1971077950150934530', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:02:59', '0', '2025-09-25 13:02:59', '0', 'task-814f52ab-835a-4a7e-95ca-b6b06f441269');
INSERT INTO `data_submit` VALUES ('1971078018811691010', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:03:15', '0', '2025-09-25 13:03:16', '0', 'task-2b43d143-d817-4b2c-b393-20c307a0167f');
INSERT INTO `data_submit` VALUES ('1971078130438897665', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:03:42', '0', '2025-09-25 13:03:42', '0', 'task-b05a69de-f635-47b4-b752-ef944d7d7c3a');
INSERT INTO `data_submit` VALUES ('1971078142610767874', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:03:45', '0', '2025-09-25 13:03:45', '0', 'task-b95a774c-a345-4dad-ad5f-127585fc55fb');
INSERT INTO `data_submit` VALUES ('1971078441215893505', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:04:56', '0', '2025-09-25 13:04:56', '0', 'task-01492a74-06ae-412d-90ec-39612640bde6');
INSERT INTO `data_submit` VALUES ('1971078447079530498', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:04:57', '0', '2025-09-25 13:04:58', '0', 'task-6ef96573-b471-4264-84c6-06e5d6781205');
INSERT INTO `data_submit` VALUES ('1971078764336676866', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:06:13', '0', '2025-09-25 13:06:13', '0', 'task-7eb85f82-e343-4548-afab-e68a505c3d91');
INSERT INTO `data_submit` VALUES ('1971078775766155265', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:06:16', '0', '2025-09-25 13:06:16', '0', 'task-c3f5aaa5-45cd-4fdb-9053-0eb440377caa');
INSERT INTO `data_submit` VALUES ('1971078785488551938', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:06:18', '0', '2025-09-25 13:06:18', '0', 'task-332c9a75-9b83-4002-86fe-9d4d1810a67e');
INSERT INTO `data_submit` VALUES ('1971078799422029825', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:06:21', '0', '2025-09-25 13:06:22', '0', 'task-2f1a3e88-9299-47ef-9c60-b539bcba6bad');
INSERT INTO `data_submit` VALUES ('1971078810104922114', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:06:24', '0', '2025-09-25 13:06:24', '0', 'task-ed19eea9-d7f5-4b14-bbff-9ffd14a9f4f8');
INSERT INTO `data_submit` VALUES ('1971078819412082689', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:06:26', '0', '2025-09-25 13:06:27', '0', 'task-6f6d8050-1bf1-44f2-bed0-78549f62cc64');
INSERT INTO `data_submit` VALUES ('1971078893693206529', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:06:44', '0', '2025-09-25 13:06:44', '0', 'task-0f42b3fe-b273-44f3-9b22-ee5723733624');
INSERT INTO `data_submit` VALUES ('1971078910780801025', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 0, 260, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 260}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:06:48', '0', '2025-09-25 13:06:48', '0', 'task-b6875ebe-34e0-49b1-b313-cd88d6854e3d');
INSERT INTO `data_submit` VALUES ('1971079199416004610', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1971079201974259712', NULL, NULL, 0, '2025-09-25 13:07:57', '0', '2025-09-25 13:07:57', '0', 'task-507450a1-185b-470b-8c62-f6daeccc8b2a');
INSERT INTO `data_submit` VALUES ('1971079208580558849', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1971079210648080384', NULL, NULL, 0, '2025-09-25 13:07:59', '0', '2025-09-25 13:07:59', '0', 'task-64c7136a-007c-4897-b029-20058328527e');
INSERT INTO `data_submit` VALUES ('1971079514089463809', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1971079516563832832', NULL, 'NOT_DETECTED', 0, '2025-09-25 13:09:12', '0', '2025-09-25 13:09:12', '0', 'task-afb37163-54b7-458a-9a7f-9d05f9778afe');
INSERT INTO `data_submit` VALUES ('1971079523446956034', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 2, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1971079525606752256', NULL, 'NOT_DETECTED', 0, '2025-09-25 13:09:14', '0', '2025-09-25 13:09:14', '0', 'task-03fceadc-ad25-484e-a562-906a6b0251f2');
INSERT INTO `data_submit` VALUES ('1971079831740882945', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1971079834064257024', NULL, NULL, 0, '2025-09-25 13:10:27', '0', '2025-09-25 13:10:28', '0', 'task-30f33c04-d809-451f-8faf-f403172c78e0');
INSERT INTO `data_submit` VALUES ('1971080356867809281', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1971080359363166208', NULL, NULL, 0, '2025-09-25 13:12:33', '0', '2025-09-25 13:12:33', '0', 'task-6f385114-c1d5-4878-b0d2-b0ad9c46a668');
INSERT INTO `data_submit` VALUES ('1971080914882207746', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1971080916945551360', NULL, NULL, 0, '2025-09-25 13:14:46', '0', '2025-09-25 13:14:46', '0', 'task-1bebf194-3984-4989-8a89-eaa0b20bb4f8');
INSERT INTO `data_submit` VALUES ('1971081375848792066', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, '1971081379032014848', NULL, NULL, 0, '2025-09-25 13:16:36', '0', '2025-09-25 13:16:36', '0', 'task-57a0f696-ccf6-4ccb-b3f8-f85fdf677a7b');
INSERT INTO `data_submit` VALUES ('1971081800782168065', '1', '', 0, '1958869993346752514', 'cpp', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 1.00, '1971081803478835200', '1971081804007587841', 'HIGHLY_SUSPECTED', 0, '2025-09-25 13:18:17', '0', '2025-09-25 13:18:17', '0', 'task-8ce2ede1-08be-491b-b912-9fcd52d8810a');
INSERT INTO `data_submit` VALUES ('1971089664145825794', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', 'class Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};', 83, 0, 302, 22300, '/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/Scrt1.o: in function `_start\':\n(.text+0x1b): undefined reference to `main\'\ncollect2: error: ld returned 1 exit status\n', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"\", \"status\": \"PENDING\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 0}]', 'COMPILATION_ERROR', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:49:32', '0', '2025-09-25 13:49:32', '0', 'task-a28e4a6e-e510-4219-8403-1af007314e14');
INSERT INTO `data_submit` VALUES ('1971089750472990721', '1', '', 0, '1958869993346752514', 'cpp', 'class Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};', 83, 0, 165, 7940, '/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/Scrt1.o: in function `_start\':\n(.text+0x1b): undefined reference to `main\'\ncollect2: error: ld returned 1 exit status\n', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"\", \"status\": \"PENDING\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 0}]', 'COMPILATION_ERROR', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:49:52', '0', '2025-09-25 13:49:52', '0', 'task-6e035e1a-6661-4452-a3d3-a8135f219e7b');
INSERT INTO `data_submit` VALUES ('1971090362577133570', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 10, 500, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"TIME_LIMIT_EXCEEDED\", \"maxTime\": 10, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 500}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 276}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'TIME_LIMIT_EXCEEDED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:52:18', '0', '2025-09-25 13:52:19', '0', 'task-736312a4-7b1e-4599-9fa6-ec8e2d64db4c');
INSERT INTO `data_submit` VALUES ('1971090376254758913', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 2, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971090378469097472', '1971090379333378051', 'NOT_REACHED', 0, '2025-09-25 13:52:21', '0', '2025-09-25 13:52:22', '0', 'task-e62c2488-5264-48c2-9f15-a2a3eb0d6f74');
INSERT INTO `data_submit` VALUES ('1971090389538119682', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971090391806984192', '1971090391983398914', 'NOT_REACHED', 0, '2025-09-25 13:52:25', '0', '2025-09-25 13:52:25', '0', 'task-ceb84184-e9bc-40df-8d89-480b04e01b80');
INSERT INTO `data_submit` VALUES ('1971090581796626433', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 2, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:53:10', '0', '2025-09-25 13:53:11', '0', 'task-4aee7c30-ffdd-4547-a61c-6d151565d24b');
INSERT INTO `data_submit` VALUES ('1971090593872027649', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971090595771793408', '1971090595918848001', 'NOT_REACHED', 0, '2025-09-25 13:53:13', '0', '2025-09-25 13:53:14', '0', 'task-ac1bb987-370a-4258-ad01-e9c3d78ef472');
INSERT INTO `data_submit` VALUES ('1971090740882382849', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 1, 360, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"15\", \"output\": \"16\\n\", \"status\": \"WRONG_ANSWER\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 360}]', 'PARTIAL_ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:53:48', '0', '2025-09-25 13:53:49', '0', 'task-785e59b7-205c-47df-bd41-602b88921d40');
INSERT INTO `data_submit` VALUES ('1971090752253140993', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 2, 260, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"15\", \"output\": \"16\\n\", \"status\": \"WRONG_ANSWER\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 260}]', 'PARTIAL_ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:53:51', '0', '2025-09-25 13:53:52', '0', 'task-93a44f22-a790-47a1-90ea-41a2c7db7a92');
INSERT INTO `data_submit` VALUES ('1971092202941259778', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 4, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 4, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 3, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:59:37', '0', '2025-09-25 13:59:38', '0', 'task-ccff6534-a951-4173-a16c-794b8c19f76a');
INSERT INTO `data_submit` VALUES ('1971092216333672449', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 3, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 3, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:59:40', '0', '2025-09-25 13:59:41', '0', 'task-1fc2f9a4-d3a2-401a-b956-ab9db2e15186');
INSERT INTO `data_submit` VALUES ('1971092227985448961', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 260, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 260}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971092230325616640', '1971092230590111745', 'NOT_REACHED', 0, '2025-09-25 13:59:43', '0', '2025-09-25 13:59:43', '0', 'task-382e0655-8f19-47e3-a431-7d0817a0071f');
INSERT INTO `data_submit` VALUES ('1971092238508957697', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 2, 272, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 260}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 272}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:59:45', '0', '2025-09-25 13:59:46', '0', 'task-6d76ad88-f485-4bf7-b235-1350d89c950c');
INSERT INTO `data_submit` VALUES ('1971092245769297922', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 13:59:47', '0', '2025-09-25 13:59:48', '0', 'task-b24f949a-a1d0-42b4-b5d3-f0807c4be536');
INSERT INTO `data_submit` VALUES ('1971093440172822529', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 14:04:32', '0', '2025-09-25 14:04:33', '0', 'task-270632e1-aef6-47f2-8513-3b3298ede4ff');
INSERT INTO `data_submit` VALUES ('1971093509164929025', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 2, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971093511853223936', '1971093512583286785', 'NOT_REACHED', 0, '2025-09-25 14:04:48', '0', '2025-09-25 14:04:49', '0', 'task-95e8a448-6eba-4640-b3b4-8efc0195543a');
INSERT INTO `data_submit` VALUES ('1971093521026420737', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971093523148484608', '1971093523287150594', 'NOT_REACHED', 0, '2025-09-25 14:04:51', '0', '2025-09-25 14:04:52', '0', 'task-8e7e2c86-bca1-4369-9e71-f58341830627');
INSERT INTO `data_submit` VALUES ('1971094093985120257', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 2, 272, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 272}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 14:07:08', '0', '2025-09-25 14:07:08', '0', 'task-9768d767-8b7a-4031-8407-f249da8249e6');
INSERT INTO `data_submit` VALUES ('1971094104219222017', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971094106655858688', '1971094107788574722', 'NOT_REACHED', 0, '2025-09-25 14:07:10', '0', '2025-09-25 14:07:11', '0', 'task-b3f57175-7f1a-4050-9175-9bf60dc6b13a');
INSERT INTO `data_submit` VALUES ('1971094125811499009', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 2, 276, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 276}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971094128113917952', '1971094128277749762', 'NOT_REACHED', 0, '2025-09-25 14:07:15', '0', '2025-09-25 14:07:16', '0', 'task-055f8516-18c0-4d71-b09f-34fca398ccef');
INSERT INTO `data_submit` VALUES ('1971094367474753538', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 14:08:13', '0', '2025-09-25 14:08:14', '0', 'task-58e89120-0b6d-40ab-8b14-4c367abbb106');
INSERT INTO `data_submit` VALUES ('1971094376924520449', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971094379235328000', '1971094380317712386', 'NOT_REACHED', 0, '2025-09-25 14:08:15', '0', '2025-09-25 14:08:16', '0', 'task-e4525e4c-d5e8-40d7-84a5-33f0ed241ea0');
INSERT INTO `data_submit` VALUES ('1971094386621751297', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 264, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 264}]', 'ACCEPTED', 0, 0.40, '1971094388785758208', '1971094388924424194', 'NOT_REACHED', 0, '2025-09-25 14:08:18', '0', '2025-09-25 14:08:18', '0', 'task-71e2ac7e-0ab6-4175-9e6f-54dabb827d97');
INSERT INTO `data_submit` VALUES ('1971094410290208770', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971094412655542272', '1971094412798402561', 'NOT_REACHED', 0, '2025-09-25 14:08:23', '0', '2025-09-25 14:08:24', '0', 'task-36d2df7e-7f18-4417-998b-d66a080c5330');
INSERT INTO `data_submit` VALUES ('1971094717833326594', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 1, 272, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 272}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 14:09:37', '0', '2025-09-25 14:09:37', '0', 'task-5992c851-726e-4448-b5af-47a00862cd27');
INSERT INTO `data_submit` VALUES ('1971094727144681474', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971094729556152320', '1971094730474958849', 'NOT_REACHED', 0, '2025-09-25 14:09:39', '0', '2025-09-25 14:09:39', '0', 'task-56b0444e-00ad-483a-b6e3-09d8b38b1f97');
INSERT INTO `data_submit` VALUES ('1971094738653851650', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971094741014990848', '1971094741174628355', 'NOT_REACHED', 0, '2025-09-25 14:09:42', '0', '2025-09-25 14:09:42', '0', 'task-8d0d01da-f9fd-4183-bd8e-fb075385f98a');
INSERT INTO `data_submit` VALUES ('1971094747742908418', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 444, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 444}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 260}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971094749806252032', '1971094749986861058', 'NOT_REACHED', 0, '2025-09-25 14:09:44', '0', '2025-09-25 14:09:44', '0', 'task-09b3c722-0de5-4325-a02d-850cdc8db9c9');
INSERT INTO `data_submit` VALUES ('1971094756668387329', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 260, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 260}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971094758719148032', '1971094758866202626', 'NOT_REACHED', 0, '2025-09-25 14:09:46', '0', '2025-09-25 14:09:46', '0', 'task-5d4f6259-f51e-4b1f-b27a-78f83b5e5b2a');
INSERT INTO `data_submit` VALUES ('1971095233015521281', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 260, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 260}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971095236198744064', '1971095237180465153', 'NOT_REACHED', 0, '2025-09-25 14:11:39', '0', '2025-09-25 14:11:40', '0', 'task-4dee9102-bbcf-4bb4-8c5e-c2714c22fb68');
INSERT INTO `data_submit` VALUES ('1971095245925588994', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 260, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 260}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971095248374808576', '1971095248588972034', 'NOT_REACHED', 0, '2025-09-25 14:11:42', '0', '2025-09-25 14:11:43', '0', 'task-af720115-409c-4423-b3d6-7c77f0c184d9');
INSERT INTO `data_submit` VALUES ('1971095254544883713', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 2, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971095256713084928', '1971095256906276866', 'NOT_REACHED', 0, '2025-09-25 14:11:45', '0', '2025-09-25 14:11:45', '0', 'task-2ab7e24d-2ccf-4ffc-bd21-c7edda390734');
INSERT INTO `data_submit` VALUES ('1971095261398376450', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971095263604326400', '1971095263755575299', 'NOT_REACHED', 0, '2025-09-25 14:11:46', '0', '2025-09-25 14:11:47', '0', 'task-ae786018-2ed8-419d-9827-98966eb5928c');
INSERT INTO `data_submit` VALUES ('1971095279039619074', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 0, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 14:11:50', '0', '2025-09-25 14:11:51', '0', 'task-ea5cc380-0abf-46d8-a2d9-65f4b5532edf');
INSERT INTO `data_submit` VALUES ('1971095290431348737', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971095292603744256', '1971095292792741890', 'NOT_REACHED', 0, '2025-09-25 14:11:53', '0', '2025-09-25 14:11:54', '0', 'task-c4704ebb-b4ee-4843-83b8-b45ca80b0dbb');
INSERT INTO `data_submit` VALUES ('1971096355625181186', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 3, 260, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 3, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 260}]', 'ACCEPTED', 0, 0.40, '1971096358762266624', '1971096358913515521', 'NOT_REACHED', 0, '2025-09-25 14:16:07', '0', '2025-09-25 14:16:08', '0', 'task-c0934816-74d8-418a-b3e5-25974ae27b08');
INSERT INTO `data_submit` VALUES ('1971098565595570177', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 268, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 268}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'ACCEPTED', 0, 0.40, '1971098567952515072', '1971098568074403842', 'NOT_REACHED', 0, '2025-09-25 14:24:54', '0', '2025-09-25 14:24:54', '0', 'task-91c6f163-0804-46d5-81ff-70d5987cea06');
INSERT INTO `data_submit` VALUES ('1971098574760124417', '1', '', 0, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 1, 304, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 0, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 304}]', 'ACCEPTED', 0, 0.40, '1971098576903159808', '1971098577029242881', 'NOT_REACHED', 0, '2025-09-25 14:24:56', '0', '2025-09-25 14:24:57', '0', 'task-7e000b11-f345-42e3-b895-e910d23059ae');
INSERT INTO `data_submit` VALUES ('1971106807516188674', '1', '1950817439404732418', 1, '1958869993346752514', 'cpp', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, 1, 5, 256, '', '[{\"input\": \"1 2\", \"except\": \"3\", \"output\": \"3\\n\", \"status\": \"TIME_LIMIT_EXCEEDED\", \"maxTime\": 5, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"2 4\", \"except\": \"6\", \"output\": \"6\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"4 5\", \"except\": \"9\", \"output\": \"9\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"11 11\", \"except\": \"22\", \"output\": \"22\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 2, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"7 7\", \"except\": \"14\", \"output\": \"14\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}, {\"input\": \"8 8\", \"except\": \"16\", \"output\": \"16\\n\", \"status\": \"ACCEPTED\", \"maxTime\": 1, \"message\": \"\", \"exitCode\": 0, \"maxMemory\": 256}]', 'TIME_LIMIT_EXCEEDED', 0, 0.00, NULL, NULL, NULL, 0, '2025-09-25 14:57:39', '0', '2025-09-25 14:57:40', '0', 'task-593c6cb9-2548-42a0-b4fe-dec734439b77');

-- ----------------------------
-- Table structure for sys_article
-- ----------------------------
DROP TABLE IF EXISTS `sys_article`;
CREATE TABLE `sys_article`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '标题',
  `subtitle` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '子标题',
  `cover` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '封面',
  `author` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '作者',
  `summary` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '摘要',
  `sort` tinyint NULL DEFAULT 99 COMMENT '排序',
  `to_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '链接',
  `parent_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT '0' COMMENT '父级',
  `type` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT '0' COMMENT '类型',
  `category` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT '0' COMMENT '分类',
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '内容',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '系统文章表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_article
-- ----------------------------
INSERT INTO `sys_article` VALUES ('1949071034235375617', '123123', '123123', 'http://localhost:29093/core/api/v1/sys/file/1735f800-f1b4-4311-be42-dc18072b529d.png', '123123', '123123', 3, '123123', '123123', '123123', '123123', '123123123123\n### 测试', 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_article` VALUES ('1949073855919902721', '测试', '测试测试', 'http://localhost:29093/core/api/v1/sys/file/5a82b6c0-5024-444e-ba0a-573f915f8472.png', '测试测试', '测试测试', 2, '123123', '1949071034235375617', '123', '123123', 'asdfasf\n\n测试\n\n\n测试', 0, NULL, NULL, NULL, NULL);

-- ----------------------------
-- Table structure for sys_banner
-- ----------------------------
DROP TABLE IF EXISTS `sys_banner`;
CREATE TABLE `sys_banner`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '标题',
  `banner` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '横幅',
  `button_text` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '按钮文字',
  `to_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '链接',
  `sort` tinyint NULL DEFAULT 99 COMMENT '排序',
  `subtitle` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '子标题',
  `is_visible` tinyint(1) NULL DEFAULT 1 COMMENT '是否可见',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '横幅表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_banner
-- ----------------------------
INSERT INTO `sys_banner` VALUES ('1951824107190042625', 'CODE | COMPETE | CONQUER', 'http://localhost:93/oj/api/v1/sys/file/01127f81-b00f-422e-a342-f5e45de982e3.jpg', '开始练习', '/', 2, '你的每一行代码，都在塑造未来', 1, 0, NULL, NULL, '2025-09-25 14:40:50', '1');
INSERT INTO `sys_banner` VALUES ('1969565565128974337', '123123', 'http://localhost:93/oj/api/v1/sys/file/aabf1177-292a-49f6-9960-b05034022423.jpg', '123123', '123123', 1, '1234123', 0, 0, '2025-09-21 08:53:18', '1965337457379221506', '2025-09-21 08:53:35', '1965337457379221506');
INSERT INTO `sys_banner` VALUES ('1969565831643439105', '啦啦啦', 'http://localhost:93/oj/api/v1/sys/file/bf7b6950-769a-4253-9501-c8124cccb1fa.png', 'asdasd', 'http://localhost:8848/nacos/#/configeditor?serverId=center&dataId=astro-code-common.yaml&group=DEFAULT_GROUP&namespace=&edasAppName=&edasAppId=&searchDataId=&searchGroup=&pageSize=10&pageNo=1', 1, 'nacos', 0, 0, '2025-09-21 08:54:22', '1965337457379221506', '2025-09-25 14:41:07', '1');

-- ----------------------------
-- Table structure for sys_category
-- ----------------------------
DROP TABLE IF EXISTS `sys_category`;
CREATE TABLE `sys_category`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '名称',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '分类表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_category
-- ----------------------------
INSERT INTO `sys_category` VALUES ('0', '未分类', 0, '2025-08-29 19:56:54', '0', '2025-08-29 19:56:58', '0');
INSERT INTO `sys_category` VALUES ('1961378237393260546', '枚举/暴力', 0, '2025-08-29 18:39:47', '0', '2025-08-29 18:39:47', '0');
INSERT INTO `sys_category` VALUES ('1961378253524553729', '模拟', 0, '2025-08-29 18:39:51', '0', '2025-08-29 18:39:51', '0');
INSERT INTO `sys_category` VALUES ('1961378267390922753', '递归', 0, '2025-08-29 18:39:54', '0', '2025-08-29 18:39:54', '0');
INSERT INTO `sys_category` VALUES ('1961378286730858498', '分治', 0, '2025-08-29 18:39:59', '0', '2025-08-29 18:39:59', '0');
INSERT INTO `sys_category` VALUES ('1961378343525928961', '贪心', 0, '2025-08-29 18:40:12', '0', '2025-08-29 18:40:12', '0');
INSERT INTO `sys_category` VALUES ('1961378358273101825', '排序', 0, '2025-08-29 18:40:16', '0', '2025-08-29 18:40:16', '0');
INSERT INTO `sys_category` VALUES ('1961378372210774018', '二分查找', 0, '2025-08-29 18:40:19', '0', '2025-08-29 18:40:19', '0');
INSERT INTO `sys_category` VALUES ('1961378393635278849', '动态规划', 0, '2025-08-29 18:40:24', '0', '2025-08-29 18:40:24', '0');
INSERT INTO `sys_category` VALUES ('1961378407564562433', '搜索', 0, '2025-08-29 18:40:28', '0', '2025-08-29 18:40:28', '0');
INSERT INTO `sys_category` VALUES ('1961378431908302850', '线性结构', 0, '2025-08-29 18:40:33', '0', '2025-08-29 18:40:33', '0');
INSERT INTO `sys_category` VALUES ('1961378454280720385', '树形结构', 0, '2025-08-29 18:40:39', '0', '2025-08-29 18:40:39', '0');
INSERT INTO `sys_category` VALUES ('1961378475042525185', '图结构', 0, '2025-08-29 18:40:44', '0', '2025-08-29 18:40:44', '0');
INSERT INTO `sys_category` VALUES ('1961378497263947777', '字符串相关结构', 0, '2025-08-29 18:40:49', '0', '2025-08-29 18:40:49', '0');
INSERT INTO `sys_category` VALUES ('1961378518076084226', '数论', 0, '2025-08-29 18:40:54', '0', '2025-08-29 18:40:54', '0');
INSERT INTO `sys_category` VALUES ('1961378538779168770', '组合数学', 0, '2025-08-29 18:40:59', '0', '2025-08-29 18:40:59', '0');
INSERT INTO `sys_category` VALUES ('1961378602398371841', '计算几何', 0, '2025-08-29 18:41:14', '0', '2025-08-29 18:41:14', '0');
INSERT INTO `sys_category` VALUES ('1961378620748451841', '博弈论', 0, '2025-08-29 18:41:18', '0', '2025-08-29 18:41:18', '0');
INSERT INTO `sys_category` VALUES ('1961378637034934274', '概率与期望', 0, '2025-08-29 18:41:22', '0', '2025-08-29 18:41:22', '0');
INSERT INTO `sys_category` VALUES ('1961378653535326209', '矩阵运算与快速幂', 0, '2025-08-29 18:41:26', '0', '2025-08-29 18:41:26', '0');
INSERT INTO `sys_category` VALUES ('1961378680622141441', '背包问题', 0, '2025-08-29 18:41:33', '0', '2025-08-29 18:41:33', '0');
INSERT INTO `sys_category` VALUES ('1961378694870192129', '区间问题', 0, '2025-08-29 18:41:36', '0', '2025-08-29 18:41:36', '0');
INSERT INTO `sys_category` VALUES ('1961378709432815618', '状态压缩问题', 0, '2025-08-29 18:41:40', '0', '2025-08-29 18:41:40', '0');
INSERT INTO `sys_category` VALUES ('1961378723383070722', '字符串匹配与处理问题', 0, '2025-08-29 18:41:43', '0', '2025-08-29 18:41:43', '0');
INSERT INTO `sys_category` VALUES ('1961378745700962305', '“滑动窗口”问题', 0, '2025-08-29 18:41:48', '0', '2025-08-29 18:41:48', '0');
INSERT INTO `sys_category` VALUES ('1961378761408630786', '“双指针”问题', 0, '2025-08-29 18:41:52', '0', '2025-08-29 18:41:52', '0');
INSERT INTO `sys_category` VALUES ('1961378779754516481', '“前缀和与差分”问题', 0, '2025-08-29 18:41:56', '0', '2025-08-29 18:41:56', '0');
INSERT INTO `sys_category` VALUES ('1961378793243398145', '“扫描线”问题', 0, '2025-08-29 18:42:00', '0', '2025-08-29 18:42:00', '0');
INSERT INTO `sys_category` VALUES ('1961378807059435521', '“最长上升子序列”及其变种', 0, '2025-08-29 18:42:03', '0', '2025-08-29 18:42:03', '0');
INSERT INTO `sys_category` VALUES ('1961378822477697026', '“编辑距离”问题', 0, '2025-08-29 18:42:07', '0', '2025-08-29 18:42:07', '0');
INSERT INTO `sys_category` VALUES ('1961378843432439809', '“股票买卖”系列问题', 0, '2025-08-29 18:42:12', '0', '2025-08-29 18:42:12', '0');
INSERT INTO `sys_category` VALUES ('1961378858808758273', '“打家劫舍”系列问题', 0, '2025-08-29 18:42:15', '0', '2025-08-29 18:42:15', '0');

-- ----------------------------
-- Table structure for sys_config
-- ----------------------------
DROP TABLE IF EXISTS `sys_config`;
CREATE TABLE `sys_config`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '名称',
  `code` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '编码',
  `value` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '值',
  `component_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '组件类型',
  `description` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '描述',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  `config_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '配置分类',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '系统配置表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_config
-- ----------------------------
INSERT INTO `sys_config` VALUES ('1', '登录页面背景图片', 'APP_ADMIN_LOGIN_BACKGROUND', 'https://upload-bbs.miyoushe.com/upload/2024/03/14/357876319/f8a88a9f5352bad40f3b73eae3efe44d_5745237405008366088.jpeg', NULL, '登录页面背景图片', 0, NULL, NULL, '2025-09-24 23:05:07', '1', '背景图片');
INSERT INTO `sys_config` VALUES ('1963512481739116546', 'Web应用端登录背景', 'APP_PC_LOGIN_BACKGROUND', 'https://upload-bbs.miyoushe.com/upload/2024/07/11/292762008/54cbcd3b61a7d6cc4b194d5c48236b4a_8421561160147429361.jpg', '', 'Web应用端登录背景', 0, '2025-09-04 16:00:31', '1', '2025-09-24 23:05:27', '1', '背景图片');
INSERT INTO `sys_config` VALUES ('1963512807934332929', 'Web应用端注册背景', 'APP_PC_REGISTER_BACKGROUND', 'https://upload-bbs.miyoushe.com/upload/2024/07/09/247364438/dbeba8ef3d93a4b86b74c080010e3f5e_8407127069598351562.jpg', '', 'Web应用端注册背景', 0, '2025-09-04 16:01:48', '1', '2025-09-24 23:05:38', '1', '背景图片');
INSERT INTO `sys_config` VALUES ('1963513506948648961', 'Web应用端显示名称还是Logo', 'APP_PC_SHOW_APP_NAME', 'false', '', 'false 显示 Logo，true 显示 名称', 0, '2025-09-04 16:04:35', '1', '2025-09-24 23:05:52', '1', '系统图标');
INSERT INTO `sys_config` VALUES ('1963796948567355394', '近期样本数量', 'APP_DEFAULT_SAMPLE_SIZE_RECENT', '100', '', '', 0, '2025-09-05 10:50:53', '1', '2025-09-24 23:06:02', '1', '相似检测');
INSERT INTO `sys_config` VALUES ('1963797339006726146', '最低样本数量限制', 'APP_DEFAULT_SAMPLE_SIZE_MIN', '50', '', '', 0, '2025-09-05 10:52:26', '1', '2025-09-24 23:06:15', '1', '相似检测');
INSERT INTO `sys_config` VALUES ('1963808673328951297', '检测精度', 'APP_DEFAULT_MATCH_LENGTH', '10', '', '', 0, '2025-09-05 11:37:28', '1', '2025-09-24 23:06:25', '1', '相似检测');
INSERT INTO `sys_config` VALUES ('2', '应用logo', 'APP_LOGO', 'https://i.bobopic.com/tx_bobopic/116176101_touxiang_bobopic.jpg', NULL, '应用logo', 0, NULL, NULL, '2025-09-24 23:06:36', '1', '系统图标');
INSERT INTO `sys_config` VALUES ('3', '应用名称', 'APP_NAME', 'Astro Code', NULL, '应用名称', 0, NULL, NULL, '2025-09-24 23:06:46', '1', '系统图标');
INSERT INTO `sys_config` VALUES ('4', '管理页面显示名称还是Logo', 'APP_ADMIN_SHOW_APP_NAME', 'false', NULL, 'false 显示 Logo，true 显示 名称', 0, NULL, NULL, '2025-09-24 23:06:56', '1', '系统图标');

-- ----------------------------
-- Table structure for sys_dict
-- ----------------------------
DROP TABLE IF EXISTS `sys_dict`;
CREATE TABLE `sys_dict`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '主键ID',
  `dict_type` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '字典类型',
  `type_label` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '类型名称',
  `dict_value` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '字典值',
  `dict_label` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '字典标签',
  `sort_order` int NULL DEFAULT 0 COMMENT '排序',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_type_code`(`dict_type` ASC, `dict_value` ASC) USING BTREE COMMENT '类型和编码唯一索引'
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '系统字典表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_dict
-- ----------------------------
INSERT INTO `sys_dict` VALUES ('1', 'SYS_GENDER', '性别', '0', '未知', 0, 0, '2025-07-27 06:35:00', '1', NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949386814273540097', 'PROBLEM_DIFFICULTY', '难度', '1', '简单', 1, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949387747678171138', 'PROBLEM_DIFFICULTY', '难度', '2', '中等', 2, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949387822563274754', 'PROBLEM_DIFFICULTY', '难度', '3', '困难', 3, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949389559521005569', 'ALLOW_LANGUAGE', '开放语言', 'java', 'Java', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949389612713168898', 'ALLOW_LANGUAGE', '开放语言', 'cpp', 'Cpp', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949389698243416065', 'ALLOW_LANGUAGE', '开放语言', 'golang', 'Golang', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949389728094277634', 'ALLOW_LANGUAGE', '开放语言', 'c', 'C', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949389906322837505', 'ALLOW_LANGUAGE', '开放语言', 'python', 'Python', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949640044622639105', 'YES_NO', '是否', 'true', '是', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949640252018388993', 'YES_NO', '是否', 'false', '否', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949671004755980290', 'SUBMIT_TYPE', '执行类型', 'false', '运行', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949671066571632641', 'SUBMIT_TYPE', '执行类型', 'true', '提交', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949688687626977282', 'PROBLEM_SET_TYPE', '题集类型', '1', '常规题集', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1949688825984483330', 'PROBLEM_SET_TYPE', '题集类型', '2', '限时题集', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1950883784481759233', 'JUDGE_STATUS', '判题状态', 'ACCEPTED', '答案正确', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951195542354329602', 'JUDGE_STATUS', '判题状态', 'PENDING', '等待判题', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951195583638863874', 'JUDGE_STATUS', '判题状态', 'JUDGING', '判题中', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951195620687151105', 'JUDGE_STATUS', '判题状态', 'COMPILING', '编译中', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951195658800791554', 'JUDGE_STATUS', '判题状态', 'RUNNING', '运行中', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951195722818453506', 'JUDGE_STATUS', '判题状态', 'WRONG_ANSWER', '答案错误', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951195774957846529', 'JUDGE_STATUS', '判题状态', 'TIME_LIMIT_EXCEEDED', '时间超出限制', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951195824698097666', 'JUDGE_STATUS', '判题状态', 'MEMORY_LIMIT_EXCEEDED', '内存超出限制', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951195861415034882', 'JUDGE_STATUS', '判题状态', 'RUNTIME_ERROR', '运行时错误', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951195903551012865', 'JUDGE_STATUS', '判题状态', 'COMPILATION_ERROR', '编译错误', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951195947666702337', 'JUDGE_STATUS', '判题状态', 'PRESENTATION_ERROR', '格式错误', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951195992495423489', 'JUDGE_STATUS', '判题状态', 'OUTPUT_LIMIT_EXCEEDED', '输出超出限制', 0, 1, NULL, NULL, '2025-09-24 21:04:50', '1965337457379221506');
INSERT INTO `sys_dict` VALUES ('1951196106874093570', 'JUDGE_STATUS', '判题状态', 'PARTIAL_ACCEPTED', '部分正确', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951196145809817601', 'JUDGE_STATUS', '判题状态', 'SYSTEM_ERROR', '系统错误', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951196241905516546', 'JUDGE_STATUS', '判题状态', 'REJUDGING', '重新判题中', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1951196276516913154', 'JUDGE_STATUS', '判题状态', 'UNKNOWN_ERROR', '未知错误', 0, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_dict` VALUES ('1954009065375625218', 'JUDGE_STATUS', '判题状态', 'COMPILED_OK', '编译成功', 0, 0, '2025-08-09 10:37:20', '1', '2025-08-09 10:37:20', '1');
INSERT INTO `sys_dict` VALUES ('1963850874083848194', 'CLONE_LEVEL', '相似等级', 'HIGHLY_SUSPECTED', '高度可疑', 0, 0, '2025-09-05 14:25:10', '1', '2025-09-05 14:25:10', '1');
INSERT INTO `sys_dict` VALUES ('1963851262937772034', 'CLONE_LEVEL', '相似等级', 'MEDIUM_SUSPECTED', '中度可疑', 0, 0, '2025-09-05 14:26:42', '1', '2025-09-05 14:26:42', '1');
INSERT INTO `sys_dict` VALUES ('1963851317014933505', 'CLONE_LEVEL', '相似等级', 'LOW_SUSPECTED', '轻度可疑', 0, 0, '2025-09-05 14:26:55', '1', '2025-09-05 14:26:55', '1');
INSERT INTO `sys_dict` VALUES ('1963851373667397634', 'CLONE_LEVEL', '相似等级', 'NOT_REACHED', '未达阈值', 0, 0, '2025-09-05 14:27:09', '1', '2025-09-05 14:27:09', '1');
INSERT INTO `sys_dict` VALUES ('1963876843167334401', 'CLONE_LEVEL', '相似等级', 'NOT_DETECTED', '未检测', 0, 0, '2025-09-05 16:08:21', '1', '2025-09-05 16:08:21', '1');
INSERT INTO `sys_dict` VALUES ('1970841457780269058', 'MENU_TYPE', '菜单类型', '0', '目录', 0, 0, '2025-09-24 21:23:15', '1965337457379221506', '2025-09-24 21:23:15', '1965337457379221506');
INSERT INTO `sys_dict` VALUES ('1970841583638749185', 'MENU_TYPE', '菜单类型', '1', '菜单', 0, 0, '2025-09-24 21:23:45', '1965337457379221506', '2025-09-24 21:23:45', '1965337457379221506');
INSERT INTO `sys_dict` VALUES ('2', 'SYS_GENDER', '性别', '1', '男', 1, 0, '2025-07-27 06:35:00', '1', NULL, NULL);
INSERT INTO `sys_dict` VALUES ('3', 'SYS_GENDER', '性别', '2', '女', 2, 0, '2025-07-27 06:35:00', '1', NULL, NULL);

-- ----------------------------
-- Table structure for sys_group
-- ----------------------------
DROP TABLE IF EXISTS `sys_group`;
CREATE TABLE `sys_group`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '用户组',
  `parent_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '父级用户组',
  `name` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '名称',
  `code` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '编码',
  `description` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '描述',
  `sort` tinyint NULL DEFAULT 99 COMMENT '排序',
  `admin_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '负责人',
  `group_type` tinyint(1) NULL DEFAULT 0 COMMENT '系统组',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `idx_group_code`(`code` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '用户组表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_group
-- ----------------------------
INSERT INTO `sys_group` VALUES ('0', '0', '默认用户组', 'USER_GROUP', '默认用户组', 99, '1', 0, 0, '2025-09-04 01:19:25', '1', '2025-09-04 16:20:53', '1');
INSERT INTO `sys_group` VALUES ('1', '0', '超级管理员组', 'SUPER_GROUP', '超级管理员组', 99, '1', 0, 0, '2025-09-04 01:19:25', '1', '2025-09-04 16:20:58', '1');
INSERT INTO `sys_group` VALUES ('2', '1', '管理员组', 'ADMIN_GROUP', '管理员组', 99, '1', 0, 0, '2025-09-04 01:19:25', '1', '2025-09-04 16:21:02', '1');

-- ----------------------------
-- Table structure for sys_menu
-- ----------------------------
DROP TABLE IF EXISTS `sys_menu`;
CREATE TABLE `sys_menu`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '菜单ID',
  `pid` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT '0' COMMENT '父菜单ID',
  `name` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '菜单名称（英文标识）',
  `path` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '路由路径',
  `component_path` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '组件路径',
  `title` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '菜单标题',
  `icon` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '图标',
  `keep_alive` tinyint(1) NULL DEFAULT 0 COMMENT '是否缓存',
  `visible` tinyint(1) NULL DEFAULT 1 COMMENT '是否可见',
  `sort` int NULL DEFAULT 0 COMMENT '排序',
  `pined` tinyint(1) NULL DEFAULT 0 COMMENT '是否固定',
  `menu_type` int NULL DEFAULT 0 COMMENT '菜单类型：0-目录，1-菜单',
  `ex_json` json NULL COMMENT '额外信息',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '菜单表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_menu
-- ----------------------------
INSERT INTO `sys_menu` VALUES ('1', '0', 'home', '/index', '/workbench/index.vue', '首页', 'icon-park-outline:home', 0, 1, 1, 1, 1, '[]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:12:11', '1');
INSERT INTO `sys_menu` VALUES ('100', '0', 'content_index', '/content', NULL, '内容管理', 'icon-park-outline:setting-config', 0, 1, 3, 0, 0, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:16:29', '1');
INSERT INTO `sys_menu` VALUES ('10019', '0', 'system_index', '/system', NULL, '系统管理', 'icon-park-outline:setting-config', 0, 1, 4, 0, 0, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:16:57', '1');
INSERT INTO `sys_menu` VALUES ('101', '100', 'banner', '/content/banner', '/modular/sys/banner/index.vue', '横幅管理', 'icon-park-outline:ad-product', 0, 1, 1, 0, 1, '[\"/sys/banner/add\", \"/sys/banner/delete\", \"/sys/banner/detail\", \"/sys/banner/page\", \"/sys/banner/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:12:33', '1');
INSERT INTO `sys_menu` VALUES ('102', '100', 'notice', '/content/notice', '/modular/sys/notice/index.vue', '公告管理', 'icon-park-outline:volume-notice', 0, 1, 2, 0, 1, '[\"/sys/notice/add\", \"/sys/notice/delete\", \"/sys/notice/detail\", \"/sys/notice/page\", \"/sys/notice/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:12:45', '1');
INSERT INTO `sys_menu` VALUES ('103', '10019', 'role', '/system/role', '/modular/sys/role/index.vue', '角色管理', 'icon-park-outline:people-safe', 0, 1, 2, 0, 1, '[\"/sys/role/add\", \"/sys/role/delete\", \"/sys/role/detail\", \"/sys/role/page\", \"/sys/role/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:13:06', '1');
INSERT INTO `sys_menu` VALUES ('104', '10019', 'user', '/system/user', '/modular/sys/user/index.vue', '用户管理', 'icon-park-outline:user', 0, 1, 1, 0, 1, '[\"/sys/user/add\", \"/sys/user/delete\", \"/sys/user/detail\", \"/sys/user/page\", \"/sys/user/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:12:58', '1');
INSERT INTO `sys_menu` VALUES ('105', '10019', 'group', '/system/group', '/modular/sys/group/index.vue', '用户组管理', 'icon-park-outline:peoples', 0, 1, 3, 0, 1, '[\"/sys/group/add\", \"/sys/group/delete\", \"/sys/group/detail\", \"/sys/group/page\", \"/sys/group/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:13:13', '1');
INSERT INTO `sys_menu` VALUES ('10574', '10019', 'config', '/system/config', '/modular/sys/config/index.vue', '环境变量', 'icon-park-outline:enter-the-keyboard', 0, 1, 4, 0, 1, '[\"/sys/config/add\", \"/sys/config/delete\", \"/sys/config/detail\", \"/sys/config/page\", \"/sys/config/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:13:25', '1');
INSERT INTO `sys_menu` VALUES ('106', '10019', 'dict', '/system/dict', '/modular/sys/dict/index.vue', '字典管理', 'icon-park-outline:book', 0, 1, 5, 0, 1, '[\"/sys/dict/add\", \"/sys/dict/delete\", \"/sys/dict/detail\", \"/sys/dict/page\", \"/sys/dict/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:13:34', '1');
INSERT INTO `sys_menu` VALUES ('107', '10019', 'menu', '/system/menu', '/modular/sys/menu/index.vue', '菜单管理', 'icon-park-outline:application-menu', 0, 1, 6, 0, 1, '[\"/sys/menu/add\", \"/sys/menu/delete\", \"/sys/menu/detail\", \"/sys/menu/page\", \"/sys/menu/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:13:44', '1');
INSERT INTO `sys_menu` VALUES ('2', '0', 'dashboard', '/dashboard', '/dashboard/index.vue', '仪表盘', 'icon-park-outline:dashboard', 0, 1, 2, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, NULL, NULL);
INSERT INTO `sys_menu` VALUES ('3', '0', 'category', '/category', '/modular/sys/category/index.vue', '分类管理', 'icon-park-outline:category-management', 0, 1, 5, 0, 1, '[\"/sys/category/delete\", \"/sys/category/add\", \"/sys/category/detail\", \"/sys/category/page\", \"/sys/category/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:13:52', '1');
INSERT INTO `sys_menu` VALUES ('300', '0', 'problem_index', '/problem', NULL, '题目管理', 'icon-park-outline:edit', 0, 0, 99, 0, 0, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:18:12', '1');
INSERT INTO `sys_menu` VALUES ('301', '0', 'problem', '/problem/list', '/modular/data/problem/index.vue', '题目列表', 'icon-park-outline:list', 0, 1, 7, 0, 1, '[\"/data/problem/add\", \"/data/problem/delete\", \"/data/problem/detail\", \"/data/problem/page\", \"/data/problem/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:14:10', '1');
INSERT INTO `sys_menu` VALUES ('302', '0', 'submit', '/submit', '/modular/data/submit/index.vue', '用户提交', 'icon-park-outline:upload', 0, 1, 9, 0, 1, '[\"/data/submit/add\", \"/data/submit/delete\", \"/data/submit/detail\", \"/data/submit/page\", \"/data/submit/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:14:26', '1');
INSERT INTO `sys_menu` VALUES ('303', '0', 'solved', '/solved', '/modular/data/solved/index.vue', '解决记录', 'icon-park-outline:checklist', 0, 1, 10, 0, 1, '[\"/data/solved/delete\", \"/data/solved/add\", \"/data/solved/detail\", \"/data/solved/page\", \"/data/solved/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:14:34', '1');
INSERT INTO `sys_menu` VALUES ('304', '300', 'problem_rank', '/problem/pranking', '/modular/problem/pranking/index.vue', '题目排行榜', 'icon-park-outline:ranking', 0, 0, 4, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:09:10', '1');
INSERT INTO `sys_menu` VALUES ('305', '300', 'problem_user_rank', '/problem/puranking', '/modular/problem/puranking/index.vue', '用户排行榜', 'icon-park-outline:ranking', 0, 0, 5, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:09:14', '1');
INSERT INTO `sys_menu` VALUES ('306', '0', 'library', '/data/library', '/modular/data/library/index.vue', '代码样本库', 'icon-park-outline:data-file', 0, 1, 11, 0, 1, '[\"/data/library/add\", \"/data/library/delete\", \"/data/library/detail\", \"/data/library/page\", \"/data/library/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:14:48', '1');
INSERT INTO `sys_menu` VALUES ('4', '0', 'tag', '/tag', '/modular/sys/tag/index.vue', '标签管理', 'icon-park-outline:tag', 0, 1, 6, 0, 1, '[\"/sys/tag/add\", \"/sys/tag/delete\", \"/sys/tag/detail\", \"/sys/tag/page\", \"/sys/tag/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:14:01', '1');
INSERT INTO `sys_menu` VALUES ('400', '0', 'set_index', '/set', NULL, '题集管理', 'icon-park-outline:folder', 0, 0, 99, 0, 0, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:18:07', '1');
INSERT INTO `sys_menu` VALUES ('401', '0', 'set', '/set/list', '/modular/data/set/index.vue', '题集列表', 'icon-park-outline:list', 0, 1, 8, 0, 1, '[\"/data/set/add\", \"/data/set/delete\", \"/data/set/detail\", \"/data/set/page\", \"/data/set/edit\"]', 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:14:18', '1');
INSERT INTO `sys_menu` VALUES ('402', '400', 'set_submit', '/set/submit', '/modular/set/submit/index.vue', '题集提交', 'icon-park-outline:upload', 0, 0, 2, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:15:12', '1');
INSERT INTO `sys_menu` VALUES ('403', '400', 'set_solved', '/set/solved', '/modular/set/solved/index.vue', '解决记录', 'icon-park-outline:checklist', 0, 0, 3, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:15:09', '1');
INSERT INTO `sys_menu` VALUES ('404', '400', 'set_progress', '/set/progress', '/modular/set/progress/index.vue', '进度监控', 'icon-park-outline:ranking', 0, 0, 4, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:15:07', '1');
INSERT INTO `sys_menu` VALUES ('405', '400', 'set_ranking', '/set/sranking', '/modular/set/sranking/index.vue', '题集排行榜', 'icon-park-outline:ranking', 0, 0, 5, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:15:03', '1');
INSERT INTO `sys_menu` VALUES ('406', '400', 'set_sample', '/set/sample', '/modular/set/sample/index.vue', '相似样本库', 'icon-park-outline:data-file', 0, 0, 7, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:15:01', '1');
INSERT INTO `sys_menu` VALUES ('407', '0', 'similarity', '/task/similarity', '/modular/data/similarity/index.vue', '检测任务详情', 'icon-park-outline:accept-email', 0, 1, 12, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 12:42:02', '1');
INSERT INTO `sys_menu` VALUES ('500', '0', 'reports', '/reports', '/modular/reports/index.vue', '检测报告', 'icon-park-outline:database-download', 0, 0, 99, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:18:02', '1');
INSERT INTO `sys_menu` VALUES ('600', '0', 'mine', '/mine', NULL, '个人中心', 'icon-park-outline:user', 0, 0, 99, 0, 0, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:18:05', '1');
INSERT INTO `sys_menu` VALUES ('700', '0', 'about', '/about', '/about.vue', '关于', 'icon-park-outline:info', 0, 1, 80, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:20:12', '1');
INSERT INTO `sys_menu` VALUES ('7870', '0', 'report', '/problem/submit/report/:reportId/task/:taskId', '/modular/problem/submit/report.vue', '检测报告详情', 'icon-park-outline:info', 0, 0, 99, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:17:56', '1');
INSERT INTO `sys_menu` VALUES ('800', '0', 'test-1', '/test-1', '/modular/test/test1.vue', 'Test-1', 'icon-park-outline:info', 0, 0, 99, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:17:53', '1');
INSERT INTO `sys_menu` VALUES ('801', '0', 'test-2', '/test-2', '/modular/test/test2.vue', 'Test-2', 'icon-park-outline:info', 0, 0, 99, 0, 1, NULL, 0, '2025-09-24 13:30:02', NULL, '2025-09-25 10:17:50', '1');

-- ----------------------------
-- Table structure for sys_notice
-- ----------------------------
DROP TABLE IF EXISTS `sys_notice`;
CREATE TABLE `sys_notice`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `title` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '标题',
  `cover` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '封面',
  `url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '链接',
  `sort` tinyint NULL DEFAULT 99 COMMENT '排序',
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL COMMENT '内容',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  `is_visible` tinyint(1) NULL DEFAULT 1 COMMENT '是否可见',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '公告表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_notice
-- ----------------------------
INSERT INTO `sys_notice` VALUES ('1951821122141634562', '系统升级维护通知', 'http://localhost:93/oj/api/v1/sys/file/9170c9e0-4126-4e1b-a55c-c729e44cd4a0.png', 'qweqwe', 2, '尊敬的OJ用户：\n为提升系统稳定性与性能，平台将于 2025 年 9 月 6 日 00:00 至 6:00 进行全站升级维护。期间所有功能（包括提交、评测、排名等）将暂停服务，请提前保存代码或调整训练计划。\n\n如有疑问请联系客服邮箱：jiangbyte@163.com。感谢您的理解与支持！\n\nAstro Code OJ 平台运营团队\n2025 年 9 月 5 日', 0, '2025-09-04 16:27:51', '1', '2025-09-21 09:04:13', '1965337457379221506', 1);
INSERT INTO `sys_notice` VALUES ('1969568377455980546', 'qweqwe', 'http://localhost:93/oj/api/v1/sys/file/2f1f753e-5fc7-4965-86ba-9eba9c0652cf.jpg', '', 1, 'qweqwe', 0, '2025-09-21 09:04:29', '1965337457379221506', '2025-09-21 09:04:43', '1965337457379221506', 1);
INSERT INTO `sys_notice` VALUES ('1969569527982931970', '123123', 'http://localhost:93/oj/api/v1/sys/file/db6f17cb-fef4-4b96-83a4-19adbce7d33e.jpg', '', 2, '# saDASdasd\n\nasdasd', 0, '2025-09-21 09:09:03', '1965337457379221506', '2025-09-21 09:09:03', '1965337457379221506', 0);

-- ----------------------------
-- Table structure for sys_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_role`;
CREATE TABLE `sys_role`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '名称',
  `code` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '编码',
  `description` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '描述',
  `level` int NULL DEFAULT 5 COMMENT '角色层级',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `idx_role_code`(`code` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '角色表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_role
-- ----------------------------
INSERT INTO `sys_role` VALUES ('1', '超级管理员', 'SUPER', '超级管理员', 99, 0, NULL, NULL, '2025-08-27 21:26:22', '1');
INSERT INTO `sys_role` VALUES ('2', '普通管理员', 'ADMIN', '管理员', 2, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_role` VALUES ('3', '子组管理员', 'ADMIN_GROUP', '用户组管理员以及子组管理员', 3, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_role` VALUES ('4', '用户组管理员', 'GROUP', '用户组管理员', 4, 0, NULL, NULL, NULL, NULL);
INSERT INTO `sys_role` VALUES ('5', '普通用户', 'USER', '普通用户', 5, 0, NULL, NULL, NULL, NULL);

-- ----------------------------
-- Table structure for sys_role_menu
-- ----------------------------
DROP TABLE IF EXISTS `sys_role_menu`;
CREATE TABLE `sys_role_menu`  (
  `role_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '角色ID',
  `menu_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '菜单ID'
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '角色-菜单 关联表(1-N)' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_role_menu
-- ----------------------------
INSERT INTO `sys_role_menu` VALUES ('1', '1');

-- ----------------------------
-- Table structure for sys_tag
-- ----------------------------
DROP TABLE IF EXISTS `sys_tag`;
CREATE TABLE `sys_tag`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '名称',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '标签表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_tag
-- ----------------------------
INSERT INTO `sys_tag` VALUES ('1961376491493249026', '枚举', 0, '2025-08-29 18:32:51', '0', '2025-08-29 18:32:59', '0');
INSERT INTO `sys_tag` VALUES ('1961376543280320514', '暴力', 0, '2025-08-29 18:33:03', '0', '2025-08-29 18:33:03', '0');
INSERT INTO `sys_tag` VALUES ('1961376569452777474', '贪心', 0, '2025-08-29 18:33:09', '0', '2025-08-29 18:33:09', '0');
INSERT INTO `sys_tag` VALUES ('1961376596086607874', '分治', 0, '2025-08-29 18:33:16', '0', '2025-08-29 18:33:16', '0');
INSERT INTO `sys_tag` VALUES ('1961376614860312578', '递归', 0, '2025-08-29 18:33:20', '0', '2025-08-29 18:33:20', '0');
INSERT INTO `sys_tag` VALUES ('1961376633172643841', '回溯', 0, '2025-08-29 18:33:25', '0', '2025-08-29 18:33:25', '0');
INSERT INTO `sys_tag` VALUES ('1961376650738388994', '线性DP', 0, '2025-08-29 18:33:29', '0', '2025-08-29 18:33:29', '0');
INSERT INTO `sys_tag` VALUES ('1961376664239853569', '区间DP', 0, '2025-08-29 18:33:32', '0', '2025-08-29 18:33:32', '0');
INSERT INTO `sys_tag` VALUES ('1961376676902457346', '树形DP', 0, '2025-08-29 18:33:35', '0', '2025-08-29 18:33:35', '0');
INSERT INTO `sys_tag` VALUES ('1961376695382560769', '状态压缩DP', 0, '2025-08-29 18:33:39', '0', '2025-08-29 18:33:39', '0');
INSERT INTO `sys_tag` VALUES ('1961376708460400641', '数位DP', 0, '2025-08-29 18:33:43', '0', '2025-08-29 18:33:43', '0');
INSERT INTO `sys_tag` VALUES ('1961376723371151361', '概率DP', 0, '2025-08-29 18:33:46', '0', '2025-08-29 18:33:46', '0');
INSERT INTO `sys_tag` VALUES ('1961376741129834498', '动态规划', 0, '2025-08-29 18:33:50', '0', '2025-08-29 18:33:50', '0');
INSERT INTO `sys_tag` VALUES ('1961376762793414658', '二分查找', 0, '2025-08-29 18:33:56', '0', '2025-08-29 18:33:56', '0');
INSERT INTO `sys_tag` VALUES ('1961376781583896577', '深度优先搜索', 0, '2025-08-29 18:34:00', '0', '2025-08-29 18:34:00', '0');
INSERT INTO `sys_tag` VALUES ('1961376798084288514', '广度优先搜索', 0, '2025-08-29 18:34:04', '0', '2025-08-29 18:34:04', '0');
INSERT INTO `sys_tag` VALUES ('1961376812613357569', '双向BFS', 0, '2025-08-29 18:34:07', '0', '2025-08-29 18:34:07', '0');
INSERT INTO `sys_tag` VALUES ('1961376834037862401', '启发式搜索', 0, '2025-08-29 18:34:13', '0', '2025-08-29 18:34:13', '0');
INSERT INTO `sys_tag` VALUES ('1961376848051032066', '搜索', 0, '2025-08-29 18:34:16', '0', '2025-08-29 18:34:16', '0');
INSERT INTO `sys_tag` VALUES ('1961376896449105922', '数组', 0, '2025-08-29 18:34:27', '0', '2025-08-29 18:34:27', '0');
INSERT INTO `sys_tag` VALUES ('1961376910370000898', '链表', 0, '2025-08-29 18:34:31', '0', '2025-08-29 18:34:31', '0');
INSERT INTO `sys_tag` VALUES ('1961376923049381889', '栈', 0, '2025-08-29 18:34:34', '0', '2025-08-29 18:34:34', '0');
INSERT INTO `sys_tag` VALUES ('1961376938715107329', '队列', 0, '2025-08-29 18:34:37', '0', '2025-08-29 18:34:37', '0');
INSERT INTO `sys_tag` VALUES ('1961376957023244290', '哈希表', 0, '2025-08-29 18:34:42', '0', '2025-08-29 18:34:42', '0');
INSERT INTO `sys_tag` VALUES ('1961376972177264642', '集合', 0, '2025-08-29 18:34:45', '0', '2025-08-29 18:34:45', '0');
INSERT INTO `sys_tag` VALUES ('1961376995774418945', '堆', 0, '2025-08-29 18:34:51', '0', '2025-08-29 18:34:51', '0');
INSERT INTO `sys_tag` VALUES ('1961377010022469633', '优先队列', 0, '2025-08-29 18:34:54', '0', '2025-08-29 18:34:54', '0');
INSERT INTO `sys_tag` VALUES ('1961377065773158401', '二叉树', 0, '2025-08-29 18:35:08', '0', '2025-08-29 18:35:08', '0');
INSERT INTO `sys_tag` VALUES ('1961377078116995074', '二叉搜索树', 0, '2025-08-29 18:35:11', '0', '2025-08-29 18:35:11', '0');
INSERT INTO `sys_tag` VALUES ('1961377096001507329', '字典树', 0, '2025-08-29 18:35:15', '0', '2025-08-29 18:35:15', '0');
INSERT INTO `sys_tag` VALUES ('1961377110895480833', '线段树', 0, '2025-08-29 18:35:19', '0', '2025-08-29 18:35:19', '0');
INSERT INTO `sys_tag` VALUES ('1961377126439571457', '树状数组', 0, '2025-08-29 18:35:22', '0', '2025-08-29 18:35:22', '0');
INSERT INTO `sys_tag` VALUES ('1961377142193377282', '并查集', 0, '2025-08-29 18:35:26', '0', '2025-08-29 18:35:26', '0');
INSERT INTO `sys_tag` VALUES ('1961377597183086594', '树', 0, '2025-08-29 18:37:14', '0', '2025-08-29 18:37:14', '0');
INSERT INTO `sys_tag` VALUES ('1961377610244149250', '图的遍历', 0, '2025-08-29 18:37:18', '0', '2025-08-29 18:37:18', '0');
INSERT INTO `sys_tag` VALUES ('1961377628619395074', '最短路', 0, '2025-08-29 18:37:22', '0', '2025-08-29 18:37:22', '0');
INSERT INTO `sys_tag` VALUES ('1961377642552872961', '最小生成树', 0, '2025-08-29 18:37:25', '0', '2025-08-29 18:37:25', '0');
INSERT INTO `sys_tag` VALUES ('1961377656079503361', '拓扑排序', 0, '2025-08-29 18:37:29', '0', '2025-08-29 18:37:29', '0');
INSERT INTO `sys_tag` VALUES ('1961377670222696450', '强连通分量', 0, '2025-08-29 18:37:32', '0', '2025-08-29 18:37:32', '0');
INSERT INTO `sys_tag` VALUES ('1961377684449775618', '割点', 0, '2025-08-29 18:37:35', '0', '2025-08-29 18:37:35', '0');
INSERT INTO `sys_tag` VALUES ('1961377697028493313', '桥', 0, '2025-08-29 18:37:38', '0', '2025-08-29 18:37:38', '0');
INSERT INTO `sys_tag` VALUES ('1961377713495330817', '图', 0, '2025-08-29 18:37:42', '0', '2025-08-29 18:37:42', '0');
INSERT INTO `sys_tag` VALUES ('1961377777739485186', '字符串匹配', 0, '2025-08-29 18:37:58', '0', '2025-08-29 18:37:58', '0');
INSERT INTO `sys_tag` VALUES ('1961379934161195009', '算术运算', 0, '2025-08-29 18:46:32', '0', '2025-08-29 18:46:32', '0');
INSERT INTO `sys_tag` VALUES ('1961379956156125185', '输入输出', 0, '2025-08-29 18:46:37', '0', '2025-08-29 18:46:37', '0');
INSERT INTO `sys_tag` VALUES ('1961380044479778818', '模拟', 0, '2025-08-29 18:46:58', '0', '2025-08-29 18:46:58', '0');
INSERT INTO `sys_tag` VALUES ('1961380061173108737', '入门', 0, '2025-08-29 18:47:02', '0', '2025-08-29 18:47:02', '0');
INSERT INTO `sys_tag` VALUES ('1970789316407529474', '123123', 1, '2025-09-24 17:56:03', '0', '2025-09-24 17:56:08', '0');

-- ----------------------------
-- Table structure for sys_user
-- ----------------------------
DROP TABLE IF EXISTS `sys_user`;
CREATE TABLE `sys_user`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `group_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '用户组',
  `username` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '用户名',
  `password` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '密码',
  `nickname` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '昵称',
  `avatar` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '头像',
  `background` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '背景图片',
  `quote` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '签名',
  `gender` tinyint(1) NULL DEFAULT 0 COMMENT '性别',
  `email` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '邮箱',
  `student_number` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '学号',
  `telephone` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '电话',
  `login_time` datetime NULL DEFAULT NULL COMMENT '登录时间',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `idx_username`(`username` ASC) USING BTREE,
  INDEX `idx_telephone`(`telephone` ASC) USING BTREE,
  INDEX `idx_email`(`email` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '用户表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_user
-- ----------------------------
INSERT INTO `sys_user` VALUES ('0', '0', 'DEFAULT', '$2a$10$CGf0BGdflI3iG6Fl83Vjz.kE.XdhMSu.sstPIeNI.9WFz8FR/lmS.', 'Astro Code', 'http://localhost:93/oj/api/v1/sys/file/4278a388-79b9-4bfe-8983-42730fa76067.jpg', 'http://localhost:93/oj/api/v1/sys/file/50b47394-240a-4a9b-92a3-cdfe480b53d2.jpg', 'Hello World!', 0, 'Hello@163.com', NULL, '1324567899', NULL, 0, '2025-09-05 16:01:01', '0', '2025-09-24 22:50:48', '1');
INSERT INTO `sys_user` VALUES ('1', '0', 'superadmin', '$2a$10$TePd3nIT3FJguI2Vp4BdfuqWONoa6xnIyK5QnHak.s3DT/8N9CXSS', '超级管理员', 'http://localhost:93/oj/api/v1/sys/file/1384201d-bd91-492c-b8d8-b292fca85334.png', 'http://localhost:93/oj/api/v1/sys/file/eb39029a-01f6-40ab-b275-b24e7a3f0685.png', '系统超级管理员', 0, 'super@example.com', '2022402084', '13800000000', '2025-09-25 12:00:33', 0, '2025-09-04 01:19:25', '1', '2025-09-25 12:00:33', '1');
INSERT INTO `sys_user` VALUES ('1965337457379221506', '0', 'superadmin123', '$2a$10$f36J8Ud7fwKeEjmf6YamneeNIHXdcgNifxEEDUXByMcwHqDRKWgAa', '大用户', 'http://localhost:93/oj/api/v1/sys/file/6a04a903-6fea-453d-b588-37aafa6c0cb2.jpg', 'http://localhost:93/oj/api/v1/sys/file/ed3d5b09-37d6-4254-9221-5e7a2d70567e.png', 'Hello World!', 0, 'superadmin@163.com', NULL, '7894651', '2025-09-24 23:57:22', 0, '2025-09-09 16:52:19', '0', '2025-09-24 23:57:22', '0');
INSERT INTO `sys_user` VALUES ('2', '0', 'admin', '$2a$10$TePd3nIT3FJguI2Vp4BdfuqWONoa6xnIyK5QnHak.s3DT/8N9CXSS', '管理员', 'http://localhost:93/oj/api/v1/sys/file/312c79f7-cc76-4d6c-9122-a96c600878f0.jpg', 'http://localhost:93/oj/api/v1/sys/file/b3d3efda-6995-46d7-813d-122e1ca5461b.png', '系统普通管理员', 1, 'admin@example.com', '2022402085', '13800000001', NULL, 0, '2025-09-04 01:19:25', '1', '2025-09-25 11:04:15', '1');

-- ----------------------------
-- Table structure for sys_user_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_user_role`;
CREATE TABLE `sys_user_role`  (
  `user_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '用户ID',
  `role_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '角色ID'
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '用户-角色 关联表(1-N)' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_user_role
-- ----------------------------
INSERT INTO `sys_user_role` VALUES ('1', '1');
INSERT INTO `sys_user_role` VALUES ('1', '2');
INSERT INTO `sys_user_role` VALUES ('1', '3');
INSERT INTO `sys_user_role` VALUES ('2', '2');
INSERT INTO `sys_user_role` VALUES ('2', '3');
INSERT INTO `sys_user_role` VALUES ('3', '3');

-- ----------------------------
-- Table structure for task_reports
-- ----------------------------
DROP TABLE IF EXISTS `task_reports`;
CREATE TABLE `task_reports`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `report_type` int NOT NULL DEFAULT 0 COMMENT '报告类型',
  `task_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '任务ID',
  `set_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '题集ID',
  `is_set` tinyint(1) NULL DEFAULT 0 COMMENT '是否是题集提交',
  `problem_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '题目ID',
  `sample_count` int NULL DEFAULT 0 COMMENT '样例数量',
  `similarity_group_count` int NULL DEFAULT 0 COMMENT '相似组数量',
  `avg_similarity` decimal(10, 2) UNSIGNED NULL DEFAULT 0.00 COMMENT '平均相似度',
  `max_similarity` decimal(10, 2) UNSIGNED NULL DEFAULT 0.00 COMMENT '最大相似度',
  `threshold` decimal(10, 2) UNSIGNED NULL DEFAULT 0.50 COMMENT '检测阈值',
  `similarity_distribution` json NULL COMMENT '相似度分布',
  `degree_statistics` json NULL COMMENT '程度统计',
  `check_mode` int NULL DEFAULT 1 COMMENT '检测模式',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '报告库表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of task_reports
-- ----------------------------
INSERT INTO `task_reports` VALUES ('1971081804007587841', 1, '1971081803478835200', NULL, 0, '1958869993346752514', 1, 0, 1.00, 1.00, 0.80, '[0, 0, 0, 0, 0, 0, 0, 0, 0, 1]', '[{\"count\": 1, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 100.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 0, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 0.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 13:18:18', '0', '2025-09-25 13:18:18', '0');
INSERT INTO `task_reports` VALUES ('1971090379333378051', 1, '1971090378469097472', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 13:52:22', '0', '2025-09-25 13:52:22', '0');
INSERT INTO `task_reports` VALUES ('1971090391983398914', 1, '1971090391806984192', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 13:52:25', '0', '2025-09-25 13:52:25', '0');
INSERT INTO `task_reports` VALUES ('1971090595918848001', 1, '1971090595771793408', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 13:53:14', '0', '2025-09-25 13:53:14', '0');
INSERT INTO `task_reports` VALUES ('1971092230590111745', 1, '1971092230325616640', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 13:59:44', '0', '2025-09-25 13:59:44', '0');
INSERT INTO `task_reports` VALUES ('1971093512583286785', 1, '1971093511853223936', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:04:49', '0', '2025-09-25 14:04:49', '0');
INSERT INTO `task_reports` VALUES ('1971093523287150594', 1, '1971093523148484608', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:04:52', '0', '2025-09-25 14:04:52', '0');
INSERT INTO `task_reports` VALUES ('1971094107788574722', 1, '1971094106655858688', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:07:11', '0', '2025-09-25 14:07:11', '0');
INSERT INTO `task_reports` VALUES ('1971094128277749762', 1, '1971094128113917952', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:07:16', '0', '2025-09-25 14:07:16', '0');
INSERT INTO `task_reports` VALUES ('1971094380317712386', 1, '1971094379235328000', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:08:16', '0', '2025-09-25 14:08:16', '0');
INSERT INTO `task_reports` VALUES ('1971094388924424194', 1, '1971094388785758208', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:08:18', '0', '2025-09-25 14:08:18', '0');
INSERT INTO `task_reports` VALUES ('1971094412798402561', 1, '1971094412655542272', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:08:24', '0', '2025-09-25 14:08:24', '0');
INSERT INTO `task_reports` VALUES ('1971094730474958849', 1, '1971094729556152320', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:09:40', '0', '2025-09-25 14:09:40', '0');
INSERT INTO `task_reports` VALUES ('1971094741174628355', 1, '1971094741014990848', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:09:42', '0', '2025-09-25 14:09:42', '0');
INSERT INTO `task_reports` VALUES ('1971094749986861058', 1, '1971094749806252032', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:09:44', '0', '2025-09-25 14:09:44', '0');
INSERT INTO `task_reports` VALUES ('1971094758866202626', 1, '1971094758719148032', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:09:46', '0', '2025-09-25 14:09:46', '0');
INSERT INTO `task_reports` VALUES ('1971095237180465153', 1, '1971095236198744064', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:11:40', '0', '2025-09-25 14:11:40', '0');
INSERT INTO `task_reports` VALUES ('1971095248588972034', 1, '1971095248374808576', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:11:43', '0', '2025-09-25 14:11:43', '0');
INSERT INTO `task_reports` VALUES ('1971095256906276866', 1, '1971095256713084928', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:11:45', '0', '2025-09-25 14:11:45', '0');
INSERT INTO `task_reports` VALUES ('1971095263755575299', 1, '1971095263604326400', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:11:47', '0', '2025-09-25 14:11:47', '0');
INSERT INTO `task_reports` VALUES ('1971095292792741890', 1, '1971095292603744256', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:11:54', '0', '2025-09-25 14:11:54', '0');
INSERT INTO `task_reports` VALUES ('1971096358913515521', 1, '1971096358762266624', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:16:08', '0', '2025-09-25 14:16:08', '0');
INSERT INTO `task_reports` VALUES ('1971098568074403842', 1, '1971098567952515072', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:24:55', '0', '2025-09-25 14:24:55', '0');
INSERT INTO `task_reports` VALUES ('1971098577029242881', 1, '1971098576903159808', NULL, 0, '1958869993346752514', 1, 0, 0.40, 0.40, 0.80, '[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]', '[{\"count\": 0, \"cloneLevel\": \"HIGHLY_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.94, \"cloneLevelName\": \"高度可疑\"}, {\"count\": 0, \"cloneLevel\": \"MEDIUM_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.9, \"cloneLevelName\": \"中度可疑\"}, {\"count\": 0, \"cloneLevel\": \"LOW_SUSPECTED\", \"percentage\": 0.0, \"similarity\": 0.84, \"cloneLevelName\": \"轻度可疑\"}, {\"count\": 1, \"cloneLevel\": \"NOT_REACHED\", \"percentage\": 100.0, \"similarity\": 0.8, \"cloneLevelName\": \"未达阈值\"}]', 1, 0, '2025-09-25 14:24:57', '0', '2025-09-25 14:24:57', '0');

-- ----------------------------
-- Table structure for task_similarity
-- ----------------------------
DROP TABLE IF EXISTS `task_similarity`;
CREATE TABLE `task_similarity`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '主键',
  `task_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '任务ID',
  `task_type` tinyint(1) NULL DEFAULT 0 COMMENT '手动',
  `problem_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '题目ID',
  `set_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '题集ID',
  `is_set` tinyint(1) NULL DEFAULT 0 COMMENT '是否是题集提交',
  `language` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '编程语言',
  `similarity` decimal(10, 2) UNSIGNED NULL DEFAULT 0.00 COMMENT '相似度',
  `submit_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '提交用户',
  `submit_code` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL COMMENT '源代码',
  `submit_code_length` int NULL DEFAULT 0 COMMENT '源代码长度',
  `submit_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '提交ID',
  `submit_time` datetime NULL DEFAULT NULL COMMENT '提交时间',
  `submit_token_name` json NULL COMMENT '提交用户Token名称',
  `submit_token_texts` json NULL COMMENT '提交用户Token内容',
  `origin_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '样本用户',
  `origin_code` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL COMMENT '样本源代码',
  `origin_code_length` int NULL DEFAULT 0 COMMENT '样本源代码长度',
  `origin_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '样本提交ID',
  `origin_time` datetime NULL DEFAULT NULL COMMENT '样本提交时间',
  `origin_token_name` json NULL COMMENT '样本用户Token名称',
  `origin_token_texts` json NULL COMMENT '样本用户Token内容',
  `deleted` tinyint(1) NULL DEFAULT 0 COMMENT '删除状态',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间戳',
  `create_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间戳',
  `update_user` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新者',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = '检测结果任务库' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of task_similarity
-- ----------------------------
INSERT INTO `task_similarity` VALUES ('1971081803944673281', '1971081803478835200', 0, '1958869993346752514', NULL, 0, 'cpp', 1.00, '1', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971081800782168065', '2025-09-25 13:18:17', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 13:18:18', '0', '2025-09-25 13:18:18', '0');
INSERT INTO `task_similarity` VALUES ('1971090379333378050', '1971090378469097472', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971090376254758913', '2025-09-25 13:52:21', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 13:52:22', '0', '2025-09-25 13:52:22', '0');
INSERT INTO `task_similarity` VALUES ('1971090391920484354', '1971090391806984192', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971090389538119682', '2025-09-25 13:52:25', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 13:52:25', '0', '2025-09-25 13:52:25', '0');
INSERT INTO `task_similarity` VALUES ('1971090595851739138', '1971090595771793408', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971090593872027649', '2025-09-25 13:53:13', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 13:53:14', '0', '2025-09-25 13:53:14', '0');
INSERT INTO `task_similarity` VALUES ('1971092230523002881', '1971092230325616640', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971092227985448961', '2025-09-25 13:59:43', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 13:59:44', '0', '2025-09-25 13:59:44', '0');
INSERT INTO `task_similarity` VALUES ('1971093512528760833', '1971093511853223936', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971093509164929025', '2025-09-25 14:04:48', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:04:49', '0', '2025-09-25 14:04:49', '0');
INSERT INTO `task_similarity` VALUES ('1971093523224236034', '1971093523148484608', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971093521026420737', '2025-09-25 14:04:51', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:04:52', '0', '2025-09-25 14:04:52', '0');
INSERT INTO `task_similarity` VALUES ('1971094107788574721', '1971094106655858688', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971094104219222017', '2025-09-25 14:07:10', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:07:11', '0', '2025-09-25 14:07:11', '0');
INSERT INTO `task_similarity` VALUES ('1971094128227418113', '1971094128113917952', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971094125811499009', '2025-09-25 14:07:15', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:07:16', '0', '2025-09-25 14:07:16', '0');
INSERT INTO `task_similarity` VALUES ('1971094380267380738', '1971094379235328000', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971094376924520449', '2025-09-25 14:08:15', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:08:16', '0', '2025-09-25 14:08:16', '0');
INSERT INTO `task_similarity` VALUES ('1971094388924424193', '1971094388785758208', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971094386621751297', '2025-09-25 14:08:18', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:08:18', '0', '2025-09-25 14:08:18', '0');
INSERT INTO `task_similarity` VALUES ('1971094412735488002', '1971094412655542272', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971094410290208770', '2025-09-25 14:08:23', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:08:24', '0', '2025-09-25 14:08:24', '0');
INSERT INTO `task_similarity` VALUES ('1971094730412044290', '1971094729556152320', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971094727144681474', '2025-09-25 14:09:39', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:09:40', '0', '2025-09-25 14:09:40', '0');
INSERT INTO `task_similarity` VALUES ('1971094741174628354', '1971094741014990848', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971094738653851650', '2025-09-25 14:09:42', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:09:42', '0', '2025-09-25 14:09:42', '0');
INSERT INTO `task_similarity` VALUES ('1971094749919752193', '1971094749806252032', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971094747742908418', '2025-09-25 14:09:44', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:09:44', '0', '2025-09-25 14:09:44', '0');
INSERT INTO `task_similarity` VALUES ('1971094758866202625', '1971094758719148032', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971094756668387329', '2025-09-25 14:09:46', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:09:46', '0', '2025-09-25 14:09:46', '0');
INSERT INTO `task_similarity` VALUES ('1971095237117550594', '1971095236198744064', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971095233015521281', '2025-09-25 14:11:39', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:11:40', '0', '2025-09-25 14:11:40', '0');
INSERT INTO `task_similarity` VALUES ('1971095248526057473', '1971095248374808576', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971095245925588994', '2025-09-25 14:11:42', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:11:43', '0', '2025-09-25 14:11:43', '0');
INSERT INTO `task_similarity` VALUES ('1971095256851750913', '1971095256713084928', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971095254544883713', '2025-09-25 14:11:45', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:11:45', '0', '2025-09-25 14:11:45', '0');
INSERT INTO `task_similarity` VALUES ('1971095263755575298', '1971095263604326400', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971095261398376450', '2025-09-25 14:11:46', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:11:47', '0', '2025-09-25 14:11:47', '0');
INSERT INTO `task_similarity` VALUES ('1971095292725633026', '1971095292603744256', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971095290431348737', '2025-09-25 14:11:53', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:11:54', '0', '2025-09-25 14:11:54', '0');
INSERT INTO `task_similarity` VALUES ('1971096358846406658', '1971096358762266624', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971096355625181186', '2025-09-25 14:16:07', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:16:08', '0', '2025-09-25 14:16:08', '0');
INSERT INTO `task_similarity` VALUES ('1971098568074403841', '1971098567952515072', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971098565595570177', '2025-09-25 14:24:54', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:24:55', '0', '2025-09-25 14:24:55', '0');
INSERT INTO `task_similarity` VALUES ('1971098576962134018', '1971098576903159808', 0, '1958869993346752514', NULL, 0, 'cpp', 0.40, '1', '// 前置代码\n#include <iostream>\nusing namespace std;\n\n// 模板代码\nclass Solution {\npublic:\n    int add(int a, int b) {\n        return a + b;\n    }\n};\n\n// 后置代码\nint main() {\n    int a, b;\n    cin >> a >> b;\n    \n    Solution sol;\n    cout << sol.add(a, b) << endl;\n    \n    return 0;\n}', 275, '1971098574760124417', '2025-09-25 14:24:56', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"cout\", \"<\", \"<\", \"a\", \"+\", \"b\", \";\", \"return\", \"0\", \";\", \"}\"]', '2', '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b;\r\n    cin >> a >> b;\r\n    cout << a + b;\r\n    return 0;\r\n}', 130, '1971079514089463809', '2025-09-25 13:02:08', '[\"Using\", \"Namespace\", \"Identifier\", \"Semi\", \"Class\", \"Identifier\", \"LeftBrace\", \"Public\", \"Colon\", \"Int\", \"Identifier\", \"LeftParen\", \"Int\", \"Identifier\", \"Comma\", \"Int\", \"Identifier\", \"RightParen\", \"LeftBrace\", \"Return\", \"Identifier\", \"Plus\", \"Identifier\", \"Semi\", \"RightBrace\", \"RightBrace\", \"Semi\", \"Int\", \"Identifier\", \"LeftParen\", \"RightParen\", \"LeftBrace\", \"Int\", \"Identifier\", \"Comma\", \"Identifier\", \"Semi\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Greater\", \"Greater\", \"Identifier\", \"Semi\", \"Identifier\", \"Identifier\", \"Semi\", \"Identifier\", \"Less\", \"Less\", \"Identifier\", \"Dot\", \"Identifier\", \"LeftParen\", \"Identifier\", \"Comma\", \"Identifier\", \"RightParen\", \"Less\", \"Less\", \"Identifier\", \"Semi\", \"Return\", \"IntegerLiteral\", \"Semi\", \"RightBrace\"]', '[\"using\", \"namespace\", \"std\", \";\", \"class\", \"Solution\", \"{\", \"public\", \":\", \"int\", \"add\", \"(\", \"int\", \"a\", \",\", \"int\", \"b\", \")\", \"{\", \"return\", \"a\", \"+\", \"b\", \";\", \"}\", \"}\", \";\", \"int\", \"main\", \"(\", \")\", \"{\", \"int\", \"a\", \",\", \"b\", \";\", \"cin\", \">\", \">\", \"a\", \">\", \">\", \"b\", \";\", \"Solution\", \"sol\", \";\", \"cout\", \"<\", \"<\", \"sol\", \".\", \"add\", \"(\", \"a\", \",\", \"b\", \")\", \"<\", \"<\", \"endl\", \";\", \"return\", \"0\", \";\", \"}\"]', 0, '2025-09-25 14:24:57', '0', '2025-09-25 14:24:57', '0');

SET FOREIGN_KEY_CHECKS = 1;
